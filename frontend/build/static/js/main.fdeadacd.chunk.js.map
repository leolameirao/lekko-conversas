{"version":3,"sources":["layout/themeContext.js","translate/languages/pt.js","translate/languages/index.js","translate/languages/en.js","translate/languages/es.js","translate/i18n.js","errors/toastError.js","services/api.js","services/socket.js","hooks/useWhatsApps/index.js","context/WhatsApp/WhatsAppsContext.js","hooks/useAuth.js/index.js","context/Auth/AuthContext.js","rules.js","components/Can/index.js","layout/MainListItems.js","components/ButtonWithSpinner/index.js","components/MarkdownWrapper/index.js","components/TicketListItem/index.js","hooks/useTickets/index.js","components/NotificationsPopOver/index.js","components/QueueSelect/index.js","components/UserModal/index.js","components/BackdropLoading/index.js","hooks/useDate/index.js","components/AnnouncementsPopover/index.js","pages/Chat/ChatPopover.js","layout/index.js","pages/Dashboard/Title.js","pages/Dashboard/Chart.js","components/Dashboard/CardCounter.js","components/Dashboard/TableAttendantsStatus.js","hooks/useDashboard/index.js","hooks/useCompanies/index.js","pages/Dashboard/index.js","components/ContactModal/index.js","components/NewTicketModal/index.js","context/Tickets/TicketsContext.js","components/VcardPreview/index.js","components/ModalImageCors/index.js","components/ConfirmationModal/index.js","context/ReplyingMessage/ReplyingMessageContext.js","components/MessageOptionsMenu/index.js","components/MessagesList/index.js","components/TicketHeaderSkeleton/index.js","components/TicketHeader/index.js","components/TicketInfo/index.js","components/TicketMessagesDialog/index.js","helpers/contrastColor.js","components/ContactTag/index.js","components/TicketListItemCustom/index.js","components/TicketsListSkeleton/index.js","components/TicketsListCustom/index.js","components/TicketsListGroup/index.js","components/TabPanel/index.js","components/TicketsQueueSelect/index.js","components/TagsFilter/index.js","components/UsersFilter/index.js","components/TicketsManagerTabs/index.js","components/ContactDrawerSkeleton/index.js","components/ContactForm/index.js","components/ContactNotesDialogListItem/index.js","hooks/useTicketNotes/index.js","components/ContactNotes/index.js","components/ContactDrawer/index.js","components/MessageInputCustom/RecordingTimer.js","hooks/useQuickMessages/index.js","components/MessageInputCustom/index.js","hooks/useLocalStorage/index.js","hooks/useQueues/index.js","components/TransferTicketModalCustom/index.js","components/ScheduleModal/index.js","components/TicketOptionsMenu/index.js","components/TicketActionButtonsCustom/index.js","components/TagsContainer/index.js","components/Ticket/index.js","pages/TicketsCustom/index.js","components/TicketAdvancedLayout/index.js","pages/TicketsAdvanced/index.js","pages/TicketResponsiveContainer/index.js","hooks/usePlans/index.js","pages/Signup/index.js","pages/Login/index.js","components/MainContainer/index.js","components/MainHeader/index.js","components/MainHeaderButtonsWrapper/index.js","components/Title/index.js","components/TableRowSkeleton/index.js","components/WhatsAppModal/index.js","components/QrcodeModal/index.js","pages/Connections/index.js","components/SchedulesForm/index.js","components/QueueSelectCustom/index.js","components/ModalUsers/index.js","components/CompaniesManager/index.js","components/CurrencyInput/index.js","components/PlansManager/index.js","hooks/useHelps/index.js","components/HelpsManager/index.js","hooks/useSettings/index.js","components/Settings/Options.js","components/OnlyForSuperUser/index.js","pages/SettingsCustom/index.js","components/FormFields/InputField.js","components/FormFields/SelectField.js","components/CheckoutPage/Forms/AddressForm.js","components/CheckoutPage/Forms/PaymentForm.js","components/CheckoutPage/ReviewOrder/styles.js","components/CheckoutPage/ReviewOrder/ShippingDetails.js","components/CheckoutPage/ReviewOrder/index.js","components/CheckoutPage/ReviewOrder/ReviewOrder.js","components/CheckoutPage/CheckoutSuccess/style.js","components/CheckoutPage/CheckoutSuccess/CheckoutSuccess.js","components/CheckoutPage/CheckoutSuccess/index.js","components/CheckoutPage/FormModel/checkoutFormModel.js","components/CheckoutPage/FormModel/validationSchema.js","components/CheckoutPage/FormModel/formInitialValues.js","components/CheckoutPage/styles.js","components/CheckoutPage/index.js","components/CheckoutPage/CheckoutPage.js","components/SubscriptionModal/index.js","pages/Financeiro/index.js","pages/Users/index.js","pages/Contacts/index.js","components/ColorPicker/index.js","components/QueueOptions/index.js","components/QueueModal/index.js","pages/Queues/index.js","components/TagModal/index.js","pages/Tags/index.js","pages/MessagesAPI/index.js","pages/Helps/index.js","components/ContactListDialog/index.js","pages/ContactLists/index.js","components/ContactListItemModal/index.js","hooks/useContactLists/index.js","pages/ContactListItems/index.js","components/QuickMessageDialog/index.js","pages/QuickMessages/index.js","routes/Route.js","pages/Schedules/index.js","components/CampaignModal/index.js","pages/Campaigns/index.js","pages/CampaignsConfig/index.js","pages/CampaignReport/index.js","components/AnnouncementModal/index.js","pages/Annoucements/index.js","pages/Chat/ChatList.js","pages/Chat/ChatMessages.js","pages/Chat/index.js","pages/Subscription/index.js","pages/Kanban/index.js","routes/index.js","App.js","index.js","assets/planilha.xlsx","assets/sound.mp3","assets/logo1.png","assets/chat_notify.mp3","assets/wa-background.png","assets/wa-background-dark.png","assets/logologin.png"],"names":["ColorModeContext","React","createContext","toggleColorMode","messages","pt","translations","signup","title","toasts","success","fail","form","name","email","password","buttons","submit","login","register","companies","plan","token","auth","dashboard","charts","perDay","connections","deleted","confirmationModal","deleteTitle","deleteMessage","disconnectTitle","disconnectMessage","add","disconnect","tryAgain","qrcode","newQr","connecting","toolTips","disconnected","content","connected","timeout","table","status","lastUpdate","default","actions","session","whatsappModal","edit","okAdd","okEdit","cancel","qrCode","message","contacts","searchPlaceholder","importTitlte","importMessage","import","whatsapp","contactModal","mainInfo","extraInfo","number","extraName","extraValue","addExtraInfo","queueModal","color","greetingMessage","complationMessage","outOfHoursMessage","ratingMessage","userModal","profile","scheduleModal","body","contact","sendAt","sentAt","tagModal","chat","noTicketMessage","uploads","titles","titleUploadMsgDragDrop","titleFileList","ticketsManager","newTicket","ticketsQueueSelect","placeholder","tickets","notification","tabs","open","closed","search","showAll","transferTicketModal","fieldLabel","fieldQueueLabel","fieldQueuePlaceholder","noOptions","ok","ticketsList","pendingHeader","assignedHeader","noTicketsTitle","noTicketsMessage","accept","reopen","newTicketModal","mainDrawer","listItems","quickMessages","queues","tags","administration","users","settings","helps","messagesAPI","schedules","campaigns","annoucements","chats","financeiro","appBar","user","logout","textMessage","mediaMessage","media","notifications","noTickets","dialog","shortcode","contactLists","company","contactListItems","lists","contactList","scheduledAt","completedAt","confirmation","new","update","readonly","message1","message2","message3","message4","message5","confirmationMessage1","confirmationMessage2","confirmationMessage3","confirmationMessage4","confirmationMessage5","messagePlaceholder","tagList","okadd","restart","close","attach","announcements","priority","text","mediaName","mediaPath","campaignsConfig","greeting","queueSelect","inputLabel","userCreation","options","enabled","disabled","messagesList","header","assignedTo","return","resolve","messagesInput","placeholderOpen","placeholderClosed","signMessage","contactDrawer","ticketOptionsMenu","schedule","delete","transfer","registerAppointment","appointmentsModal","textarea","confirm","messageOptionsMenu","reply","quickemessage","geral","quickemessages","backendErrors","ERR_NO_OTHER_WHATSAPP","ERR_NO_DEF_WAPP_FOUND","ERR_WAPP_NOT_INITIALIZED","ERR_WAPP_CHECK_CONTACT","ERR_WAPP_INVALID_CONTACT","ERR_WAPP_DOWNLOAD_MEDIA","ERR_INVALID_CREDENTIALS","ERR_SENDING_WAPP_MSG","ERR_DELETE_WAPP_MSG","ERR_OTHER_OPEN_TICKET","ERR_SESSION_EXPIRED","ERR_USER_CREATION_DISABLED","ERR_NO_PERMISSION","ERR_DUPLICATED_CONTACT","ERR_NO_SETTING_FOUND","ERR_NO_CONTACT_FOUND","ERR_NO_TICKET_FOUND","ERR_NO_USER_FOUND","ERR_NO_WAPP_FOUND","ERR_CREATING_MESSAGE","ERR_CREATING_TICKET","ERR_FETCH_WAPP_MSG","ERR_QUEUE_COLOR_ALREADY_EXISTS","ERR_WAPP_GREETING_REQUIRED","en","titleFrom","es","i18n","use","LanguageDetector","init","debug","defaultNS","fallbackLng","ns","resources","toastError","err","_err$response","_err$response$data","errorMsg","response","data","error","exists","concat","toast","t","toastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","isString","api","axios","create","baseURL","process","withCredentials","openApi","socketConnection","params","userId","localStorage","getItem","openSocket","transports","pingTimeout","pingInterval","query","isObject","reducer","state","action","type","payload","whatsApp","whatsAppIndex","findIndex","s","id","updatedAt","retries","whatsAppId","splice","useWhatsApps","whatsApps","dispatch","useReducer","loading","setLoading","useState","useEffect","async","get","fetchSession","companyId","socket","on","whatsappId","WhatsAppsContext","WhatsAppsProvider","_ref","children","createElement","Provider","value","useAuth","history","useHistory","isAuth","setIsAuth","setUser","interceptors","request","config","headers","JSON","parse","Promise","reject","_error$response","_error$response2","originalRequest","_retry","post","setItem","stringify","defaults","Authorization","removeItem","handleLogin","userData","has","isArray","setting","find","key","moment","locale","dueDate","hoje","format","vencimento","diff","before","isBefore","dias","duration","asDays","diasVenc","valueOf","console","log","Math","round","warn","push","handleLogout","getCurrentUserInfo","AuthContext","AuthProvider","rules","static","admin","Can","role","perform","yes","no","check","permissions","staticPermissions","includes","dynamicPermissions","dynamic","permissionCondition","ListItemLink","props","icon","primary","to","className","renderLink","useMemo","forwardRef","itemProps","ref","RouterLink","Object","assign","ListItem","button","component","ListItemIcon","ListItemText","defaultProps","newChats","forEach","chatIndex","u","chatId","map","MainListItems","drawerClose","useContext","connectionWarning","setConnectionWarning","openCampaignSubmenu","setOpenCampaignSubmenu","showCampaigns","setShowCampaigns","invisible","setInvisible","pageNumber","setPageNumber","searchParam","delayDebounceFn","setTimeout","fetchChats","clearTimeout","unreadsCount","length","chatUser","unreads","filter","whats","records","onClick","PieChartOutlinedIcon","WhatsAppIcon","ExploreOutlinedIcon","LocalOfferOutlinedIcon","OfflineBoltOutlinedIcon","LocalPhoneOutlinedIcon","EventAvailableOutlinedIcon","Fragment","Divider","ListSubheader","inset","prev","VolumeUpOutlinedIcon","ExpandLessIcon","ExpandMoreIcon","Collapse","style","paddingLeft","in","unmountOnExit","List","disablePadding","ListIcon","PeopleIcon","SettingsOutlinedIcon","super","ErrorOutlineOutlinedIcon","Badge","badgeContent","ContactlessOutlinedIcon","WrapTextOutlinedIcon","PeopleAltOutlinedIcon","CodeRoundedIcon","MonetizationOnOutlinedIcon","useStyles","makeStyles","position","buttonProgress","green","top","left","marginTop","marginLeft","ButtonWithSpinner","rest","classes","Button","CircularProgress","size","elements","allowedElements","CustomLink","target","rel","MarkdownWrapper","_ref2","boldRegex","tildaRegex","test","replace","markdownOptions","disableParsingRawHTML","forceInline","overrides","a","element","el","Markdown","ticket","pendingTicket","cursor","noTicketsDiv","display","height","margin","flexDirection","alignItems","justifyContent","noTicketsText","textAlign","fontSize","lineHeight","fontWeight","contactNameWrapper","lastMessageTime","justifySelf","closedBadge","alignSelf","marginRight","contactLastMessage","paddingRight","newMessagesCount","badgeStyle","backgroundColor","acceptButton","ticketQueueColor","flex","width","TicketListItem","_ticket$queue","_ticket$queue2","_ticket$contact","ticketId","useParams","isMounted","useRef","current","dense","e","uuid","handleSelectTicket","selected","clsx","Tooltip","arrow","placement","queue","ListItemAvatar","Avatar","src","profilePicUrl","disableTypography","Typography","noWrap","variant","lastMessage","isSameDay","parseISO","Date","secondary","unreadMessages","badge","put","handleAcepptTicket","useTickets","date","queueIds","withUnreadMessages","hasMore","setHasMore","setTickets","fetchTickets","tabContainer","overflowY","maxHeight","scrollbarStyles","popoverPaper","maxWidth","spacing","breakpoints","down","noShadow","boxShadow","icons","customBadge","NotificationsPopOver","volume","ticketIdUrl","location","pathname","split","ticketIdRef","anchorEl","isOpen","setIsOpen","setNotifications","setDesktopNotifications","play","useSound","alertSound","soundAlertRef","historyRef","window","Notification","requestPermission","q","filteredTickets","indexOf","queueId","emit","prevState","ticketIndex","notfiticationIndex","n","tag","String","read","_data$ticket$queue","document","visibilityState","isGroup","isBot","handleNotifications","renotify","onclick","preventDefault","focus","handleClickAway","NotificationTicket","IconButton","handleClick","aria-label","overlap","ChatIcon","Popover","disableScrollLock","anchorOrigin","vertical","horizontal","transformOrigin","paper","onClose","chips","flexWrap","chip","QueueSelect","selectedQueueIds","onChange","multiple","setQueues","fetchQueues","FormControl","fullWidth","InputLabel","shrink","Select","label","labelWidth","MenuProps","getContentAnchorEl","renderValue","_queues$find","_queues$find2","Chip","MenuItem","root","multFieldLine","btnWrapper","formControl","minWidth","UserSchema","Yup","shape","min","max","required","UserModal","initialState","loggedInUser","setSelectedQueueIds","_data$queues","userQueueIds","fetchUser","handleClose","Dialog","scroll","DialogTitle","Formik","initialValues","enableReinitialize","validationSchema","onSubmit","values","handleSaveUser","setSubmitting","touched","errors","isSubmitting","Form","DialogContent","dividers","Field","as","TextField","autoFocus","Boolean","helperText","labelId","DialogActions","backdrop","zIndex","drawer","BackdropLoading","Backdrop","useDate","dateToClient","strDate","isValid","datetimeToClient","dateToDatabase","mainPaper","padding","AnnouncementDialog","announcement","aria-labelledby","aria-describedby","border","backgroundImage","filename","backgroundRepeat","backgroundSize","backgroundPosition","DialogContentText","newAnnouncements","announcementIndex","announcementId","AnnouncementsPopover","setAnchorEl","setAnnouncement","showAnnouncementDialog","setShowAnnouncementDialog","fetchAnnouncements","record","event","currentTarget","AnnouncementIcon","Paper","onScroll","scrollTop","scrollHeight","clientHeight","item","background","borderLeft","alt","createdAt","ChatPopover","notifySound","newMessage","senderId","ForumIcon","goToMessages","href","palette","fancyBackground","mode","toolbar","barraSuperior","toolbarIcon","minHeight","transition","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","containerWithScroll","LoggedInLayout","_user$company","_user$company2","_user$company3","_user$company4","userModalOpen","setUserModalOpen","menuOpen","setMenuOpen","drawerOpen","setDrawerOpen","drawerVariant","setDrawerVariant","useTheme","colorMode","greaterThenSm","useMediaQuery","offsetWidth","clear","reload","interval","setInterval","clearInterval","handleCloseMenu","Drawer","logo","ChevronLeftIcon","AppBar","Toolbar","edge","MenuIcon","Brightness7Icon","Brightness4Icon","aria-controls","aria-haspopup","AccountCircle","Menu","handleOpenUserModal","handleClickLogout","Title","gutterBottom","Chart","toISOString","chartData","setChartData","time","amount","aux","startOfHour","ResponsiveContainer","BarChart","barSize","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","allowDecimals","Label","angle","textAnchor","fill","Bar","main","cardAvatar","grey","cardTitle","cardSubtitle","CardCounter","Skeleton","Card","CardHeader","avatar","subheader","off","red","pointer","RatingBox","rating","ratingTrunc","trunc","Rating","defaultValue","readOnly","TableAttendantsStatus","attendants","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","k","minutes","avgSupportTime","startOf","online","CheckCircleIcon","ErrorIcon","useDashboard","url","method","useCompanies","save","responseData","remove","list","finding","findAll","updateSchedules","fixedHeightPaper","blue","alignRight","selectContainer","card1","card2","card3","card4","card5","card6","card7","card8","card9","Dashboard","counters","setCounters","setAttendants","filterType","setFilterType","period","setPeriod","companyDueDate","setCompanyDueDate","dateFrom","setDateFrom","dateTo","setDateTo","fetchData","days","isEmpty","date_from","date_to","keys","firstLoad","loadCompanies","companiesList","formatTime","Container","Grid","xs","sm","md","handleChangeFilterType","FormHelperText","InputLabelProps","handleChangePeriod","elevation","paragraph","supportPending","CallIcon","supportHappening","HourglassEmptyIcon","supportFinished","leads","GroupAddIcon","AccessAlarmIcon","avgWaitTime","TimerIcon","textField","extraAttr","ContactSchema","ContactModal","contactId","onSave","setContact","fetchContact","handleSaveContact","marginBottom","FieldArray","_ref3","info","index","DeleteOutlineIcon","createFilterOptions","trim","NewTicketModal","_user$queues","modalOpen","initialContact","setOptions","setSearchParam","selectedContact","setSelectedContact","selectedQueue","setSelectedQueue","newContact","setNewContact","contactModalOpen","setContactModalOpen","fetchContacts","handleSaveTicket","createAddContactOption","filterOptions","filtered","inputValue","renderOption","option","renderOptionLabel","handleCloseContactModal","Autocomplete","clearOnBlur","autoHighlight","freeSolo","clearOnEscape","getOptionLabel","newValue","handleSelectOption","renderInput","onKeyPress","InputProps","endAdornment","displayEmpty","TicketsContext","TicketsContextProvider","currentTicket","setCurrentTicket","code","VcardPreview","contactObj","borderRadius","Box","messageMedia","objectFit","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ModalImageCors","imageUrl","fetching","setFetching","blobUrl","setBlobUrl","responseType","URL","createObjectURL","Blob","fetchImage","ModalImage","smallSrcSet","medium","large","ConfirmationModal","onConfirm","ReplyMessageContext","ReplyMessageProvider","replyingMessage","setReplyingMessage","medias","setMedias","MessageOptionsMenu","confirmationOpen","setConfirmationOpen","fromMe","hanldeReplyMessage","messagesListWrapper","whatsBackground","whatsBackgroundDark","circleLoading","opacity","messageLeft","quotedContainerLeft","quotedMsg","quotedSideColorLeft","messageRight","quotedContainerRight","quotedMsgRight","quotedSideColorRight","messageActionsButton","messageContactName","textContentItem","overflowWrap","textContentItemDeleted","fontStyle","timestamp","dailyTimestamp","dailyTimestampText","ackIcons","verticalAlign","deletedIcon","ackDoneAllIcon","downloadMedia","newMessages","messageIndex","m","messageToUpdate","MessagesList","lastMessageRef","selectedMessage","setSelectedMessage","messageOptionsMenuOpen","currentTicketId","scrollToBottom","fetchMessages","scrollIntoView","handleOpenMessageOptionsMenu","extrairNomeENumero","vcard","nomeMatch","match","nome","numeroMatch","numero","checkMessageMedia","mediaType","mediaUrl","vcardPreviewInfo","controls","startIcon","GetApp","renderDailyTimestamps","messageDay","previousMessageDay","float","renderMessageDivider","renderQuotedMessage","_message$quotedMsg","_message$quotedMsg2","_message$quotedMsg3","_message$quotedMsg3$c","_message$quotedMsg4","getElementById","prevPageNumber","onDrop","droppedFiles","Array","from","dataTransfer","files","clearData","onDragOver","dropEffect","onPaste","clipboardData","renderMessages","_message$queue2","_message$queue","_message$contact","isDeleted","ExpandMore","Block","ack","AccessTime","Done","DoneAll","renderMessageAck","ticketHeader","total","borderBottom","TicketHeaderSkeleton","square","titleTypographyProps","subheaderTypographyProps","animation","TicketHeader","TicketInfo","userName","setUserName","contactName","setContactName","truncadName","substring","mainWrapper","mainWrapperShift","easeOut","TicketMessagesDialog","setTicket","fetchTicket","_data$contact","handleDrawerOpen","renderTicketInfo","contrastColor","ContactTag","toUpperCase","queueTag","connectionTag","ticketInfo","secondaryContentSecond","alignContent","ticketInfo1","Radiusdot","transform","TicketListItemCustom","_ticket$queue5","_ticket$queue5$name","_ticket$queue6","_ticket$contact2","_ticket$whatsapp","_ticket$whatsapp2","_ticket$whatsapp2$nam","_ticket$queue7","_ticket$queue8","_ticket$queue8$name","_ticket$tags","ticketUser","setTicketUser","ticketQueueName","setTicketQueueName","setTicketQueueColor","whatsAppName","setWhatsAppName","openTicketMessageDialog","setOpenTicketMessageDialog","_ticket$queue$name","_ticket$user","_ticket$user$name","_ticket$whatsapp$name","uuidv4","VisibilityIcon","ListItemSecondaryAction","chatbot","AndroidIcon","_ticket$queue3","handleCloseTicket","_ticket$queue4","handleReopenTicket","TicketsSkeleton","ticketsListWrapper","borderTop","ticketsListHeader","ticketsCount","unshift","TicketsListCustom","updateCount","shouldUpdateTicket","count","toString","TicketsListSkeleton","TabPanel","TicketsQueueSelect","userQueues","Checkbox","checked","TagsFilter","onFiltered","setTags","selecteds","setSelecteds","loadTags","v","r","renderTags","getTagProps","textShadow","UsersFilter","initialUsers","setUsers","loadUsers","userList","getOptionSelected","toLowerCase","getUserProps","ticketsWrapper","tabsHeader","tabHeaderBackground","settingsIcon","tab","ticketOptionsBox","optionsBackground","serachInputWrapper","searchIcon","searchInput","show","hide","TicketsManagerTabs","setTab","tabOpen","setTabOpen","newTicketModalOpen","setNewTicketModalOpen","showAllTickets","setShowAllTickets","searchInputRef","openCount","setOpenCount","pendingCount","setPendingCount","selectedTags","setSelectedTags","selectedUsers","setSelectedUsers","searchTimeout","handleChangeTabOpen","applyPanelStyle","handleCloseOrOpenTicket","Tabs","handleChangeTab","indicatorColor","textColor","Tab","GroupIcon","CheckBoxIcon","SearchIcon","InputBase","inputRef","searchedTerm","FormControlLabel","labelPlacement","control","Switch","TicketsList","val","TicketsListGroup","ContactDrawerSkeleton","contactHeader","contactAvatar","contactDetails","contactExtraInfo","textCenter","ContactForm","onCancel","inline","ContactNotesDialogListItem","note","deleteItem","DeleteIcon","useTicketNotes","saveNote","deleteNote","listNotes","NoteSchema","ContactNotes","newNote","setNewNote","showOnDeleteDialog","setShowOnDeleteDialog","selectedNote","setSelectedNote","notes","setNotes","handleResetState","loadNotes","openAndFetchData","handleChangeComment","handleOpenDialogDelete","handleSave","setErrors","rows","multiline","flexShrink","borderRight","ContactDrawer","_contact$extraInfo","handleDrawerClose","setModalOpen","openForm","setOpenForm","anchor","PaperProps","BackdropProps","ModalProps","CloseIcon","CreateIcon","Link","timerBox","RecordingTimer","timer","setTimer","seconds","addZero","useQuickMessages","deleteRecord","Mp3Recorder","MicRecorder","bitRate","newMessageBox","messageInputWrapper","messageInput","sendMessageIcons","uploadInput","viewMediaInputWrapper","emojiBox","audioLoading","recorderWrapper","cancelAudioIcon","sendAudioIcon","replyginMsgWrapper","replyginMsgContainer","replyginMsgBody","replyginContactMsgSideColor","replyginSelfMsgSideColor","EmojiOptions","showEmoji","setShowEmoji","handleAddEmoji","MoodIcon","Picker","perLine","showPreview","showSkinTones","onSelect","SignSwitch","setSignMessage","isWidthUp","FileInput","handleChangeMedias","disableOption","htmlFor","AttachFileIcon","ActionButtons","inputMessage","recording","ticketStatus","handleSendMessage","handleCancelAudio","handleUploadAudio","handleStartRecording","SendIcon","HighlightOffIcon","CheckCircleOutlineIcon","MicIcon","CustomInput","setInputMessage","handleInputPaste","setMediaUrl","setQuickMessages","popupOpen","setPopupOpen","listQuickMessages","truncatedMessage","firstWord","charAt","filteredOptions","setInputRef","input","closeIcon","opt","onInputChange","reason","shiftKey","maxRows","withWidth","_medias$","isWorking","setRecording","initialValue","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","itsMe","emoji","native","selectedMedias","navigator","mediaDevices","getUserMedia","audio","start","blob","stop","getMp3","formData","FormData","getTime","append","CancelIcon","ClearIcon","renderReplyingMessage","useQueues","TransferTicketModalCustom","ticketid","allQueues","setAllQueues","selectedUser","setSelectedUser","findAllQueues","loadQueues","fetchUsers","noOptionsText","ScheduleSchema","ScheduleModal","scheduleId","cleanContact","setSchedule","currentContact","setCurrentContact","setContacts","c","customList","capitalize","scheduleData","handleSaveSchedule","TicketOptionsMenu","transferTicketModalOpen","setTransferTicketModalOpen","scheduleModalOpen","setScheduleModalOpen","setContactId","handleOpenConfirmationModal","keepMounted","handleOpenScheduleModal","handleCloseTransferTicketModal","handleCloseScheduleModal","actionButtons","TicketActionButtonsCustom","ticketOptionsMenuOpen","customTheme","createTheme","handleUpdateTicketStatus","Replay","UndoRoundedIcon","ThemeProvider","MoreVert","TagsContainer","then","createTag","optionsChanged","newTag","syncTags","PaperComponent","Ticket","TicketActionButtons","MessageInput","chatContainer","chatPapper","contactsWrapper","messagesWrapper","welcomeMsg","TicketsCustom","TicketsManager","TicketAdvancedLayout","styled","gridTemplateRows","placeholderContainer","placeholderItem","TicketAdvanced","setOption","BottomNavigation","showLabels","BottomNavigationAction","QuestionAnswerIcon","Tickets","usePlans","getPlanList","finder","SignUp","qs","planId","plans","setPlans","listPlans","CssBaseline","LockOutlinedIcon","recurrence","campaignsEnabled","handleSignUp","autoComplete","justify","mt","Login","handleChangeInput","noValidate","mainContainer","contentWrapper","MainContainer","contactsHeader","MainHeader","MainHeaderButtonsWrapper","customTableCell","TableRowSkeleton","columns","_","SessionSchema","memo","isDefault","provider","setWhatsApp","selectedQueueId","setSelectedQueueId","whatsQueueIds","transferQueueId","whatsappData","handleSaveWhatsApp","selectedIds","timeToTransfer","selectedId","setQrCode","QRCode","tooltip","typography","pxToRem","tooltipPopper","CustomToolTip","popper","Connections","whatsAppModalOpen","setWhatsAppModalOpen","qrModalOpen","setQrModalOpen","selectedWhatsApp","setSelectedWhatsApp","confirmModalOpen","setConfirmModalOpen","confirmationModalInitialState","confirmModalInfo","setConfirmModalInfo","handleCloseWhatsAppModal","useCallback","handleCloseQrModal","renderActionButtons","handleOpenQrModal","handleStartWhatsAppSession","handleRequestNewQrCode","QrcodeModal","WhatsAppModal","PopupState","popupId","popupState","bindTrigger","bindMenu","WhatsApp","channel","Facebook","Instagram","IconChannel","SignalCellularConnectedNoInternet0Bar","CropFree","SignalCellular4Bar","SignalCellularConnectedNoInternet2Bar","renderStatusToolTips","CheckCircle","handleEditWhatsApp","Edit","DeleteOutline","textfield","row","buttonContainer","SchedulesForm","labelSaveButton","setSchedules","weekday","weekdayEn","startTime","endTime","render","arrayHelpers","FastField","field","NumberFormat","customInput","_ref4","QueueSelectCustom","ModalUsers","tableContainer","textRight","CompanyForm","onDelete","modalUser","setModalUser","firstUser","setFirstUser","setRecord","phone","handleCloseModalUsers","resetForm","handleSubmit","setValues","incrementDueDate","head","handleOpenModalUsers","CompaniesManagerGrid","rowStyle","now","EditIcon","renderPlan","renderCampaignsStatus","renderStatus","CompaniesManager","showConfirmDialog","setShowConfirmDialog","setRecords","loadPlans","companyList","handleCancel","handleOpenDeleteDialog","handleDelete","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","maskOptions","inputProps","currencyMask","createNumberMask","MaskedInput","mask","inputMode","PlanManagerForm","PlansManagerGrid","toLocaleString","currency","PlansManager","planList","datanew","minimumFractionDigits","HelpManagerForm","HelpsManagerGrid","description","video","HelpsManager","useHelps","loadHelps","helpList","useSettings","getAll","Options","scheduleTypeChanged","userRating","setUserRating","scheduleType","setScheduleType","callType","setCallType","chatbotType","setChatbotType","CheckMsgIsGroup","setCheckMsgIsGroupType","outsideMessageType","setOutsideMessageType","loadingUserRating","setLoadingUserRating","loadingScheduleType","setLoadingScheduleType","loadingCallType","setLoadingCallType","loadingChatbotType","setLoadingChatbotType","loadingCheckMsgIsGroup","setCheckMsgIsGroup","loadingOutsideMessageType","setLoadingOutsideMessageType","loadingOutsideQueueType","setLoadingOutsideQueueType","ipixcType","setIpIxcType","loadingIpIxcType","setLoadingIpIxcType","tokenixcType","setTokenIxcType","loadingTokenIxcType","setLoadingTokenIxcType","ipmkauthType","setIpMkauthType","loadingIpMkauthType","setLoadingIpMkauthType","clientidmkauthType","setClientIdMkauthType","loadingClientIdMkauthType","setLoadingClientIdMkauthType","clientsecretmkauthType","setClientSecrectMkauthType","loadingClientSecrectMkauthType","setLoadingClientSecrectMkauthType","asaasType","setAsaasType","loadingAsaasType","setLoadingAsaasType","handleChangeUserRating","handleScheduleType","handleGroupType","handleCallType","handleChatbotType","handleOutsideMessageType","scrollButtons","handleChangeIPIxc","handleChangeTokenIxc","handleChangeIpMkauth","handleChangeClientIdMkauth","handleChangeClientSecrectMkauth","handleChangeAsaas","OnlyForSuperUser","SettingsCustom","setCompany","currentUser","setCurrentUser","setSettings","schedulesEnabled","setSchedulesEnabled","getAllSettings","settingList","d","findData","isSuper","handleTabChange","InputField","errorText","meta","useField","at","_renderHelperText","SelectField","selectedValue","isError","countries","AddressForm","billingName","setBillingName","addressZipCode","setAddressZipCode","addressStreet","setAddressStreet","addressState","setAddressState","addressCity","setAddressCity","addressDistrict","setAddressDistrict","formField","firstName","address1","city","zipcode","country","setFieldValue","ul","listStyle","cardHeader","cardPricing","footer","divider","customCard","custom","Pricing","setActiveStep","activeStep","usersPlans","setUsersPlans","companiesPlans","setCompaniesPlans","connectionsPlans","setConnectionsPlans","storagePlans","setStoragePlans","customValuePlans","setCustomValuePlans","plansCompanies","price","buttonText","buttonVariant","tiers","tier","StarIcon","CardContent","line","CardActions","listItem","PaymentDetails","formValues","newPlan","ReviewOrder","useFormikContext","ShippingDetails","div","_templateObject","_taggedTemplateLiteral","Total","_templateObject2","SuccessContent","_templateObject3","_templateObject4","CheckoutSuccess","_pix$qrcode","pix","pixString","stripeURL","asaasURL","mercadopagoURL","valorext","copied","setCopied","CopyToClipboard","onCopy","handleCopyQR","FaCheckCircle","FaCopy","boxSizing","fontFamily","letterSpacing","textTransform","formId","requiredErrorMsg","lastName","invalidErrorMsg","useAddressForPaymentDetails","invoiceId","nameOnCard","cardNumber","expiryDate","cvv","checkoutFormModel","nullable","stepper","wrapper","CheckoutPage","steps","datePayment","setDatePayment","Invoice","currentValidationSchema","isLastStep","_handleBack","Stepper","Step","StepLabel","formInitialValues","newValues","address2","_submitForm","setTouched","step","PaymentForm","_renderStepContent","invoices","newUsers","userIndex","Invoices","selectedContactId","setSelectedContactId","fetchInvoices","rowStatus","SubscriptionModal","detail","handleOpenContactModal","Users","deletingUser","setDeletingUser","handleDeleteUser","handleCloseUserModal","startAdornment","InputAdornment","handleEditUser","newContacts","contactIndex","Contacts","deletingContact","setDeletingContact","ImportContacts","setImportContacts","blockingContact","setBlockingContact","unBlockingContact","setUnBlockingContact","confirmOpen","setConfirmOpen","confirmChatsOpen","setConfirmChatsOpen","contactTicket","setContactTicket","fileUploadRef","handleDeleteContact","active","handleBlockContact","handleUnBlockContact","go","handleimportContact","handleImportExcel","handleimportChats","ArrowDropDown","ContactPhone","click","Backup","day","getDate","month","getMonth","year","getFullYear","hours","getHours","getMinutes","getDateLastMessage","hadleEditContact","BlockIcon","ColorPicker","currentColor","selectedColor","setSelectedColor","BlockPicker","triangle","colors","hex","onChangeComplete","addButton","QueueOptionStepper","updateOptions","activeOption","setActiveOption","handleOption","parentId","optionList","edition","handleEdition","renderTitle","handleOptionChangeTitle","SaveIcon","order","handleDeleteOption","renderMessage","handleOptionChangeMessage","renderStep","StepContent","optionNumber","handleAddOption","AddIcon","nonLinear","orientation","QueueOptions","fetchOptions","addOption","newOption","renderStepper","colorAdorment","QueueSchema","QueueModal","tempoRoteador","ativarRoteador","colorPickerModalOpen","setColorPickerModalOpen","setQueue","greetingRef","handleSaveQueue","onFocus","Colorize","selectField","newQueues","queueIndex","Queues","queueModalOpen","setQueueModalOpen","handleCloseConfirmationModal","handleDeleteQueue","handleCloseQueueModal","handleOpenQueueModal","handleEditQueue","TagSchema","TagModal","tagId","kanban","setTag","handleKanbanChange","kanbanValue","tagData","handleSaveTag","ColorBox","disableAlpha","hslGradient","newTags","tagIndex","Tags","selectedTag","setSelectedTag","deletingTag","setDeletingTag","tagModalOpen","setTagModalOpen","fetchTags","handleDeleteTag","handleCloseTagModal","handleOpenTagModal","sort","b","handleEditTag","mainHeader","elementMargin","formContainer","MessagesAPI","formMessageTextData","formMessageMediaData","file","setFile","catch","handleSendTextMessage","firstFile","handleSendMediaMessage","heading","flexBasis","secondaryHeading","Helps","Accordion","AccordionSummary","expandIcon","AccordionDetails","frameBorder","allow","allowFullScreen","renderVideo","ContactListSchema","ContactListModal","contactListId","setContactList","fetchContactList","contactListData","handleSaveContactList","newContactLists","contactListIndex","ContactLists","selectedContactList","setSelectedContactList","deletingContactList","setDeletingContactList","contactListModalOpen","setContactListModalOpen","fetchContactLists","handleDeleteContactList","ContactListDialog","handleCloseContactListModal","handleOpenContactListModal","contactsCount","planilhaExemplo","download","DownloadIcon","goToContacts","handleEditContactList","ContactListItemModal","useContactLists","findById","ContactListItems","contactListItemModalOpen","setContactListItemModalOpen","findContactList","handleCloseContactListItemModal","handleImportContacts","goToContactLists","handleOpenContactListItemModal","isWhatsappValid","titleAccess","htmlColor","QuickeMessageSchema","QuickMessageDialog","quickemessageId","setQuickemessage","attachment","setAttachment","attachmentFile","handleAttachmentFile","quickemessageData","handleSaveQuickeMessage","quickmessages","newQuickmessages","quickemessageIndex","Quickemessages","selectedQuickemessage","setSelectedQuickemessage","deletingQuickemessage","setDeletingQuickemessage","quickemessageModalOpen","setQuickMessageDialogOpen","fetchQuickemessages","handleDeleteQuickemessage","resetPagination","handleCloseQuickMessageDialog","handleOpenQuickMessageDialog","_quickemessage$mediaN","handleEditQuickemessage","Route","Component","isPrivate","Redirect","RouterRoute","newSchedules","scheduleIndex","Schedules","selectedSchedule","setSelectedSchedule","deletingSchedule","setDeletingSchedule","param","URLSearchParams","fetchSchedules","handleOpenScheduleModalFromContactId","handleDeleteSchedule","str","len","handleEditSchedule","truncate","CampaignSchema","CampaignModal","campaignId","tagListId","campaign","setCampaign","whatsapps","setWhatsapps","selectedWhatsapps","setSelectedWhatsapps","setContactLists","tagLists","setTagLists","messageTab","setMessageTab","campaignEditable","setCampaignEditable","mappedWhatsapps","formattedTagLists","_ref5","prevCampaignData","entries","_ref6","moreThenAnHour","Number","isNaN","isEditable","renderMessageField","identifier","renderConfirmationMessageField","dataValues","join","_ref7","handleSaveCampaign","_ref8","centered","restartCampaign","cancelCampaign","newCampaigns","campaignIndex","Campaigns","selectedCampaign","setSelectedCampaign","deletingCampaign","setDeletingCampaign","campaignModalOpen","setCampaignModalOpen","fetchCampaigns","handleDeleteCampaign","handleCloseCampaignModal","handleOpenCampaignModal","formatStatus","PauseCircleOutlineIcon","PlayCircleOutlineIcon","DescriptionIcon","handleEditCampaign","tabPanelsContainer","initialSettings","messageInterval","longerIntervalAfter","greaterInterval","variables","CampaignsConfig","showVariablesForm","setShowVariablesForm","selectedKey","setSelectedKey","variable","setVariable","settingsList","fromEntries","handleOnChangeVariable","changedProp","handleOnChangeSettings","removeVariable","newList","addVariable","variablesExists","CampaignReport","validContacts","setValidContacts","delivered","setDelivered","confirmationRequested","setConfirmationRequested","confirmed","setConfirmed","percent","setPercent","mounted","findCampaign","valids","isNull","deliveredAt","confirmationRequestedAt","LinearProgress","DoneIcon","DoneAllIcon","ListAltIcon","ScheduleIcon","EventAvailableIcon","AnnouncementSchema","AnnouncementModal","announcementData","handleSaveAnnouncement","Announcements","selectedAnnouncement","setSelectedAnnouncement","deletingAnnouncement","setDeletingAnnouncement","announcementModalOpen","setAnnouncementModalOpen","handleDeleteAnnouncement","handleCloseAnnouncementModal","handleOpenAnnouncementModal","_announcement$mediaNa","handleEditAnnouncement","chatList","ChatList","handleSelectChat","handleDeleteChat","handleEditChat","pageInfo","selectedChat","setSelectedChat","getPrimaryText","mainText","getSecondaryText","getItemStyle","ownerId","messageList","inputArea","buttonSend","boxLeft","boxRight","ChatMessages","handleLoadMore","scrollToBottomRef","baseRef","contentMessage","setContentMessage","sender","Input","onKeyUp","gridContainer","gridItem","gridItemTab","btnContainer","ChatModal","handleLoadNewChat","setTitle","showDialog","setShowDialog","dialogType","setDialogType","currentChat","setCurrentChat","setChats","chatsPageInfo","setChatsPageInfo","setMessages","messagesPageInfo","setMessagesPageInfo","messagesPage","setMessagesPage","findChats","selectChat","findMessages","changedChats","filteredChats","sendMessage","deleteChat","loadMoreMessages","_formatDate","past","abs","ceil","trialExpiration","Kanban","reloadData","setReloadData","isInitialLoadComplete","setIsInitialLoadComplete","lanes","jsonString","UserQueue","popularCards","fetchedTags","lista","teste","handleCardClick","ticketsNaoAgrupados","tagsOrdenadas","cards","ticketsFiltrados","Board","handleLaneDragEnd","board","sourceLaneId","targetLaneId","currentOrder","handleUpdateLanes","antigoIndex","novoIndex","objetoMovido","moverObjeto","onCardMoveAcrossLanes","cardId","Routes","BrowserRouter","exact","path","Signup","TicketResponsiveContainer","QuickMessages","Financeiro","Annoucements","Subscription","Chat","ToastContainer","queryClient","QueryClient","App","setLocale","prefersDarkMode","preferredTheme","setMode","prevMode","scrollbarStylesSoft","textPrimary","borderPrimary","dark","light","messageIcons","inputBackground","i18nlocale","ptBR","QueryClientProvider","client","ReactDOM","module","exports"],"mappings":"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ACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAGA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,SAGKC,GAAkB,CAAC,IAAK,IAAK,SAAU,KAAM,IAAK,OAAQ,OAE1DC,GAAalL,IAAA,IAAC,SAAEC,KAAa2E,GAAO5E,EAAA,OACzCvT,IAAAyT,cAAA,IAAAqF,OAAAC,OAAA,GAAOZ,EAAK,CAAEuG,OAAO,SAASC,IAAI,wBAChCnL,IAsCYoL,OAlCSC,IAAmB,IAAlB,SAAErL,GAAUqL,EACpC,MAAMC,EAAY,aACZC,EAAa,WAEfvL,GAAYsL,EAAUE,KAAKxL,KAC9BA,EAAWA,EAASyL,QAAQH,EAAW,WAEpCtL,GAAYuL,EAAWC,KAAKxL,KAC/BA,EAAWA,EAASyL,QAAQF,EAAY,WAGzC,MAAM9T,EAAUjL,IAAMyY,QAAQ,KAC7B,MAAMyG,EAAkB,CACvBC,uBAAuB,EACvBC,aAAa,EACbC,UAAW,CACVC,EAAG,CAAEpG,UAAWuF,MAUlB,OANAF,GAAShF,QAAQgG,IACXf,GAAgB1G,SAASyH,KAC7BL,EAAgBG,UAAUE,GAAWC,GAAMA,EAA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","file":"static/js/main.fdeadacd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n\nexport default ColorModeContext;","const messages = {\n  pt: {\n    translations: {\n      signup: {\n        title: \"Finalize seu cadastro!\",\n        toasts: {\n          success: \"Usuário criado com sucesso! Faça seu login!!!.\",\n          fail: \"Erro ao criar usuário. Verifique os dados informados.\",\n        },\n        form: {\n          name: \"Nome\",\n          email: \"Email\",\n          password: \"Senha\",\n        },\n        buttons: {\n          submit: \"Cadastrar\",\n          login: \"Já tem uma conta? Entre!\",\n        },\n      },\n      login: {\n        title: \"Login\",\n        form: {\n          email: \"Email\",\n          password: \"Senha\",\n        },\n        buttons: {\n          submit: \"Entrar\",\n          register: \"Não tem uma conta? Venha escolher seu plano!\",\n        },\n      },\n      companies: {\n        title: \"Cadastrar Empresa\",\n        form: {\n          name: \"Nome da Empresa\",\n          plan: \"Plano\",\n          token: \"Token\",\n          submit: \"Cadastrar\",\n          success: \"Empresa criada com sucesso!\",\n        },\n      },\n      auth: {\n        toasts: {\n          success: \"Login efetuado com sucesso!\",\n        },\n        token: \"Token\",\n      },\n      dashboard: {\n        charts: {\n          perDay: {\n            title: \"Atendimentos hoje: \",\n          },\n        },\n      },\n      connections: {\n        title: \"Conexões\",\n        toasts: {\n          deleted: \"Conexão com o WhatsApp excluída com sucesso!\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Deletar\",\n          deleteMessage: \"Você tem certeza? Essa ação não pode ser revertida.\",\n          disconnectTitle: \"Desconectar\",\n          disconnectMessage:\n            \"Tem certeza? Você precisará ler o QR Code novamente.\",\n        },\n        buttons: {\n          add: \"Adicionar WhatsApp\",\n          disconnect: \"desconectar\",\n          tryAgain: \"Tentar novamente\",\n          qrcode: \"QR CODE\",\n          newQr: \"Novo QR CODE\",\n          connecting: \"Conectando\",\n        },\n        toolTips: {\n          disconnected: {\n            title: \"Falha ao iniciar sessão do WhatsApp\",\n            content:\n              \"Certifique-se de que seu celular esteja conectado à internet e tente novamente, ou solicite um novo QR Code\",\n          },\n          qrcode: {\n            title: \"Esperando leitura do QR Code\",\n            content:\n              \"Clique no botão 'QR CODE' e leia o QR Code com o seu celular para iniciar a sessão\",\n          },\n          connected: {\n            title: \"Conexão estabelecida!\",\n          },\n          timeout: {\n            title: \"A conexão com o celular foi perdida\",\n            content:\n              \"Certifique-se de que seu celular esteja conectado à internet e o WhatsApp esteja aberto, ou clique no botão 'Desconectar' para obter um novo QR Code\",\n          },\n        },\n        table: {\n          name: \"Nome\",\n          status: \"Status\",\n          lastUpdate: \"Última atualização\",\n          default: \"Padrão\",\n          actions: \"Ações\",\n          session: \"Sessão\",\n        },\n      },\n      whatsappModal: {\n        title: {\n          add: \"Adicionar WhatsApp\",\n          edit: \"Editar WhatsApp\",\n        },\n        form: {\n          name: \"Nome\",\n          default: \"Padrão\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"WhatsApp salvo com sucesso.\",\n      },\n      qrCode: {\n        message: \"Leia o QrCode para iniciar a sessão\",\n      },\n      contacts: {\n        title: \"Contatos\",\n        toasts: {\n          deleted: \"Contato excluído com sucesso!\",\n        },\n        searchPlaceholder: \"Pesquisar...\",\n        confirmationModal: {\n          deleteTitle: \"Deletar \",\n          importTitlte: \"Importar contatos\",\n          deleteMessage:\n            \"Tem certeza que deseja deletar este contato? Todos os atendimentos relacionados serão perdidos.\",\n          importMessage: \"Deseja importar todos os contatos do telefone?\",\n        },\n        buttons: {\n          import: \"Importar Contatos\",\n          add: \"Adicionar Contato\",\n        },\n        table: {\n          name: \"Nome\",\n          whatsapp: \"WhatsApp\",\n          email: \"Email\",\n          actions: \"Ações\",\n        },\n      },\n      contactModal: {\n        title: {\n          add: \"Adicionar contato\",\n          edit: \"Editar contato\",\n        },\n        form: {\n          mainInfo: \"Dados do contato\",\n          extraInfo: \"Informações adicionais\",\n          name: \"Nome\",\n          number: \"Número do Whatsapp\",\n          email: \"Email\",\n          extraName: \"Nome do campo\",\n          extraValue: \"Valor\",\n        },\n        buttons: {\n          addExtraInfo: \"Adicionar informação\",\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Contato salvo com sucesso.\",\n      },\n      queueModal: {\n        title: {\n          add: \"Adicionar fila\",\n          edit: \"Editar fila\",\n        },\n        form: {\n          name: \"Nome\",\n          color: \"Cor\",\n          greetingMessage: \"Mensagem de saudação\",\n          complationMessage: \"Mensagem de conclusão\",\n          outOfHoursMessage: \"Mensagem de fora de expediente\",\n          ratingMessage: \"Mensagem de avaliação\",\n          token: \"Token\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n      },\n      userModal: {\n        title: {\n          add: \"Adicionar usuário\",\n          edit: \"Editar usuário\",\n        },\n        form: {\n          name: \"Nome\",\n          email: \"Email\",\n          password: \"Senha\",\n          profile: \"Perfil\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Usuário salvo com sucesso.\",\n      },\n      scheduleModal: {\n        title: {\n          add: \"Novo Agendamento\",\n          edit: \"Editar Agendamento\",\n        },\n        form: {\n          body: \"Mensagem\",\n          contact: \"Contato\",\n          sendAt: \"Data de Agendamento\",\n          sentAt: \"Data de Envio\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Agendamento salvo com sucesso.\",\n      },\n      tagModal: {\n        title: {\n          add: \"Nova Tag\",\n          edit: \"Editar Tag\",\n        },\n        form: {\n          name: \"Nome\",\n          color: \"Cor\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Tag salvo com sucesso.\",\n      },\n      chat: {\n        noTicketMessage: \"Selecione um ticket para começar a conversar.\",\n      },\n      uploads: {\n        titles: {\n          titleUploadMsgDragDrop: \"ARRASTE E SOLTE ARQUIVOS NO CAMPO ABAIXO\",\n          titleFileList: \"Lista de arquivo(s)\"\n        },\n      },      \n      ticketsManager: {\n        buttons: {\n          newTicket: \"Novo\",\n        },\n      },\n      ticketsQueueSelect: {\n        placeholder: \"Filas\",\n      },\n      tickets: {\n        toasts: {\n          deleted: \"O atendimento que você estava foi deletado.\",\n        },\n        notification: {\n          message: \"Mensagem de\",\n        },\n        tabs: {\n          open: { title: \"Abertas\" },\n          closed: { title: \"Resolvidos\" },\n          search: { title: \"Busca\" },\n        },\n        search: {\n          placeholder: \"Buscar atendimento e mensagens\",\n        },\n        buttons: {\n          showAll: \"Todos\",\n        },\n      },\n      transferTicketModal: {\n        title: \"Transferir Ticket\",\n        fieldLabel: \"Digite para buscar usuários\",\n        fieldQueueLabel: \"Transferir para fila\",\n        fieldQueuePlaceholder: \"Selecione uma fila\",\n        noOptions: \"Nenhum usuário encontrado com esse nome\",\n        buttons: {\n          ok: \"Transferir\",\n          cancel: \"Cancelar\",\n        },\n      },\n      ticketsList: {\n        pendingHeader: \"Aguardando\",\n        assignedHeader: \"Atendendo\",\n        noTicketsTitle: \"Nada aqui!\",\n        noTicketsMessage:\n          \"Nenhum atendimento encontrado com esse status ou termo pesquisado\",\n        buttons: {\n          accept: \"Aceitar\",\n          closed: \"Finalizar\",\n          reopen: \"Reabrir\",\n        },\n      },\n      newTicketModal: {\n        title: \"Criar Ticket\",\n        fieldLabel: \"Digite para pesquisar o contato\",\n        add: \"Adicionar\",\n        buttons: {\n          ok: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n      },\n      mainDrawer: {\n        listItems: {\n          dashboard: \"Dashboard\",\n          connections: \"Conexões\",\n          tickets: \"Atendimentos\",\n          quickMessages: \"Respostas Rápidas\",\n          contacts: \"Contatos\",\n          queues: \"Filas & Chatbot\",\n          tags: \"Tags\",\n          administration: \"Administração\",\n          users: \"Usuários\",\n          settings: \"Configurações\",\n          helps: \"Ajuda\",\n          messagesAPI: \"API\",\n          schedules: \"Agendamentos\",\n          campaigns: \"Campanhas\",\n          annoucements: \"Informativos\",\n          chats: \"Chat Interno\",\n          financeiro: \"Financeiro\",\n        },\n        appBar: {\n          user: {\n            profile: \"Perfil\",\n            logout: \"Sair\",\n          },\n        },\n      },\n      messagesAPI: {\n        title: \"API\",\n        textMessage: {\n          number: \"Número\",\n          body: \"Mensagem\",\n          token: \"Token cadastrado\",\n        },\n        mediaMessage: {\n          number: \"Número\",\n          body: \"Nome do arquivo\",\n          media: \"Arquivo\",\n          token: \"Token cadastrado\",\n        },\n      },\n      notifications: {\n        noTickets: \"Nenhuma notificação.\",\n      },\n      quickMessages: {\n        title: \"Respostas Rápidas\",\n        buttons: {\n          add: \"Nova Resposta\",\n        },\n        dialog: {\n          shortcode: \"Atalho\",\n          message: \"Resposta\",\n        },\n      },\n      contactLists: {\n        title: \"Listas de Contatos\",\n        table: {\n          name: \"Nome\",\n          contacts: \"Contatos\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Nova Lista\",\n        },\n        dialog: {\n          name: \"Nome\",\n          company: \"Empresa\",\n          okEdit: \"Editar\",\n          okAdd: \"Adicionar\",\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          cancel: \"Cancelar\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          deleted: \"Registro excluído\",\n        },\n      },\n      contactListItems: {\n        title: \"Contatos\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Novo\",\n          lists: \"Listas\",\n          import: \"Importar\",\n        },\n        dialog: {\n          name: \"Nome\",\n          number: \"Número\",\n          whatsapp: \"Whatsapp\",\n          email: \"E-mail\",\n          okEdit: \"Editar\",\n          okAdd: \"Adicionar\",\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          cancel: \"Cancelar\",\n        },\n        table: {\n          name: \"Nome\",\n          number: \"Número\",\n          whatsapp: \"Whatsapp\",\n          email: \"E-mail\",\n          actions: \"Ações\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n          importMessage: \"Deseja importar os contatos desta planilha? \",\n          importTitlte: \"Importar\",\n        },\n        toasts: {\n          deleted: \"Registro excluído\",\n        },\n      },\n      campaigns: {\n        title: \"Campanhas\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Nova Campanha\",\n          contactLists: \"Listas de Contatos\",\n        },\n        table: {\n          name: \"Nome\",\n          whatsapp: \"Conexão\",\n          contactList: \"Lista de Contatos\",\n          status: \"Status\",\n          scheduledAt: \"Agendamento\",\n          completedAt: \"Concluída\",\n          confirmation: \"Confirmação\",\n          actions: \"Ações\",\n        },\n        dialog: {\n          new: \"Nova Campanha\",\n          update: \"Editar Campanha\",\n          readonly: \"Apenas Visualização\",\n          form: {\n            name: \"Nome\",\n            message1: \"Mensagem 1\",\n            message2: \"Mensagem 2\",\n            message3: \"Mensagem 3\",\n            message4: \"Mensagem 4\",\n            message5: \"Mensagem 5\",\n            confirmationMessage1: \"Mensagem de Confirmação 1\",\n            confirmationMessage2: \"Mensagem de Confirmação 2\",\n            confirmationMessage3: \"Mensagem de Confirmação 3\",\n            confirmationMessage4: \"Mensagem de Confirmação 4\",\n            confirmationMessage5: \"Mensagem de Confirmação 5\",\n            messagePlaceholder: \"Conteúdo da mensagem\",\n            whatsapp: \"Conexão\",\n            status: \"Status\",\n            scheduledAt: \"Agendamento\",\n            confirmation: \"Confirmação\",\n            contactList: \"Lista de Contato\",\n            tagList: \"Tags\",\n          },\n          buttons: {\n            add: \"Adicionar\",\n            edit: \"Atualizar\",\n            okadd: \"Ok\",\n            cancel: \"Cancelar Disparos\",\n            restart: \"Reiniciar Disparos\",\n            close: \"Fechar\",\n            attach: \"Anexar Arquivo\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          success: \"Operação realizada com sucesso\",\n          cancel: \"Campanha cancelada\",\n          restart: \"Campanha reiniciada\",\n          deleted: \"Registro excluído\",\n        },\n      },\n      announcements: {\n        title: \"Informativos\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Novo Informativo\",\n          contactLists: \"Listas de Informativos\",\n        },\n        table: {\n          priority: \"Prioridade\",\n          title: \"Title\",\n          text: \"Texto\",\n          mediaName: \"Arquivo\",\n          status: \"Status\",\n          actions: \"Ações\",\n        },\n        dialog: {\n          edit: \"Edição de Informativo\",\n          add: \"Novo Informativo\",\n          update: \"Editar Informativo\",\n          readonly: \"Apenas Visualização\",\n          form: {\n            priority: \"Prioridade\",\n            title: \"Title\",\n            text: \"Texto\",\n            mediaPath: \"Arquivo\",\n            status: \"Status\",\n          },\n          buttons: {\n            add: \"Adicionar\",\n            edit: \"Atualizar\",\n            okadd: \"Ok\",\n            cancel: \"Cancelar\",\n            close: \"Fechar\",\n            attach: \"Anexar Arquivo\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          success: \"Operação realizada com sucesso\",\n          deleted: \"Registro excluído\",\n        },\n      },\n      campaignsConfig: {\n        title: \"Configurações de Campanhas\",\n      },\n      queues: {\n        title: \"Filas & Chatbot\",\n        table: {\n          name: \"Nome\",\n          color: \"Cor\",\n          greeting: \"Mensagem de saudação\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Adicionar fila\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage:\n            \"Você tem certeza? Essa ação não pode ser revertida! Os atendimentos dessa fila continuarão existindo, mas não terão mais nenhuma fila atribuída.\",\n        },\n      },\n      queueSelect: {\n        inputLabel: \"Filas\",\n      },\n      users: {\n        title: \"Usuários\",\n        table: {\n          name: \"Nome\",\n          email: \"Email\",\n          profile: \"Perfil\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Adicionar usuário\",\n        },\n        toasts: {\n          deleted: \"Usuário excluído com sucesso.\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage:\n            \"Todos os dados do usuário serão perdidos. Os atendimento abertos deste usuário serão movidos para a fila.\",\n        },\n      },\n      helps: {\n        title: \"Central de Ajuda\",\n      },\n      schedules: {\n        title: \"Agendamentos\",\n        confirmationModal: {\n          deleteTitle: \"Você tem certeza que quer excluir este Agendamento?\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        table: {\n          contact: \"Contato\",\n          body: \"Mensagem\",\n          sendAt: \"Data de Agendamento\",\n          sentAt: \"Data de Envio\",\n          status: \"Status\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Novo Agendamento\",\n        },\n        toasts: {\n          deleted: \"Agendamento excluído com sucesso.\",\n        },\n      },\n      tags: {\n        title: \"Tags\",\n        confirmationModal: {\n          deleteTitle: \"Você tem certeza que quer excluir esta Tag?\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        table: {\n          name: \"Nome\",\n          color: \"Cor\",\n          tickets: \"Registrados\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Nova Tag\",\n        },\n        toasts: {\n          deleted: \"Tag excluído com sucesso.\",\n        },\n      },\n      settings: {\n        success: \"Configurações salvas com sucesso.\",\n        title: \"Configurações\",\n        settings: {\n          userCreation: {\n            name: \"Criação de usuário\",\n            options: {\n              enabled: \"Ativado\",\n              disabled: \"Desativado\",\n            },\n          },\n        },\n      },\n      messagesList: {\n        header: {\n          assignedTo: \"Atribuído à:\",\n          buttons: {\n            return: \"Retornar\",\n            resolve: \"Resolver\",\n            reopen: \"Reabrir\",\n            accept: \"Aceitar\",\n          },\n        },\n      },\n      messagesInput: {\n        placeholderOpen: \"Digite uma mensagem\",\n        placeholderClosed:\n          \"Reabra ou aceite esse ticket para enviar uma mensagem.\",\n        signMessage: \"Assinar\",\n      },\n      contactDrawer: {\n        header: \"Dados do contato\",\n        buttons: {\n          edit: \"Editar contato\",\n        },\n        extraInfo: \"Outras informações\",\n      },\n      ticketOptionsMenu: {\n        schedule: \"Agendamento\",\n        delete: \"Deletar\",\n        transfer: \"Transferir\",\n        registerAppointment: \"Observações do Contato\",\n        appointmentsModal: {\n          title: \"Observações do Contato\",\n          textarea: \"Observação\",\n          placeholder: \"Insira aqui a informação que deseja registrar\",\n        },\n        confirmationModal: {\n          title: \"Deletar o ticket do contato\",\n          message:\n            \"Atenção! Todas as mensagens relacionadas ao ticket serão perdidas.\",\n        },\n        buttons: {\n          delete: \"Excluir\",\n          cancel: \"Cancelar\",\n        },\n      },\n      confirmationModal: {\n        buttons: {\n          confirm: \"Ok\",\n          cancel: \"Cancelar\",\n        },\n      },\n      messageOptionsMenu: {\n        delete: \"Deletar\",\n        reply: \"Responder\",\n        confirmationModal: {\n          title: \"Apagar mensagem?\",\n          message: \"Esta ação não pode ser revertida.\",\n        },\n      },\n      quickemessage: {\n        toasts: {\n          success: \"Atalho adicionado com sucesso!\",\n          deleted: \"Atalho removido com sucesso!\",\n        },\n        title: \"Respostas Rápidas\",\n        buttons: {\n          add: \"Nova Resposta\",\n        },\n        dialog: {\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          form: {\n            shortcode: \"Atalho\",\n            message: \"Mensagem\",\n            geral: \"Global\",\n          },\n          buttons: {\n            cancel: \"Cancelar\",\n            edit: \"Salvar\",\n            attach: \"Anexar\",\n            add: \"Salvar\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Exclusão\",\n          deleteMessage: \"Esta ação é irreversível! Deseja prosseguir?\",  \n        },\n      },\n      quickemessages: {\n        toasts: {\n          success: \"Atalho adicionado com sucesso!\",\n          deleted: \"Atalho removido com sucesso!\",\n        },\n        title: \"Respostas Rápidas\",\n        table: {\n          shortcode: \"Atalho\",\n          mediaName: \"Arquivo\",\n          status: \"Global\",\n          actions: \"Ação\",\n        },\n        searchPlaceholder: \"Procurar\",\n        buttons: {\n          add: \"Adicionar\",\n          attach: \"Anexar Arquivo\",\n          cancel: \"Cancelar\",\n          edit: \"Salvar\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Exclusão\",\n          deleteMessage: \"Esta ação é irreversível! Deseja prosseguir?\",  \n        },\n      },\n      backendErrors: {\n        ERR_NO_OTHER_WHATSAPP: \"Deve haver pelo menos um WhatsApp padrão.\",\n        ERR_NO_DEF_WAPP_FOUND:\n          \"Nenhum WhatsApp padrão encontrado. Verifique a página de conexões.\",\n        ERR_WAPP_NOT_INITIALIZED:\n          \"Esta sessão do WhatsApp não foi inicializada. Verifique a página de conexões.\",\n        ERR_WAPP_CHECK_CONTACT:\n          \"Não foi possível verificar o contato do WhatsApp. Verifique a página de conexões\",\n        ERR_WAPP_INVALID_CONTACT: \"Este não é um número de Whatsapp válido.\",\n        ERR_WAPP_DOWNLOAD_MEDIA:\n          \"Não foi possível baixar mídia do WhatsApp. Verifique a página de conexões.\",\n        ERR_INVALID_CREDENTIALS:\n          \"Erro de autenticação. Por favor, tente novamente.\",\n        ERR_SENDING_WAPP_MSG:\n          \"Erro ao enviar mensagem do WhatsApp. Verifique a página de conexões.\",\n        ERR_DELETE_WAPP_MSG: \"Não foi possível excluir a mensagem do WhatsApp.\",\n        ERR_OTHER_OPEN_TICKET: \"Já existe um tíquete aberto para este contato.\",\n        ERR_SESSION_EXPIRED: \"Sessão expirada. Por favor entre.\",\n        ERR_USER_CREATION_DISABLED:\n          \"A criação do usuário foi desabilitada pelo administrador.\",\n        ERR_NO_PERMISSION: \"Você não tem permissão para acessar este recurso.\",\n        ERR_DUPLICATED_CONTACT: \"Já existe um contato com este número.\",\n        ERR_NO_SETTING_FOUND: \"Nenhuma configuração encontrada com este ID.\",\n        ERR_NO_CONTACT_FOUND: \"Nenhum contato encontrado com este ID.\",\n        ERR_NO_TICKET_FOUND: \"Nenhum tíquete encontrado com este ID.\",\n        ERR_NO_USER_FOUND: \"Nenhum usuário encontrado com este ID.\",\n        ERR_NO_WAPP_FOUND: \"Nenhum WhatsApp encontrado com este ID.\",\n        ERR_CREATING_MESSAGE: \"Erro ao criar mensagem no banco de dados.\",\n        ERR_CREATING_TICKET: \"Erro ao criar tíquete no banco de dados.\",\n        ERR_FETCH_WAPP_MSG:\n          \"Erro ao buscar a mensagem no WhtasApp, talvez ela seja muito antiga.\",\n        ERR_QUEUE_COLOR_ALREADY_EXISTS:\n          \"Esta cor já está em uso, escolha outra.\",\n        ERR_WAPP_GREETING_REQUIRED:\n          \"A mensagem de saudação é obrigatório quando há mais de uma fila.\",\n      },\n    },\n  },\n};\n\nexport { messages };\n","import { messages as portugueseMessages } from \"./pt\";\nimport { messages as englishMessages } from \"./en\";\nimport { messages as spanishMessages } from \"./es\";\n\nconst messages = {\n\t...portugueseMessages,\n\t...englishMessages,\n\t...spanishMessages,\n};\n\nexport { messages };\n","const messages = {\n\ten: {\n\t\ttranslations: {\n\t\t\tsignup: {\n\t\t\t\ttitle: \"Sign up\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"User created successfully! Please login!\",\n\t\t\t\t\tfail: \"Error creating user. Check the reported data.\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Register\",\n\t\t\t\t\tlogin: \"Already have an account? Log in!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tlogin: {\n\t\t\t\ttitle: \"Login\",\n\t\t\t\tform: {\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Enter\",\n\t\t\t\t\tregister: \"Don't have an account? Register!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"Login successfully!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tdashboard: {\n\t\t\t\tcharts: {\n\t\t\t\t\tperDay: {\n\t\t\t\t\t\ttitle: \"Tickets today: \",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconnections: {\n\t\t\t\ttitle: \"Connections\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"WhatsApp connection deleted sucessfully!\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage: \"Are you sure? It cannot be reverted.\",\n\t\t\t\t\tdisconnectTitle: \"Disconnect\",\n\t\t\t\t\tdisconnectMessage: \"Are you sure? You'll need to read QR Code again.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add WhatsApp\",\n\t\t\t\t\tdisconnect: \"Disconnect\",\n\t\t\t\t\ttryAgain: \"Try Again\",\n\t\t\t\t\tqrcode: \"QR CODE\",\n\t\t\t\t\tnewQr: \"New QR CODE\",\n\t\t\t\t\tconnecting: \"Connectiing\",\n\t\t\t\t},\n\t\t\t\ttoolTips: {\n\t\t\t\t\tdisconnected: {\n\t\t\t\t\t\ttitle: \"Failed to start WhatsApp session\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Make sure your cell phone is connected to the internet and try again, or request a new QR Code\",\n\t\t\t\t\t},\n\t\t\t\t\tqrcode: {\n\t\t\t\t\t\ttitle: \"Waiting for QR Code read\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Click on 'QR CODE' button and read the QR Code with your cell phone to start session\",\n\t\t\t\t\t},\n\t\t\t\t\tconnected: {\n\t\t\t\t\t\ttitle: \"Connection established\",\n\t\t\t\t\t},\n\t\t\t\t\ttimeout: {\n\t\t\t\t\t\ttitle: \"Connection with cell phone has been lost\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Make sure your cell phone is connected to the internet and WhatsApp is open, or click on 'Disconnect' button to get a new QRcode\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tstatus: \"Status\",\n\t\t\t\t\tlastUpdate: \"Last Update\",\n\t\t\t\t\tdefault: \"Default\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t\tsession: \"Session\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twhatsappModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add WhatsApp\",\n\t\t\t\t\tedit: \"Edit WhatsApp\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tdefault: \"Default\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"WhatsApp saved successfully.\",\n\t\t\t},\n\t\t\tqrCode: {\n\t\t\t\tmessage: \"Read QrCode to start the session\",\n\t\t\t},\n\t\t\tcontacts: {\n\t\t\t\ttitle: \"Contacts\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"Contact deleted sucessfully!\",\n\t\t\t\t},\n\t\t\t\tsearchPlaceholder: \"Search ...\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\timportTitlte: \"Import contacts\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Are you sure you want to delete this contact? All related tickets will be lost.\",\n\t\t\t\t\timportMessage: \"Do you want to import all contacts from the phone?\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\timport: \"Import Contacts\",\n\t\t\t\t\tadd: \"Add Contact\",\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\twhatsapp: \"WhatsApp\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontactModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add contact\",\n\t\t\t\t\tedit: \"Edit contact\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tmainInfo: \"Contact details\",\n\t\t\t\t\textraInfo: \"Additional information\",\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tnumber: \"Whatsapp number\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\textraName: \"Field name\",\n\t\t\t\t\textraValue: \"Value\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\taddExtraInfo: \"Add information\",\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Contact saved successfully.\",\n\t\t\t},\n\t\t\tqueueModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add queue\",\n\t\t\t\t\tedit: \"Edit queue\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreetingMessage: \"Greeting Message\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tuserModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add user\",\n\t\t\t\t\tedit: \"Edit user\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"User saved successfully.\",\n\t\t\t},\n\t\t\tchat: {\n\t\t\t\tnoTicketMessage: \"Select a ticket to start chatting.\",\n\t\t\t},\n\t\t\tticketsManager: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tnewTicket: \"New\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsQueueSelect: {\n\t\t\t\tplaceholder: \"Queues\",\n\t\t\t},\n\t\t\ttickets: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"The ticket you were on has been deleted.\",\n\t\t\t\t},\n\t\t\t\tnotification: {\n\t\t\t\t\tmessage: \"Message from\",\n\t\t\t\t},\n\t\t\t\ttabs: {\n\t\t\t\t\topen: { title: \"Inbox\" },\n\t\t\t\t\tclosed: { title: \"Resolved\" },\n\t\t\t\t\tsearch: { title: \"Search\" },\n\t\t\t\t},\n\t\t\t\tsearch: {\n\t\t\t\t\tplaceholder: \"Search tickets and messages.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tshowAll: \"All\",\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransferTicketModal: {\n\t\t\t\ttitle: \"Transfer Ticket\",\n\t\t\t\tfieldLabel: \"Type to search for users\",\n\t\t\t\tnoOptions: \"No user found with this name\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Transfer\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsList: {\n\t\t\t\tpendingHeader: \"Queue\",\n\t\t\t\tassignedHeader: \"Working on\",\n\t\t\t\tnoTicketsTitle: \"Nothing here!\",\n\t\t\t\tnoTicketsMessage: \"No tickets found with this status or search term.\",\n\t\t\t\tbuttons: {\n\t\t\t\t\taccept: \"Accept\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tnewTicketModal: {\n\t\t\t\ttitle: \"Create Ticket\",\n\t\t\t\tfieldLabel: \"Type to search for a contact\",\n\t\t\t\tadd: \"Add\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmainDrawer: {\n\t\t\t\tlistItems: {\n\t\t\t\t\tdashboard: \"Dashboard\",\n\t\t\t\t\tconnections: \"Connections\",\n\t\t\t\t\ttickets: \"Tickets\",\n\t\t\t\t\tcontacts: \"Contacts\",\n\t\t\t\t\tqueues: \"Queues\",\n\t\t\t\t\tadministration: \"Administration\",\n\t\t\t\t\tusers: \"Users\",\n\t\t\t\t\tsettings: \"Settings\",\n\t\t\t\t},\n\t\t\t\tappBar: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t\t\tlogout: \"Logout\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotifications: {\n\t\t\t\tnoTickets: \"No notifications.\",\n\t\t\t},\n\t\t\tqueues: {\n\t\t\t\ttitle: \"Queues\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreeting: \"Greeting message\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add queue\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Are you sure? It cannot be reverted! Tickets in this queue will still exist, but will not have any queues assigned.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueueSelect: {\n\t\t\t\tinputLabel: \"Queues\",\n\t\t\t},\n\t\t\tusers: {\n\t\t\t\ttitle: \"Users\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add user\",\n\t\t\t\t},\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"User deleted sucessfully.\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"All user data will be lost. Users' open tickets will be moved to queue.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tsuccess: \"Settings saved successfully.\",\n\t\t\t\ttitle: \"Settings\",\n\t\t\t\tsettings: {\n\t\t\t\t\tuserCreation: {\n\t\t\t\t\t\tname: \"User creation\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tenabled: \"Enabled\",\n\t\t\t\t\t\t\tdisabled: \"Disabled\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesList: {\n\t\t\t\theader: {\n\t\t\t\t\tassignedTo: \"Assigned to:\",\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\treturn: \"Return\",\n\t\t\t\t\t\tresolve: \"Resolve\",\n\t\t\t\t\t\treopen: \"Reopen\",\n\t\t\t\t\t\taccept: \"Accept\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesInput: {\n\t\t\t\tplaceholderOpen: \"Type a message\",\n\t\t\t\tplaceholderClosed: \"Reopen or accept this ticket to send a message.\",\n\t\t\t\tsignMessage: \"Sign\",\n\t\t\t},\n\t\t\tcontactDrawer: {\n\t\t\t\theader: \"Contact details\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tedit: \"Edit contact\",\n\t\t\t\t},\n\t\t\t\textraInfo: \"Other information\",\n\t\t\t},\n\t\t\tticketOptionsMenu: {\n\t\t\t\tdelete: \"Delete\",\n\t\t\t\ttransfer: \"Transfer\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"Delete ticket #\",\n\t\t\t\t\ttitleFrom: \"from contact \",\n\t\t\t\t\tmessage: \"Attention! All ticket's related messages will be lost.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tdelete: \"Delete\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationModal: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tconfirm: \"Ok\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageOptionsMenu: {\n\t\t\t\tdelete: \"Delete\",\n\t\t\t\treply: \"Reply\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"Delete message?\",\n\t\t\t\t\tmessage: \"This action cannot be reverted.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tbackendErrors: {\n\t\t\t\tERR_NO_OTHER_WHATSAPP:\n\t\t\t\t\t\"There must be at lest one default WhatsApp connection.\",\n\t\t\t\tERR_NO_DEF_WAPP_FOUND:\n\t\t\t\t\t\"No default WhatsApp found. Check connections page.\",\n\t\t\t\tERR_WAPP_NOT_INITIALIZED:\n\t\t\t\t\t\"This WhatsApp session is not initialized. Check connections page.\",\n\t\t\t\tERR_WAPP_CHECK_CONTACT:\n\t\t\t\t\t\"Could not check WhatsApp contact. Check connections page.\",\n\t\t\t\tERR_WAPP_INVALID_CONTACT: \"This is not a valid whatsapp number.\",\n\t\t\t\tERR_WAPP_DOWNLOAD_MEDIA:\n\t\t\t\t\t\"Could not download media from WhatsApp. Check connections page.\",\n\t\t\t\tERR_INVALID_CREDENTIALS: \"Authentication error. Please try again.\",\n\t\t\t\tERR_SENDING_WAPP_MSG:\n\t\t\t\t\t\"Error sending WhatsApp message. Check connections page.\",\n\t\t\t\tERR_DELETE_WAPP_MSG: \"Couldn't delete message from WhatsApp.\",\n\t\t\t\tERR_OTHER_OPEN_TICKET:\n\t\t\t\t\t\"There's already an open ticket for this contact.\",\n\t\t\t\tERR_SESSION_EXPIRED: \"Session expired. Please login.\",\n\t\t\t\tERR_USER_CREATION_DISABLED:\n\t\t\t\t\t\"User creation was disabled by administrator.\",\n\t\t\t\tERR_NO_PERMISSION: \"You don't have permission to access this resource.\",\n\t\t\t\tERR_DUPLICATED_CONTACT: \"A contact with this number already exists.\",\n\t\t\t\tERR_NO_SETTING_FOUND: \"No setting found with this ID.\",\n\t\t\t\tERR_NO_CONTACT_FOUND: \"No contact found with this ID.\",\n\t\t\t\tERR_NO_TICKET_FOUND: \"No ticket found with this ID.\",\n\t\t\t\tERR_NO_USER_FOUND: \"No user found with this ID.\",\n\t\t\t\tERR_NO_WAPP_FOUND: \"No WhatsApp found with this ID.\",\n\t\t\t\tERR_CREATING_MESSAGE: \"Error while creating message on database.\",\n\t\t\t\tERR_CREATING_TICKET: \"Error while creating ticket on database.\",\n\t\t\t\tERR_FETCH_WAPP_MSG:\n\t\t\t\t\t\"Error fetching the message in WhtasApp, maybe it is too old.\",\n\t\t\t\tERR_QUEUE_COLOR_ALREADY_EXISTS:\n\t\t\t\t\t\"This color is already in use, pick another one.\",\n\t\t\t\tERR_WAPP_GREETING_REQUIRED:\n\t\t\t\t\t\"Greeting message is required if there is more than one queue.\",\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport { messages };\n","const messages = {\n\tes: {\n\t\ttranslations: {\n\t\t\tsignup: {\n\t\t\t\ttitle: \"Registro\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess:\n\t\t\t\t\t\t\"¡El usuario ha sido creado satisfactoriamente! ¡Ahora inicia sesión!\",\n\t\t\t\t\tfail: \"Error creando el usuario. Verifica la data reportada.\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Regístrate\",\n\t\t\t\t\tlogin: \"¿Ya tienes una cuenta? ¡Inicia sesión!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tlogin: {\n\t\t\t\ttitle: \"Inicio de Sesión\",\n\t\t\t\tform: {\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Ingresa\",\n\t\t\t\t\tregister: \"¿No tienes cuenta? ¡Regístrate!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"¡Inicio de sesión exitoso!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tdashboard: {\n\t\t\t\tcharts: {\n\t\t\t\t\tperDay: {\n\t\t\t\t\t\ttitle: \"Tickets hoy: \",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconnections: {\n\t\t\t\ttitle: \"Conexiones\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted:\n\t\t\t\t\t\t\"¡La conexión de WhatsApp ha sido borrada satisfactoriamente!\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\tdeleteMessage: \"¿Estás seguro? Este proceso no puede ser revertido.\",\n\t\t\t\t\tdisconnectTitle: \"Desconectar\",\n\t\t\t\t\tdisconnectMessage: \"Estás seguro? Deberá volver a leer el código QR\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agrega WhatsApp\",\n\t\t\t\t\tdisconnect: \"Desconectar\",\n\t\t\t\t\ttryAgain: \"Inténtalo de nuevo\",\n\t\t\t\t\tqrcode: \"QR CODE\",\n\t\t\t\t\tnewQr: \"Nuevo QR CODE\",\n\t\t\t\t\tconnecting: \"Conectando\",\n\t\t\t\t},\n\t\t\t\ttoolTips: {\n\t\t\t\t\tdisconnected: {\n\t\t\t\t\t\ttitle: \"No se pudo iniciar la sesión de WhatsApp\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Asegúrese de que su teléfono celular esté conectado a Internet y vuelva a intentarlo o solicite un nuevo código QR\",\n\t\t\t\t\t},\n\t\t\t\t\tqrcode: {\n\t\t\t\t\t\ttitle: \"Esperando la lectura del código QR\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Haga clic en el botón 'CÓDIGO QR' y lea el Código QR con su teléfono celular para iniciar la sesión\",\n\t\t\t\t\t},\n\t\t\t\t\tconnected: {\n\t\t\t\t\t\ttitle: \"Conexión establecida\",\n\t\t\t\t\t},\n\t\t\t\t\ttimeout: {\n\t\t\t\t\t\ttitle: \"Se perdió la conexión con el teléfono celular\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Asegúrese de que su teléfono celular esté conectado a Internet y que WhatsApp esté abierto, o haga clic en el botón 'Desconectar' para obtener un nuevo código QR\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tstatus: \"Estado\",\n\t\t\t\t\tlastUpdate: \"Última Actualización\",\n\t\t\t\t\tdefault: \"Por Defecto\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t\tsession: \"Sesión\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twhatsappModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agrega WhatsApp\",\n\t\t\t\t\tedit: \"Edita WhatsApp\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tdefault: \"Por Defecto\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"WhatsApp guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tqrCode: {\n\t\t\t\tmessage: \"Lée el código QR para empezar la sesión.\",\n\t\t\t},\n\t\t\tcontacts: {\n\t\t\t\ttitle: \"Contactos\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"¡Contacto borrado satisfactoriamente!\",\n\t\t\t\t},\n\t\t\t\tsearchPlaceholder: \"Buscar...\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\timportTitlte: \"Importar contactos\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"¿Estás seguro que deseas borrar este contacto? Todos los tickets relacionados se perderán.\",\n\t\t\t\t\timportMessage:\n\t\t\t\t\t\t\"¿Quieres importar todos los contactos desde tu teléfono?\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\timport: \"Importar Contactos\",\n\t\t\t\t\tadd: \"Agregar Contacto\",\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\twhatsapp: \"WhatsApp\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontactModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar contacto\",\n\t\t\t\t\tedit: \"Editar contacto\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tmainInfo: \"Detalles del contacto\",\n\t\t\t\t\textraInfo: \"Información adicional\",\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tnumber: \"Número de Whatsapp\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\textraName: \"Nombre del Campo\",\n\t\t\t\t\textraValue: \"Valor\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\taddExtraInfo: \"Agregar información\",\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Contacto guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tqueueModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar cola\",\n\t\t\t\t\tedit: \"Editar cola\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreetingMessage: \"Mensaje de saludo\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Añadir\",\n\t\t\t\t\tokEdit: \"Ahorrar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tuserModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar usuario\",\n\t\t\t\t\tedit: \"Editar usuario\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Usuario guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tchat: {\n\t\t\t\tnoTicketMessage: \"Selecciona un ticket para empezar a chatear.\",\n\t\t\t},\n\t\t\tticketsManager: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tnewTicket: \"Nuevo\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsQueueSelect: {\n\t\t\t\tplaceholder: \"Linhas\",\n\t\t\t},\n\t\t\ttickets: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"El ticket en el que estabas ha sido borrado.\",\n\t\t\t\t},\n\t\t\t\tnotification: {\n\t\t\t\t\tmessage: \"Mensaje de\",\n\t\t\t\t},\n\t\t\t\ttabs: {\n\t\t\t\t\topen: { title: \"Bandeja\" },\n\t\t\t\t\tclosed: { title: \"Resueltos\" },\n\t\t\t\t\tsearch: { title: \"Buscar\" },\n\t\t\t\t},\n\t\t\t\tsearch: {\n\t\t\t\t\tplaceholder: \"Buscar tickets y mensajes.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tshowAll: \"Todos\",\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransferTicketModal: {\n\t\t\t\ttitle: \"Transferir Ticket\",\n\t\t\t\tfieldLabel: \"Escriba para buscar usuarios\",\n\t\t\t\tnoOptions: \"No se encontraron usuarios con ese nombre\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Transferir\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsList: {\n\t\t\t\tpendingHeader: \"Cola\",\n\t\t\t\tassignedHeader: \"Trabajando en\",\n\t\t\t\tnoTicketsTitle: \"¡Nada acá!\",\n\t\t\t\tnoTicketsMessage:\n\t\t\t\t\t\"No se encontraron tickets con este estado o término de búsqueda\",\n\t\t\t\tbuttons: {\n\t\t\t\t\taccept: \"Acceptar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tnewTicketModal: {\n\t\t\t\ttitle: \"Crear Ticket\",\n\t\t\t\tfieldLabel: \"Escribe para buscar un contacto\",\n\t\t\t\tadd: \"Añadir\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmainDrawer: {\n\t\t\t\tlistItems: {\n\t\t\t\t\tdashboard: \"Dashboard\",\n\t\t\t\t\tconnections: \"Conexiones\",\n\t\t\t\t\ttickets: \"Tickets\",\n\t\t\t\t\tcontacts: \"Contactos\",\n\t\t\t\t\tqueues: \"Linhas\",\n\t\t\t\t\tadministration: \"Administración\",\n\t\t\t\t\tusers: \"Usuarios\",\n\t\t\t\t\tsettings: \"Configuración\",\n\t\t\t\t},\n\t\t\t\tappBar: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t\t\tlogout: \"Cerrar Sesión\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotifications: {\n\t\t\t\tnoTickets: \"Sin notificaciones.\",\n\t\t\t},\n\t\t\tqueues: {\n\t\t\t\ttitle: \"Linhas\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreeting: \"Mensaje de saludo\",\n\t\t\t\t\tactions: \"Comportamiento\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agregar cola\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Eliminar\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"¿Estás seguro? ¡Esta acción no se puede revertir! Los tickets en esa cola seguirán existiendo, pero ya no tendrán ninguna cola asignada.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueueSelect: {\n\t\t\t\tinputLabel: \"Linhas\",\n\t\t\t},\n\t\t\tusers: {\n\t\t\t\ttitle: \"Usuarios\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agregar usuario\",\n\t\t\t\t},\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"Usuario borrado satisfactoriamente.\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Toda la información del usuario se perderá. Los tickets abiertos de los usuarios se moverán a la cola.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tsuccess: \"Configuración guardada satisfactoriamente.\",\n\t\t\t\ttitle: \"Configuración\",\n\t\t\t\tsettings: {\n\t\t\t\t\tuserCreation: {\n\t\t\t\t\t\tname: \"Creación de usuarios\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tenabled: \"Habilitado\",\n\t\t\t\t\t\t\tdisabled: \"Deshabilitado\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesList: {\n\t\t\t\theader: {\n\t\t\t\t\tassignedTo: \"Asignado a:\",\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\treturn: \"Devolver\",\n\t\t\t\t\t\tresolve: \"Resolver\",\n\t\t\t\t\t\treopen: \"Reabrir\",\n\t\t\t\t\t\taccept: \"Aceptar\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesInput: {\n\t\t\t\tplaceholderOpen: \"Escribe un mensaje\",\n\t\t\t\tplaceholderClosed:\n\t\t\t\t\t\"Vuelva a abrir o acepte este ticket para enviar un mensaje.\",\n\t\t\t\tsignMessage: \"Firmar\",\n\t\t\t},\n\t\t\tcontactDrawer: {\n\t\t\t\theader: \"Detalles del contacto\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tedit: \"Editar contacto\",\n\t\t\t\t},\n\t\t\t\textraInfo: \"Otra información\",\n\t\t\t},\n\t\t\tticketOptionsMenu: {\n\t\t\t\tdelete: \"Borrar\",\n\t\t\t\ttransfer: \"Transferir\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"¿Borrar ticket #\",\n\t\t\t\t\ttitleFrom: \"del contacto \",\n\t\t\t\t\tmessage:\n\t\t\t\t\t\t\"¡Atención! Todos los mensajes Todos los mensajes relacionados con el ticket se perderán.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tdelete: \"Borrar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationModal: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tconfirm: \"Ok\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageOptionsMenu: {\n\t\t\t\tdelete: \"Borrar\",\n\t\t\t\treply: \"Responder\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"¿Borrar mensaje?\",\n\t\t\t\t\tmessage: \"Esta acción no puede ser revertida.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tbackendErrors: {\n\t\t\t\tERR_NO_OTHER_WHATSAPP:\n\t\t\t\t\t\"Debe haber al menos una conexión de WhatsApp predeterminada.\",\n\t\t\t\tERR_NO_DEF_WAPP_FOUND:\n\t\t\t\t\t\"No se encontró WhatsApp predeterminado. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_NOT_INITIALIZED:\n\t\t\t\t\t\"Esta sesión de WhatsApp no ​​está inicializada. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_CHECK_CONTACT:\n\t\t\t\t\t\"No se pudo verificar el contacto de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_INVALID_CONTACT: \"Este no es un número de whatsapp válido.\",\n\t\t\t\tERR_WAPP_DOWNLOAD_MEDIA:\n\t\t\t\t\t\"No se pudieron descargar los medios de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_INVALID_CREDENTIALS: \"Error de autenticación. Vuelva a intentarlo.\",\n\t\t\t\tERR_SENDING_WAPP_MSG:\n\t\t\t\t\t\"Error al enviar el mensaje de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_DELETE_WAPP_MSG: \"No se pudo borrar el mensaje de WhatsApp.\",\n\t\t\t\tERR_OTHER_OPEN_TICKET: \"Ya hay un ticket abierto para este contacto.\",\n\t\t\t\tERR_SESSION_EXPIRED: \"Sesión caducada. Inicie sesión.\",\n\t\t\t\tERR_USER_CREATION_DISABLED:\n\t\t\t\t\t\"La creación de usuarios fue deshabilitada por el administrador.\",\n\t\t\t\tERR_NO_PERMISSION: \"No tienes permiso para acceder a este recurso.\",\n\t\t\t\tERR_DUPLICATED_CONTACT: \"Ya existe un contacto con este número.\",\n\t\t\t\tERR_NO_SETTING_FOUND:\n\t\t\t\t\t\"No se encontró ninguna configuración con este ID.\",\n\t\t\t\tERR_NO_CONTACT_FOUND: \"No se encontró ningún contacto con este ID.\",\n\t\t\t\tERR_NO_TICKET_FOUND: \"No se encontró ningún ticket con este ID.\",\n\t\t\t\tERR_NO_USER_FOUND: \"No se encontró ningún usuario con este ID.\",\n\t\t\t\tERR_NO_WAPP_FOUND: \"No se encontró WhatsApp con este ID.\",\n\t\t\t\tERR_CREATING_MESSAGE: \"Error al crear el mensaje en la base de datos.\",\n\t\t\t\tERR_CREATING_TICKET: \"Error al crear el ticket en la base de datos.\",\n\t\t\t\tERR_FETCH_WAPP_MSG:\n\t\t\t\t\t\"Error al obtener el mensaje en WhtasApp, tal vez sea demasiado antiguo.\",\n\t\t\t\tERR_QUEUE_COLOR_ALREADY_EXISTS:\n\t\t\t\t\t\"Este color ya está en uso, elija otro.\",\n\t\t\t\tERR_WAPP_GREETING_REQUIRED:\n\t\t\t\t\t\"El mensaje de saludo es obligatorio cuando hay más de una cola.\",\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport { messages };\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport { messages } from \"./languages\";\n\ni18n.use(LanguageDetector).init({\n\tdebug: false,\n\tdefaultNS: [\"translations\"],\n\tfallbackLng: \"pt\",\n\tns: [\"translations\"],\n\tresources: messages,\n});\n\nexport { i18n };\n","import { toast } from \"react-toastify\";\nimport { i18n } from \"../translate/i18n\";\nimport { isString } from 'lodash';\n\nconst toastError = err => {\n\tconst errorMsg = err.response?.data?.error;\n\tif (errorMsg) {\n\t\tif (i18n.exists(`backendErrors.${errorMsg}`)) {\n\t\t\ttoast.error(i18n.t(`backendErrors.${errorMsg}`), {\n\t\t\t\ttoastId: errorMsg,\n\t\t\t\tautoClose: 2000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t\ttheme: \"light\",\n\t\t\t});\n\t\t\treturn\n\t\t} else {\n\t\t\ttoast.error(errorMsg, {\n\t\t\t\ttoastId: errorMsg,\n\t\t\t\tautoClose: 2000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t\ttheme: \"light\",\n\t\t\t});\n\t\t\treturn\n\t\t}\n\t} if (isString(err)) {\n\t\ttoast.error(err);\n\t\treturn\n\t} else {\n\t\ttoast.error(\"An error occurred!\");\n\t\treturn\n\t}\n};\n\nexport default toastError;\n","import axios from \"axios\";\n\nconst api = axios.create({\n\tbaseURL: process.env.REACT_APP_BACKEND_URL,\n\twithCredentials: true,\n});\n\nexport const openApi = axios.create({\n\tbaseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default api;\n","import openSocket from \"socket.io-client\";\nimport { isObject } from \"lodash\";\n\nexport function socketConnection(params) {\n  let userId = null;\n  if (localStorage.getItem(\"userId\")) {\n    userId = localStorage.getItem(\"userId\");\n  }\n  return openSocket(process.env.REACT_APP_BACKEND_URL, {\n    transports: [\"websocket\", \"polling\", \"flashsocket\"],\n    pingTimeout: 18000,\n    pingInterval: 18000,\n    query: isObject(params) ? { ...params, userId } : { userId },\n  });\n}\n","import { useState, useEffect, useReducer } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n\n    return [...whatsApps];\n  }\n\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchSession = async () => {\n      try {\n        const { data } = await api.get(\"/whatsapp/?session=0\");\n        dispatch({ type: \"LOAD_WHATSAPPS\", payload: data });\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_WHATSAPPS\", payload: data.whatsapp });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_WHATSAPPS\", payload: data.whatsappId });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsappSession`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_SESSION\", payload: data.session });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return { whatsApps, loading };\n};\n\nexport default useWhatsApps;\n","import React, { createContext } from \"react\";\n\nimport useWhatsApps from \"../../hooks/useWhatsApps\";\n\nconst WhatsAppsContext = createContext();\n\nconst WhatsAppsProvider = ({ children }) => {\n\tconst { loading, whatsApps } = useWhatsApps();\n\n\treturn (\n\t\t<WhatsAppsContext.Provider value={{ whatsApps, loading }}>\n\t\t\t{children}\n\t\t</WhatsAppsContext.Provider>\n\t);\n};\n\nexport { WhatsAppsContext, WhatsAppsProvider };\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  api.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n        setIsAuth(true);\n      }\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n\n  api.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    async (error) => {\n      const originalRequest = error.config;\n      if (error?.response?.status === 403 && !originalRequest._retry) {\n        originalRequest._retry = true;\n\n        const { data } = await api.post(\"/auth/refresh_token\");\n        if (data) {\n          localStorage.setItem(\"token\", JSON.stringify(data.token));\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        }\n        return api(originalRequest);\n      }\n      if (error?.response?.status === 401) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"companyId\");\n        api.defaults.headers.Authorization = undefined;\n        setIsAuth(false);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const { data } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-user`, (data) => {\n      if (data.action === \"update\" && data.user.id === user.id) {\n        setUser(data.user);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const handleLogin = async (userData) => {\n    setLoading(true);\n\n    try {\n      const { data } = await api.post(\"/auth/login\", userData);\n      const { user: { companyId, id, company }, } = data;\n\n\n\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(\n          (s) => s.key === \"campaignsEnabled\"\n        );\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n\n      moment.locale('pt-br');\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n\n      var diff = moment(dueDate).diff(moment(moment()).format());\n\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n      var diasVenc = vencimento.valueOf() - hoje.valueOf()\n      console.log(\"🚀 Console Log : diasVenc\", diasVenc);\n\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(`Sua assinatura vence em ${Math.round(dias)} ${Math.round(dias) === 1 ? 'dia' : 'dias'} `);\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        console.log(\"BLOQUEADO\")\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha \n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    setLoading(true);\n\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentUserInfo = async () => {\n    try {\n      const { data } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo,\n  };\n};\n\nexport default useAuth;\n","import React, { createContext } from \"react\";\n\nimport useAuth from \"../../hooks/useAuth.js\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n\tconst { loading, user, isAuth, handleLogin, handleLogout } = useAuth();\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ loading, user, isAuth, handleLogin, handleLogout }}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport { AuthContext, AuthProvider };\n","const rules = {\n\tuser: {\n\t\tstatic: [],\n\t},\n\n\tadmin: {\n\t\tstatic: [\n\t\t\t\"dashboard:view\",\n\t\t\t\"drawer-admin-items:view\",\n\t\t\t\"tickets-manager:showall\",\n\t\t\t\"user-modal:editProfile\",\n\t\t\t\"user-modal:editQueues\",\n\t\t\t\"ticket-options:deleteTicket\",\n\t\t\t\"contacts-page:deleteContact\",\n\t\t\t\"connections-page:actionButtons\",\n\t\t\t\"connections-page:addConnection\",\n\t\t\t\"connections-page:editOrDeleteConnection\"\n\t\t],\n\t},\n};\n\nexport default rules;\n","import rules from \"../../rules\";\n\nconst check = (role, action, data) => {\n\tconst permissions = rules[role];\n\tif (!permissions) {\n\t\t// role is not present in the rules\n\t\treturn false;\n\t}\n\n\tconst staticPermissions = permissions.static;\n\n\tif (staticPermissions && staticPermissions.includes(action)) {\n\t\t// static rule not provided for action\n\t\treturn true;\n\t}\n\n\tconst dynamicPermissions = permissions.dynamic;\n\n\tif (dynamicPermissions) {\n\t\tconst permissionCondition = dynamicPermissions[action];\n\t\tif (!permissionCondition) {\n\t\t\t// dynamic rule not provided for action\n\t\t\treturn false;\n\t\t}\n\n\t\treturn permissionCondition(data);\n\t}\n\treturn false;\n};\n\nconst Can = ({ role, perform, data, yes, no }) =>\n\tcheck(role, perform, data) ? yes() : no();\n\nCan.defaultProps = {\n\tyes: () => null,\n\tno: () => null,\n};\n\nexport { Can };\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Badge, Collapse, List } from \"@material-ui/core\";\n//import DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\n//import SyncAltIcon from \"@material-ui/icons/SyncAlt\";\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\n//import ContactPhoneOutlinedIcon from \"@material-ui/icons/ContactPhoneOutlined\";\nimport AccountTreeOutlinedIcon from \"@material-ui/icons/AccountTreeOutlined\";\n//import FlashOnIcon from \"@material-ui/icons/FlashOn\";\n//import HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport CodeRoundedIcon from \"@material-ui/icons/CodeRounded\";\n// import EventIcon from \"@material-ui/icons/Event\";\n//import LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\n//import EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ListIcon from \"@material-ui/icons/ListAlt\";\n//import AnnouncementIcon from \"@material-ui/icons/Announcement\";\n//import ForumIcon from \"@material-ui/icons/Forum\";\n//import LocalAtmIcon from '@material-ui/icons/LocalAtm';\n//import DialpadIcon from '@material-ui/icons/Dialpad';\n//import PermContactCalendarSharpIcon from '@material-ui/icons/PermContactCalendarSharp';\n//import ContactPhoneSharpIcon from '@material-ui/icons/ContactPhoneSharp';\n//import SpeakerNotesSharpIcon from '@material-ui/icons/SpeakerNotesSharp';\n//import DashboardSharpIcon from '@material-ui/icons/DashboardSharp';\n//import LiveHelpSharpIcon from '@material-ui/icons/LiveHelpSharp';\n//import AssignmentSharpIcon from '@material-ui/icons/AssignmentSharp';\n//import ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\n//import ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\n//import AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\n//import ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\n//import LiveHelpOutlinedIcon from '@material-ui/icons/LiveHelpOutlined';\n//import AnnouncementOutlinedIcon from '@material-ui/icons/AnnouncementOutlined';\n//import FeaturedPlayListOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined';\n//import InsertChartOutlinedIcon from '@material-ui/icons/InsertChartOutlined';\n//import EventNoteOutlinedIcon from '@material-ui/icons/EventNoteOutlined';\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\nimport PieChartOutlinedIcon from '@material-ui/icons/PieChartOutlined';\nimport LocalPhoneOutlinedIcon from '@material-ui/icons/LocalPhoneOutlined';\nimport ContactlessOutlinedIcon from '@material-ui/icons/ContactlessOutlined';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\nimport FlipCameraAndroidOutlinedIcon from '@material-ui/icons/FlipCameraAndroidOutlined';\n//import NotificationImportantOutlinedIcon from '@material-ui/icons/NotificationImportantOutlined';\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\nimport WrapTextOutlinedIcon from '@material-ui/icons/WrapTextOutlined';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport OfflineBoltOutlinedIcon from '@material-ui/icons/OfflineBoltOutlined';\nimport VolumeUpOutlinedIcon from '@material-ui/icons/VolumeUpOutlined';\n\n\nimport { i18n } from \"../translate/i18n\";\nimport { WhatsAppsContext } from \"../context/WhatsApp/WhatsAppsContext\";\nimport { AuthContext } from \"../context/Auth/AuthContext\";\nimport { Can } from \"../components/Can\";\nimport { socketConnection } from \"../services/socket\";\nimport { isArray } from \"lodash\";\nimport api from \"../services/api\";\nimport toastError from \"../errors/toastError\";\n\nfunction ListItemLink(props) {\n  const { icon, primary, to, className } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink} className={className}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CHATS\") {\n    const chats = action.payload;\n    const newChats = [];\n\n    if (isArray(chats)) {\n      chats.forEach((chat) => {\n        const chatIndex = state.findIndex((u) => u.id === chat.id);\n        if (chatIndex !== -1) {\n          state[chatIndex] = chat;\n        } else {\n          newChats.push(chat);\n        }\n      });\n    }\n\n    return [...state, ...newChats];\n  }\n\n  if (action.type === \"UPDATE_CHATS\") {\n    const chat = action.payload;\n    const chatIndex = state.findIndex((u) => u.id === chat.id);\n\n    if (chatIndex !== -1) {\n      state[chatIndex] = chat;\n      return [...state];\n    } else {\n      return [chat, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CHAT\") {\n    const chatId = action.payload;\n\n    const chatIndex = state.findIndex((u) => u.id === chatId);\n    if (chatIndex !== -1) {\n      state.splice(chatIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n\n  if (action.type === \"CHANGE_CHAT\") {\n    const changedChats = state.map((chat) => {\n      if (chat.id === action.payload.chat.id) {\n        return action.payload.chat;\n      }\n      return chat;\n    });\n    return changedChats;\n  }\n};\n\nconst MainListItems = (props) => {\n  const { drawerClose } = props;\n  const { whatsApps } = useContext(WhatsAppsContext);\n  const { user } = useContext(AuthContext);\n  const [connectionWarning, setConnectionWarning] = useState(false);\n  const [openCampaignSubmenu, setOpenCampaignSubmenu] = useState(false);\n  const [showCampaigns, setShowCampaigns] = useState(false);\n  const history = useHistory();\n\n  const [invisible, setInvisible] = useState(true);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam] = useState(\"\");\n  const [chats, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      fetchChats();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"new-message\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n      }\n      if (data.action === \"update\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    let unreadsCount = 0;\n    if (chats.length > 0) {\n      for (let chat of chats) {\n        for (let chatUser of chat.users) {\n          if (chatUser.userId === user.id) {\n            unreadsCount += chatUser.unreads;\n          }\n        }\n      }\n    }\n    if (unreadsCount > 0) {\n      setInvisible(false);\n    } else {\n      setInvisible(true);\n    }\n  }, [chats, user.id]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cshow\")) {\n      setShowCampaigns(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      if (whatsApps.length > 0) {\n        const offlineWhats = whatsApps.filter((whats) => {\n          return (\n            whats.status === \"qrcode\" ||\n            whats.status === \"PAIRING\" ||\n            whats.status === \"DISCONNECTED\" ||\n            whats.status === \"TIMEOUT\" ||\n            whats.status === \"OPENING\"\n          );\n        });\n        if (offlineWhats.length > 0) {\n          setConnectionWarning(true);\n        } else {\n          setConnectionWarning(false);\n        }\n      }\n    }, 2000);\n    return () => clearTimeout(delayDebounceFn);\n  }, [whatsApps]);\n\n  const fetchChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_CHATS\", payload: data.records });\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return (\n    <div onClick={drawerClose}>\n      <Can\n        role={user.profile}\n        perform=\"dashboard:view\"\n        yes={() => (\n          <ListItemLink\n            to=\"/\"\n            primary=\"Dashboard\"\n            icon={<PieChartOutlinedIcon />}\n          />\n        )}\n      />\n\n      <ListItemLink\n        to=\"/tickets\"\n        primary={i18n.t(\"mainDrawer.listItems.tickets\")}\n        icon={<WhatsAppIcon />}\n      />\n\n      <ListItemLink\n        to=\"/Kanban\"\n        primary={i18n.t(\"Esteira\")}\n        icon={<ExploreOutlinedIcon />}\n      />\n\n      <ListItemLink\n        to=\"/tags\"\n        primary={i18n.t(\"mainDrawer.listItems.tags\")}\n        icon={<LocalOfferOutlinedIcon />}\n      />\n\n      <ListItemLink\n        to=\"/quick-messages\"\n        primary={i18n.t(\"mainDrawer.listItems.quickMessages\")}\n        icon={<OfflineBoltOutlinedIcon />}\n      />\n\n      <ListItemLink\n        to=\"/contacts\"\n        primary={i18n.t(\"mainDrawer.listItems.contacts\")}\n        icon={<LocalPhoneOutlinedIcon />}\n      />\n\n      <ListItemLink\n        to=\"/schedules\"\n        primary={i18n.t(\"mainDrawer.listItems.schedules\")}\n        icon={<EventAvailableOutlinedIcon />}\n      />\n\n\n{/*      <ListItemLink\n        to=\"/chats\"\n        primary={i18n.t(\"mainDrawer.listItems.chats\")}\n        icon={\n          <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\n            <FlipCameraAndroidOutlinedIcon />\n          </Badge>\n        }\n      /> */}\n\n{/*      <ListItemLink\n        to=\"/helps\"\n        primary={i18n.t(\"mainDrawer.listItems.helps\")}\n        icon={<HelpOutlineOutlinedIcon />}\n    />  */}\n\n      <Can\n        role={user.profile}\n        perform=\"drawer-admin-items:view\"\n        yes={() => (\n          <>\n            <Divider />\n            <ListSubheader inset>\n              {i18n.t(\"mainDrawer.listItems.administration\")}\n            </ListSubheader>\n            {showCampaigns && (\n              <>\n                <ListItem\n                  button\n                  onClick={() => setOpenCampaignSubmenu((prev) => !prev)}\n                >\n                  <ListItemIcon>\n                    <VolumeUpOutlinedIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={i18n.t(\"mainDrawer.listItems.campaigns\")}\n                  />\n                  {openCampaignSubmenu ? (\n                    <ExpandLessIcon />\n                  ) : (\n                    <ExpandMoreIcon />\n                  )}\n                </ListItem>\n                <Collapse\n                  style={{ paddingLeft: 15 }}\n                  in={openCampaignSubmenu}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <List component=\"div\" disablePadding>\n                    <ListItem onClick={() => history.push(\"/campaigns\")} button>\n                      <ListItemIcon>\n                        <ListIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Listagem\" />\n                    </ListItem>\n                    <ListItem\n                      onClick={() => history.push(\"/contact-lists\")}\n                      button\n                    >\n                      <ListItemIcon>\n                        <PeopleIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Listas de Contatos\" />\n                    </ListItem>\n                    <ListItem\n                      onClick={() => history.push(\"/campaigns-config\")}\n                      button\n                    >\n                      <ListItemIcon>\n                        <SettingsOutlinedIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Configurações\" />\n                    </ListItem>\n                  </List>\n                </Collapse>\n              </>\n            )}\n            {user.super && (\n              <ListItemLink\n                to=\"/announcements\"\n                primary={i18n.t(\"mainDrawer.listItems.annoucements\")}\n                icon={<ErrorOutlineOutlinedIcon />}\n              />\n            )}\n            <ListItemLink\n              to=\"/connections\"\n              primary={i18n.t(\"mainDrawer.listItems.connections\")}\n              icon={\n                <Badge badgeContent={connectionWarning ? \"!\" : 0} color=\"error\">\n                  <ContactlessOutlinedIcon />\n                </Badge>\n              }\n            />\n            <ListItemLink\n              to=\"/queues\"\n              primary={i18n.t(\"mainDrawer.listItems.queues\")}\n              icon={<WrapTextOutlinedIcon />}\n            />\n            <ListItemLink\n              to=\"/users\"\n              primary={i18n.t(\"mainDrawer.listItems.users\")}\n              icon={<PeopleAltOutlinedIcon />}\n            />\n            <ListItemLink\n              to=\"/messages-api\"\n              primary={i18n.t(\"mainDrawer.listItems.messagesAPI\")}\n              icon={<CodeRoundedIcon />}\n            />\n              <ListItemLink\n                to=\"/financeiro\"\n                primary={i18n.t(\"mainDrawer.listItems.financeiro\")}\n                icon={<MonetizationOnOutlinedIcon />}\n              />\n            <ListItemLink\n              to=\"/settings\"\n              primary={i18n.t(\"mainDrawer.listItems.settings\")}\n              icon={<SettingsOutlinedIcon />}\n            />\n{/*             <ListItemLink\n              to=\"/subscription\"\n              primary=\"Assinatura\"\n              icon={<PaymentIcon />}\n              //className={classes.menuItem}\n            /> */}\n          </>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default MainListItems;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { CircularProgress, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\tbutton: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n}));\n\nconst ButtonWithSpinner = ({ loading, children, ...rest }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Button className={classes.button} disabled={loading} {...rest}>\n\t\t\t{children}\n\t\t\t{loading && (\n\t\t\t\t<CircularProgress size={24} className={classes.buttonProgress} />\n\t\t\t)}\n\t\t</Button>\n\t);\n};\n\nexport default ButtonWithSpinner;\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n\nconst elements = [\n\t\"a\",\n\t\"abbr\",\n\t\"address\",\n\t\"area\",\n\t\"article\",\n\t\"aside\",\n\t\"audio\",\n\t\"b\",\n\t\"base\",\n\t\"bdi\",\n\t\"bdo\",\n\t\"big\",\n\t\"blockquote\",\n\t\"body\",\n\t\"br\",\n\t\"button\",\n\t\"canvas\",\n\t\"caption\",\n\t\"cite\",\n\t\"code\",\n\t\"col\",\n\t\"colgroup\",\n\t\"data\",\n\t\"datalist\",\n\t\"dd\",\n\t\"del\",\n\t\"details\",\n\t\"dfn\",\n\t\"dialog\",\n\t\"div\",\n\t\"dl\",\n\t\"dt\",\n\t\"em\",\n\t\"embed\",\n\t\"fieldset\",\n\t\"figcaption\",\n\t\"figure\",\n\t\"footer\",\n\t\"form\",\n\t\"h1\",\n\t\"h2\",\n\t\"h3\",\n\t\"h4\",\n\t\"h5\",\n\t\"h6\",\n\t\"head\",\n\t\"header\",\n\t\"hgroup\",\n\t\"hr\",\n\t\"html\",\n\t\"i\",\n\t\"iframe\",\n\t\"img\",\n\t\"input\",\n\t\"ins\",\n\t\"kbd\",\n\t\"keygen\",\n\t\"label\",\n\t\"legend\",\n\t\"li\",\n\t\"link\",\n\t\"main\",\n\t\"map\",\n\t\"mark\",\n\t\"marquee\",\n\t\"menu\",\n\t\"menuitem\",\n\t\"meta\",\n\t\"meter\",\n\t\"nav\",\n\t\"noscript\",\n\t\"object\",\n\t\"ol\",\n\t\"optgroup\",\n\t\"option\",\n\t\"output\",\n\t\"p\",\n\t\"param\",\n\t\"picture\",\n\t\"pre\",\n\t\"progress\",\n\t\"q\",\n\t\"rp\",\n\t\"rt\",\n\t\"ruby\",\n\t\"s\",\n\t\"samp\",\n\t\"script\",\n\t\"section\",\n\t\"select\",\n\t\"small\",\n\t\"source\",\n\t\"span\",\n\t\"strong\",\n\t\"style\",\n\t\"sub\",\n\t\"summary\",\n\t\"sup\",\n\t\"table\",\n\t\"tbody\",\n\t\"td\",\n\t\"textarea\",\n\t\"tfoot\",\n\t\"th\",\n\t\"thead\",\n\t\"time\",\n\t\"title\",\n\t\"tr\",\n\t\"track\",\n\t\"u\",\n\t\"ul\",\n\t\"var\",\n\t\"video\",\n\t\"wbr\",\n\n\t// SVG\n\t\"circle\",\n\t\"clipPath\",\n\t\"defs\",\n\t\"ellipse\",\n\t\"foreignObject\",\n\t\"g\",\n\t\"image\",\n\t\"line\",\n\t\"linearGradient\",\n\t\"marker\",\n\t\"mask\",\n\t\"path\",\n\t\"pattern\",\n\t\"polygon\",\n\t\"polyline\",\n\t\"radialGradient\",\n\t\"rect\",\n\t\"stop\",\n\t\"svg\",\n\t\"text\",\n\t\"tspan\",\n];\n\nconst allowedElements = [\"a\", \"b\", \"strong\", \"em\", \"u\", \"code\", \"del\"];\n\nconst CustomLink = ({ children, ...props }) => (\n\t<a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t{children}\n\t</a>\n);\n\nconst MarkdownWrapper = ({ children }) => {\n\tconst boldRegex = /\\*(.*?)\\*/g;\n\tconst tildaRegex = /~(.*?)~/g;\n\n\tif (children && boldRegex.test(children)) {\n\t\tchildren = children.replace(boldRegex, \"**$1**\");\n\t}\n\tif (children && tildaRegex.test(children)) {\n\t\tchildren = children.replace(tildaRegex, \"~~$1~~\");\n\t}\n\n\tconst options = React.useMemo(() => {\n\t\tconst markdownOptions = {\n\t\t\tdisableParsingRawHTML: true,\n\t\t\tforceInline: true,\n\t\t\toverrides: {\n\t\t\t\ta: { component: CustomLink },\n\t\t\t},\n\t\t};\n\n\t\telements.forEach(element => {\n\t\t\tif (!allowedElements.includes(element)) {\n\t\t\t\tmarkdownOptions.overrides[element] = el => el.children || null;\n\t\t\t}\n\t\t});\n\n\t\treturn markdownOptions;\n\t}, []);\n\n\tif (!children) return null;\n\n\treturn <Markdown options={options}>{children}</Markdown>;\n};\n\nexport default MarkdownWrapper;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { parseISO, format, isSameDay } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    position: \"relative\",\n  },\n\n  pendingTicket: {\n    cursor: \"unset\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n  },\n\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\",\n  },\n\n  contactLastMessage: {\n    paddingRight: 20,\n  },\n\n  newMessagesCount: {\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n  },\n\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500],\n  },\n\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\",\n  },\n\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n  },\n}));\n\nconst TicketListItem = ({ ticket }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const { ticketId } = useParams();\n  const isMounted = useRef(true);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const handleAcepptTicket = async (ticket) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${ticket.id}`, {\n        status: \"open\",\n        userId: user?.id,\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  const handleSelectTicket = (ticket) => {\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  return (\n    <React.Fragment key={ticket.id}>\n      <ListItem\n        dense\n        button\n        onClick={(e) => {\n          if (ticket.status === \"pending\") return;\n          handleSelectTicket(ticket);\n        }}\n        selected={ticketId && +ticketId === ticket.id}\n        className={clsx(classes.ticket, {\n          [classes.pendingTicket]: ticket.status === \"pending\",\n        })}\n      >\n        <Tooltip\n          arrow\n          placement=\"right\"\n          title={ticket.queue?.name || \"Sem fila\"}\n        >\n          <span\n            style={{ backgroundColor: ticket.queue?.color || \"#7C7C7C\" }}\n            className={classes.ticketQueueColor}\n          ></span>\n        </Tooltip>\n        <ListItemAvatar>\n          <Avatar src={ticket?.contact?.profilePicUrl} />\n        </ListItemAvatar>\n        <ListItemText\n          disableTypography\n          primary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {ticket.contact.name}\n              </Typography>\n              {ticket.status === \"closed\" && (\n                <Badge\n                  className={classes.closedBadge}\n                  badgeContent={\"closed\"}\n                  color=\"primary\"\n                />\n              )}\n              {ticket.lastMessage && (\n                <Typography\n                  className={classes.lastMessageTime}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                    <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                  ) : (\n                    <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                  )}\n                </Typography>\n              )}\n            </span>\n          }\n          secondary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                className={classes.contactLastMessage}\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {ticket.lastMessage ? (\n                  <MarkdownWrapper>{ticket.lastMessage}</MarkdownWrapper>\n                ) : (\n                  <br />\n                )}\n              </Typography>\n\n              <Badge\n                className={classes.newMessagesCount}\n                badgeContent={ticket.unreadMessages}\n                classes={{\n                  badge: classes.badgeStyle,\n                }}\n              />\n            </span>\n          }\n        />\n        {ticket.status === \"pending\" && (\n          <ButtonWithSpinner\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.acceptButton}\n            size=\"small\"\n            loading={loading}\n            onClick={(e) => handleAcepptTicket(ticket)}\n          >\n            {i18n.t(\"ticketsList.buttons.accept\")}\n          </ButtonWithSpinner>\n        )}\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default TicketListItem;\n","import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\n\nconst useTickets = ({\n  searchParam,\n  tags,\n  users,\n  pageNumber,\n  status,\n  date,\n  updatedAt,\n  showAll,\n  queueIds,\n  withUnreadMessages,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [tickets, setTickets] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTickets = async () => {\n        try {\n          const { data } = await api.get(\"/tickets\", {\n            params: {\n              searchParam,\n              pageNumber,\n              tags,\n              users,\n              status,\n              date,\n              updatedAt,\n              showAll,\n              queueIds,\n              withUnreadMessages,\n            },\n          });\n          setTickets(data.tickets);\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchTickets();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [\n    searchParam,\n    tags,\n    users,\n    pageNumber,\n    status,\n    date,\n    updatedAt,\n    showAll,\n    queueIds,\n    withUnreadMessages,\n  ]);\n\n  return { tickets, loading, hasMore };\n};\n\nexport default useTickets;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport useSound from \"use-sound\";\n\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport TicketListItem from \"../TicketListItem\";\nimport { i18n } from \"../../translate/i18n\";\nimport useTickets from \"../../hooks/useTickets\";\nimport alertSound from \"../../assets/sound.mp3\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n    ...theme.scrollbarStyles,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n  icons: {\n    color: \"#fff\",\n  },\n  customBadge: {\n    backgroundColor: \"#f44336\",\n    color: \"#fff\",\n  },\n}));\n\nconst NotificationsPopOver = ({ volume }) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n  const ticketIdUrl = +history.location.pathname.split(\"/\")[2];\n  const ticketIdRef = useRef(ticketIdUrl);\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const { profile, queues } = user;\n\n  const [, setDesktopNotifications] = useState([]);\n\n  const { tickets } = useTickets({ withUnreadMessages: \"true\" });\n  const [play] = useSound(alertSound, { volume, });\n  const soundAlertRef = useRef();\n\n  const historyRef = useRef(history);\n\n  useEffect(() => {\n    soundAlertRef.current = play;\n\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser doesn't support notifications\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, [play]);\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      setNotifications(filteredTickets);\n    } else {\n      setNotifications(tickets);\n    }\n  }, [tickets, queues, profile]);\n\n  useEffect(() => {\n    ticketIdRef.current = ticketIdUrl;\n  }, [ticketIdUrl]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const queueIds = queues.map((q) => q.id);\n\n    socket.on(\"connect\", () => socket.emit(\"joinNotification\"));\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"updateUnread\" || data.action === \"delete\") {\n        setNotifications((prevState) => {\n          const ticketIndex = prevState.findIndex(\n            (t) => t.id === data.ticketId\n          );\n          if (ticketIndex !== -1) {\n            prevState.splice(ticketIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n\n        setDesktopNotifications((prevState) => {\n          const notfiticationIndex = prevState.findIndex(\n            (n) => n.tag === String(data.ticketId)\n          );\n          if (notfiticationIndex !== -1) {\n            prevState[notfiticationIndex].close();\n            prevState.splice(notfiticationIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      if (\n        data.action === \"create\" &&\n        !data.message.read &&\n        (data.ticket.userId === user?.id || !data.ticket.userId)\n      ) {\n        if (\n          profile === \"user\" &&\n          (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n            data.ticket.queue === null)\n        ) {\n          return;\n        }\n\n        setNotifications((prevState) => {\n          const ticketIndex = prevState.findIndex(\n            (t) => t.id === data.ticket.id\n          );\n          if (ticketIndex !== -1) {\n            prevState[ticketIndex] = data.ticket;\n            return [...prevState];\n          }\n          return [data.ticket, ...prevState];\n        });\n\n        const shouldNotNotificate =\n          (data.message.ticketId === ticketIdRef.current &&\n            document.visibilityState === \"visible\") ||\n          (data.ticket.userId && data.ticket.userId !== user?.id) ||\n          data.ticket.isGroup || user.queues.map(q => q.id).indexOf(data.ticket.queueId) === -1 ||\n          data.ticket.isBot;\n\n        if (shouldNotNotificate) return;\n\n        handleNotifications(data);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [user, profile, queues]);\n\n  const handleNotifications = (data) => {\n    const { message, contact, ticket } = data;\n\n    const options = {\n      body: `${message.body} - ${format(new Date(), \"HH:mm\")}`,\n      icon: contact.profilePicUrl,\n      tag: ticket.id,\n      renotify: true,\n    };\n\n    const notification = new Notification(\n      `${i18n.t(\"tickets.notification.message\")} ${contact.name}`,\n      options\n    );\n\n    notification.onclick = (e) => {\n      e.preventDefault();\n      window.focus();\n      historyRef.current.push(`/tickets/${ticket.uuid}`);\n    };\n\n    setDesktopNotifications((prevState) => {\n      const notfiticationIndex = prevState.findIndex(\n        (n) => n.tag === notification.tag\n      );\n      if (notfiticationIndex !== -1) {\n        prevState[notfiticationIndex] = notification;\n        return [...prevState];\n      }\n      return [notification, ...prevState];\n    });\n\n    soundAlertRef.current();\n  };\n\n  const handleClick = () => {\n    setIsOpen((prevState) => !prevState);\n  };\n\n  const handleClickAway = () => {\n    setIsOpen(false);\n  };\n\n  const NotificationTicket = ({ children }) => {\n    return <div onClick={handleClickAway}>{children}</div>;\n  };\n\n  return (\n    <>\n      <IconButton\n        className={classes.icons}\n        onClick={handleClick}\n        ref={anchorEl}\n        aria-label=\"Open Notifications\"\n        variant=\"contained\"\n      >\n        <Badge\n          overlap=\"rectangular\"\n          badgeContent={notifications.length}\n          classes={{ badge: classes.customBadge }}\n        >\n          <ChatIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        disableScrollLock\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <List dense className={classes.tabContainer}>\n          {notifications.length === 0 ? (\n            <ListItem>\n              <ListItemText>{i18n.t(\"notifications.noTickets\")}</ListItemText>\n            </ListItem>\n          ) : (\n            notifications.map((ticket) => (\n              <NotificationTicket key={ticket.id}>\n                <TicketListItem ticket={ticket} />\n              </NotificationTicket>\n            ))\n          )}\n        </List>\n      </Popover>\n    </>\n  );\n};\n\nexport default NotificationsPopOver;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchips: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tchip: {\n\t\tmargin: 2,\n\t},\n}));\n\nconst QueueSelect = ({ selectedQueueIds, onChange, multiple = true, title = i18n.t(\"queueSelect.inputLabel\") }) => {\n\tconst classes = useStyles();\n\tconst [queues, setQueues] = useState([]);\n\n\tuseEffect(() => {\n\n\t\tfetchQueues();\n\n\t}, []);\n\n\tconst fetchQueues = async () => {\n\t\ttry {\n\t\t\tconst { data } = await api.get(\"/queue\");\n\t\t\tsetQueues(data);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t}\n\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div >\n\t\t\t<FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n\t\t\t\t<InputLabel shrink={selectedQueueIds ? true : false} >{title}</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabel={title}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tlabelWidth={60}\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\n\t\t\t\t\trenderValue={selected => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t{selected?.length > 0 && multiple ? (\n\t\t\t\t\t\t\t\t\tselected.map(id => {\n\t\t\t\t\t\t\t\t\t\tconst queue = queues.find(q => q.id === id);\n\t\t\t\t\t\t\t\t\t\treturn queue ? (\n\t\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queue.color }}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={queue.name}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={selected}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queues.find(q => q.id === selected)?.color }}\n\t\t\t\t\t\t\t\t\t\t\tlabel={queues.find(q => q.id === selected)?.name}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{!multiple && <MenuItem value={null}>Nenhum</MenuItem>}\n\t\t\t\t\t{queues.map(queue => (\n\t\t\t\t\t\t<MenuItem key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t{queue.name}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default QueueSelect;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelect from \"../QueueSelect\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst UserSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tpassword: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst UserModal = ({ open, onClose, userId }) => {\n\tconst classes = useStyles();\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tprofile: \"user\",\n\t};\n\n\tconst { user: loggedInUser } = useContext(AuthContext);\n\n\tconst [user, setUser] = useState(initialState);\n\tconst [selectedQueueIds, setSelectedQueueIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchUser = async () => {\n\t\t\tif (!userId) return;\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(`/users/${userId}`);\n\t\t\t\tsetUser(prevState => {\n\t\t\t\t\treturn { ...prevState, ...data };\n\t\t\t\t});\n\t\t\t\tconst userQueueIds = data.queues?.map(queue => queue.id);\n\t\t\t\tsetSelectedQueueIds(userQueueIds);\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t};\n\n\t\tfetchUser();\n\t}, [userId, open]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetUser(initialState);\n\t};\n\n\tconst handleSaveUser = async values => {\n\t\tconst userData = { ...values, queueIds: selectedQueueIds };\n\t\ttry {\n\t\t\tif (userId) {\n\t\t\t\tawait api.put(`/users/${userId}`, userData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/users\", userData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"userModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{userId\n\t\t\t\t\t\t? `${i18n.t(\"userModal.title.edit\")}`\n\t\t\t\t\t\t: `${i18n.t(\"userModal.title.add\")}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={user}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveUser(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.name\")}\n\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.password\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\terror={touched.password && Boolean(errors.password)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.formControl}\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Can\n\t\t\t\t\t\t\t\t\t\t\trole={loggedInUser.profile}\n\t\t\t\t\t\t\t\t\t\t\tperform=\"user-modal:editProfile\"\n\t\t\t\t\t\t\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"profile-selection-input-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{i18n.t(\"userModal.form.profile\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={Select}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.profile\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"profile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"profile-selection-label\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"profile-selection\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"admin\">Admin</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"user\">User</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Can\n\t\t\t\t\t\t\t\t\trole={loggedInUser.profile}\n\t\t\t\t\t\t\t\t\tperform=\"user-modal:editQueues\"\n\t\t\t\t\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t\t\t\t\t<QueueSelect\n\t\t\t\t\t\t\t\t\t\t\tselectedQueueIds={selectedQueueIds}\n\t\t\t\t\t\t\t\t\t\t\tonChange={values => setSelectedQueueIds(values)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"userModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{userId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"userModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"userModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default UserModal;\n","import React from \"react\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tbackdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: \"#fff\",\n\t},\n}));\n\nconst BackdropLoading = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Backdrop className={classes.backdrop} open={true}>\n\t\t\t<CircularProgress color=\"inherit\" />\n\t\t</Backdrop>\n\t);\n};\n\nexport default BackdropLoading;\n","import moment from \"moment\";\n\nexport function useDate() {\n  function dateToClient(strDate) {\n    if (moment(strDate).isValid()) {\n      return moment(strDate).format(\"DD/MM/YYYY\");\n    }\n    return strDate;\n  }\n\n  function datetimeToClient(strDate) {\n    if (moment(strDate).isValid()) {\n      return moment(strDate).format(\"DD/MM/YYYY HH:mm\");\n    }\n    return strDate;\n  }\n\n  function dateToDatabase(strDate) {\n    if (moment(strDate, \"DD/MM/YYYY\").isValid()) {\n      return moment(strDate).format(\"YYYY-MM-DD HH:mm:ss\");\n    }\n    return strDate;\n  }\n\n  return {\n    dateToClient,\n    datetimeToClient,\n    dateToDatabase,\n  };\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport toastError from \"../../errors/toastError\";\nimport Popover from \"@material-ui/core/Popover\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport {\n  Avatar,\n  Badge,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Dialog,\n  Paper,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { isArray } from \"lodash\";\nimport moment from \"moment\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    maxHeight: 300,\n    maxWidth: 500,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nfunction AnnouncementDialog({ announcement, open, handleClose }) {\n  const getMediaPath = (filename) => {\n    return `${process.env.REACT_APP_BACKEND_URL}public/${filename}`;\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{announcement.title}</DialogTitle>\n      <DialogContent>\n        {announcement.mediaPath && (\n          <div\n            style={{\n              border: \"1px solid #f1f1f1\",\n              margin: \"0 auto 20px\",\n              textAlign: \"center\",\n              width: \"90%\",\n              height: 300,\n              backgroundImage: `url(${getMediaPath(announcement.mediaPath)})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"contain\",\n              backgroundPosition: \"center\",\n            }}\n          ></div>\n        )}\n        <DialogContentText id=\"alert-dialog-description\">\n          {announcement.text}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()} color=\"primary\" autoFocus>\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_ANNOUNCEMENTS\") {\n    const announcements = action.payload;\n    const newAnnouncements = [];\n\n    if (isArray(announcements)) {\n      announcements.forEach((announcement) => {\n        const announcementIndex = state.findIndex(\n          (u) => u.id === announcement.id\n        );\n        if (announcementIndex !== -1) {\n          state[announcementIndex] = announcement;\n        } else {\n          newAnnouncements.push(announcement);\n        }\n      });\n    }\n\n    return [...state, ...newAnnouncements];\n  }\n\n  if (action.type === \"UPDATE_ANNOUNCEMENTS\") {\n    const announcement = action.payload;\n    const announcementIndex = state.findIndex((u) => u.id === announcement.id);\n\n    if (announcementIndex !== -1) {\n      state[announcementIndex] = announcement;\n      return [...state];\n    } else {\n      return [announcement, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_ANNOUNCEMENT\") {\n    const announcementId = action.payload;\n\n    const announcementIndex = state.findIndex((u) => u.id === announcementId);\n    if (announcementIndex !== -1) {\n      state.splice(announcementIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nexport default function AnnouncementsPopover() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam] = useState(\"\");\n  const [announcements, dispatch] = useReducer(reducer, []);\n  const [invisible, setInvisible] = useState(false);\n  const [announcement, setAnnouncement] = useState({});\n  const [showAnnouncementDialog, setShowAnnouncementDialog] = useState(false);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchAnnouncements();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-announcement`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_ANNOUNCEMENTS\", payload: data.record });\n        setInvisible(false);\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_ANNOUNCEMENT\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchAnnouncements = async () => {\n    try {\n      const { data } = await api.get(\"/announcements/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_ANNOUNCEMENTS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setInvisible(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const borderPriority = (priority) => {\n    if (priority === 1) {\n      return \"4px solid #b81111\";\n    }\n    if (priority === 2) {\n      return \"4px solid orange\";\n    }\n    if (priority === 3) {\n      return \"4px solid grey\";\n    }\n  };\n\n  const getMediaPath = (filename) => {\n    return `${process.env.REACT_APP_BACKEND_URL}public/${filename}`;\n  };\n\n  const handleShowAnnouncementDialog = (record) => {\n    setAnnouncement(record);\n    setShowAnnouncementDialog(true);\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <AnnouncementDialog\n        announcement={announcement}\n        open={showAnnouncementDialog}\n        handleClose={() => setShowAnnouncementDialog(false)}\n      />\n      <IconButton\n        variant=\"contained\"\n        aria-describedby={id}\n        onClick={handleClick}\n        style={{ color: \"white\" }}\n      >\n        <Badge\n          color=\"secondary\"\n          variant=\"dot\"\n          invisible={invisible || announcements.length < 1}\n        >\n          <AnnouncementIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          onScroll={handleScroll}\n          className={classes.mainPaper}\n        >\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n            style={{ minWidth: 300 }}\n          >\n            {isArray(announcements) &&\n              announcements.map((item, key) => (\n                <ListItem\n                  key={key}\n                  style={{\n                    background: key % 2 === 0 ? \"#ededed\" : \"white\",\n                    border: \"1px solid #eee\",\n                    borderLeft: borderPriority(item.priority),\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => handleShowAnnouncementDialog(item)}\n                >\n                  {item.mediaPath && (\n                    <ListItemAvatar>\n                      <Avatar\n                        alt={item.mediaName}\n                        src={getMediaPath(item.mediaPath)}\n                      />\n                    </ListItemAvatar>\n                  )}\n                  <ListItemText\n                    primary={item.title}\n                    secondary={\n                      <>\n                        <Typography component=\"span\" style={{ fontSize: 12 }}>\n                          {moment(item.createdAt).format(\"DD/MM/YYYY\")}\n                        </Typography>\n                        <span style={{ marginTop: 5, display: \"block\" }}></span>\n                        <Typography component=\"span\" variant=\"body2\">\n                          {item.text}\n                        </Typography>\n                      </>\n                    }\n                  />\n                </ListItem>\n              ))}\n            {isArray(announcements) && announcements.length === 0 && (\n              <ListItemText primary=\"Nenhum registro\" />\n            )}\n          </List>\n        </Paper>\n      </Popover>\n    </div>\n  );\n}\n","import React, {\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport toastError from \"../../errors/toastError\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport {\n  Badge,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { useDate } from \"../../hooks/useDate\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport notifySound from \"../../assets/chat_notify.mp3\";\nimport useSound from \"use-sound\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    maxHeight: 300,\n    maxWidth: 500,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CHATS\") {\n    const chats = action.payload;\n    const newChats = [];\n\n    if (isArray(chats)) {\n      chats.forEach((chat) => {\n        const chatIndex = state.findIndex((u) => u.id === chat.id);\n        if (chatIndex !== -1) {\n          state[chatIndex] = chat;\n        } else {\n          newChats.push(chat);\n        }\n      });\n    }\n\n    return [...state, ...newChats];\n  }\n\n  if (action.type === \"UPDATE_CHATS\") {\n    const chat = action.payload;\n    const chatIndex = state.findIndex((u) => u.id === chat.id);\n\n    if (chatIndex !== -1) {\n      state[chatIndex] = chat;\n      return [...state];\n    } else {\n      return [chat, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CHAT\") {\n    const chatId = action.payload;\n\n    const chatIndex = state.findIndex((u) => u.id === chatId);\n    if (chatIndex !== -1) {\n      state.splice(chatIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n\n  if (action.type === \"CHANGE_CHAT\") {\n    const changedChats = state.map((chat) => {\n      if (chat.id === action.payload.chat.id) {\n        return action.payload.chat;\n      }\n      return chat;\n    });\n    return changedChats;\n  }\n};\n\nexport default function ChatPopover() {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam] = useState(\"\");\n  const [chats, dispatch] = useReducer(reducer, []);\n  const [invisible, setInvisible] = useState(true);\n  const { datetimeToClient } = useDate();\n  const [play] = useSound(notifySound);\n  const soundAlertRef = useRef();\n\n  useEffect(() => {\n    soundAlertRef.current = play;\n\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser doesn't support notifications\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, [play]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchChats();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"new-message\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n        if (data.newMessage.senderId !== user.id) {\n          console.log(data);\n          soundAlertRef.current();\n        }\n      }\n      if (data.action === \"update\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    let unreadsCount = 0;\n    if (chats.length > 0) {\n      for (let chat of chats) {\n        for (let chatUser of chat.users) {\n          if (chatUser.userId === user.id) {\n            unreadsCount += chatUser.unreads;\n          }\n        }\n      }\n    }\n    if (unreadsCount > 0) {\n      setInvisible(false);\n    } else {\n      setInvisible(true);\n    }\n  }, [chats, user.id]);\n\n  const fetchChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_CHATS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setInvisible(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const goToMessages = (chat) => {\n    window.location.href = `/chats/${chat.uuid}`;\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <IconButton\n        aria-describedby={id}\n        variant=\"contained\"\n        color={invisible ? \"default\" : \"inherit\"}\n        onClick={handleClick}\n        style={{ color: \"white\" }}\n      >\n        <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\n          <ForumIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          onScroll={handleScroll}\n          className={classes.mainPaper}\n        >\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n            style={{ minWidth: 300 }}\n          >\n            {isArray(chats) &&\n              chats.map((item, key) => (\n                <ListItem\n                  key={key}\n                  style={{\n                    background: key % 2 === 0 ? \"#ededed\" : \"white\",\n                    border: \"1px solid #eee\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => goToMessages(item)}\n                  button\n                >\n                  <ListItemText\n                    primary={item.lastMessage}\n                    secondary={\n                      <>\n                        <Typography component=\"span\" style={{ fontSize: 12 }}>\n                          {datetimeToClient(item.updatedAt)}\n                        </Typography>\n                        <span style={{ marginTop: 5, display: \"block\" }}></span>\n                      </>\n                    }\n                  />\n                </ListItem>\n              ))}\n            {isArray(chats) && chats.length === 0 && (\n              <ListItemText primary=\"Nenhum registro\" />\n            )}\n          </List>\n        </Paper>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport {\n  makeStyles,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  MenuItem,\n  IconButton,\n  Menu,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nimport MainListItems from \"./MainListItems\";\nimport NotificationsPopOver from \"../components/NotificationsPopOver\";\nimport UserModal from \"../components/UserModal\";\nimport { AuthContext } from \"../context/Auth/AuthContext\";\nimport BackdropLoading from \"../components/BackdropLoading\";\nimport { i18n } from \"../translate/i18n\";\nimport toastError from \"../errors/toastError\";\nimport { useDate } from \"../hooks/useDate\";\nimport AnnouncementsPopover from \"../components/AnnouncementsPopover\";\n\nimport logo from \"../assets/logo1.png\";\nimport { socketConnection } from \"../services/socket\";\nimport ChatPopover from \"../pages/Chat/ChatPopover\";\n\n// DARK THEMA\nimport ColorModeContext from \"../layout/themeContext\";\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    background: 'red',\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"100vh\",\n    },\n    backgroundColor: theme.palette.fancyBackground,\n    '& .MuiButton-outlinedPrimary': {\n      color: theme.mode === 'light' ? '#09B990' : '#FFF',\n      border: theme.mode === 'light' ? '1px solid rgba(0 124 102)' : '1px solid rgba(255, 255, 255, 0.5)',\n    },\n    '& .MuiTab-textColorPrimary.Mui-selected': {\n      color: theme.mode === 'light' ? '#09B990' : '#FFF',\n    }\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n    color: \"white\",\n    background: theme.palette.barraSuperior,\n\n  },\n\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    minHeight: \"48px\",\n    background: theme.palette.barraSuperior,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"48px\"\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 14,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: {\n    minHeight: \"56px\",\n  },\n  content: {\n    flex: 1,\n    overflow: \"auto\",\n    ...theme.scrollbarStyles,\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  containerWithScroll: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst LoggedInLayout = ({ children }) => {\n  const classes = useStyles();\n  const [userModalOpen, setUserModalOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const { handleLogout, loading } = useContext(AuthContext);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [drawerVariant, setDrawerVariant] = useState(\"permanent\");\n  const { user } = useContext(AuthContext);\n  const { dateToClient } = useDate();\n\n  const theme = useTheme();\n  const { colorMode } = useContext(ColorModeContext);\n  const greaterThenSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n\n\n\n  useEffect(() => {\n\n    if (document.body.offsetWidth > 600) {\n      setDrawerOpen(true);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (document.body.offsetWidth < 600) {\n      setDrawerVariant(\"temporary\");\n    } else {\n      setDrawerVariant(\"permanent\");\n    }\n  }, [drawerOpen]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const userId = localStorage.getItem(\"userId\");\n\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-auth`, (data) => {\n      if (data.user.id === +userId) {\n        toastError(\"Sua conta foi acessada em outro computador.\");\n        setTimeout(() => {\n          localStorage.clear();\n          window.location.reload();\n        }, 1000);\n      }\n    });\n\n    socket.emit(\"userStatus\");\n    const interval = setInterval(() => {\n      socket.emit(\"userStatus\");\n    }, 1000 * 60 * 5);\n\n    return () => {\n      socket.disconnect();\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n    setMenuOpen(false);\n  };\n\n  const handleOpenUserModal = () => {\n    setUserModalOpen(true);\n    handleCloseMenu();\n  };\n\n  const handleClickLogout = () => {\n    handleCloseMenu();\n    handleLogout();\n  };\n\n  const toggleColorMode = () => {\n    colorMode.toggleColorMode();\n  }\n\n  const drawerClose = () => {\n    if (document.body.offsetWidth < 600) {\n      setDrawerOpen(false);\n    }\n  };\n\n  if (loading) {\n    return <BackdropLoading />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        variant={drawerVariant}\n        className={drawerOpen ? classes.drawerPaper : classes.drawerPaperClose}\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !drawerOpen && classes.drawerPaperClose\n          ),\n        }}\n        open={drawerOpen}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src={logo} style={{ margin: \"0 auto\", height: \"48px\", width: \"50%\" }} alt=\"logo\" />\n          <IconButton onClick={() => setDrawerOpen(!drawerOpen)} style={{ color: \"white\" }}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.containerWithScroll}>\n          <MainListItems drawerClose={drawerClose} />\n        </List>\n        <Divider />\n      </Drawer>\n      <UserModal\n        open={userModalOpen}\n        onClose={() => setUserModalOpen(false)}\n        userId={user?.id}\n      />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, drawerOpen && classes.appBarShift)}\n        color=\"primary\"\n      >\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            variant=\"contained\"\n            aria-label=\"open drawer\"\n            onClick={() => setDrawerOpen(!drawerOpen)}\n            className={clsx(\n              classes.menuButton,\n              drawerOpen && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          // style={console.log('dueDate', user?.company?.dueDate)}\n          >\n            {greaterThenSm && user?.profile === \"admin\" && user?.company?.dueDate ? (\n              <>\n                Olá <b>{user.name}</b>, seja bem-vindo a <b>{user?.company?.name}</b>! (Ativo até {dateToClient(user?.company?.dueDate)})\n              </>\n            ) : (\n              <>\n                Olá <b>{user.name}</b>, seja bem-vindo a <b>{user?.company?.name}</b>!\n              </>\n            )}\n          </Typography>\n\n          <IconButton edge=\"start\" onClick={toggleColorMode}>\n            {theme.mode === 'dark' ? <Brightness7Icon style={{ color: \"white\" }} /> : <Brightness4Icon style={{ color: \"white\" }} />}\n          </IconButton>\n\n          {user.id && <NotificationsPopOver />}\n\n          <AnnouncementsPopover />\n\n          <ChatPopover />\n\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              variant=\"contained\"\n              style={{ color: \"white\" }}\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={menuOpen}\n              onClose={handleCloseMenu}\n            >\n              <MenuItem onClick={handleOpenUserModal}>\n                {i18n.t(\"mainDrawer.appBar.user.profile\")}\n              </MenuItem>\n              <MenuItem onClick={handleClickLogout}>\n                {i18n.t(\"mainDrawer.appBar.user.logout\")}\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <main id=\"mainLayout\" className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        {children ? children : null}\n      </main>\n    </div>\n  );\n};\n\nexport default LoggedInLayout;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Title = props => {\n\treturn (\n\t\t<Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n};\n\nexport default Title;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n\tBarChart,\n\tCartesianGrid,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tLabel,\n\tResponsiveContainer,\n} from \"recharts\";\nimport { startOfHour, parseISO, format } from \"date-fns\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport Title from \"./Title\";\nimport useTickets from \"../../hooks/useTickets\";\n\nconst Chart = () => {\n\tconst theme = useTheme();\n\n\tconst date = useRef(new Date().toISOString());\n\tconst { tickets } = useTickets({ date: date.current });\n\n\tconst [chartData, setChartData] = useState([\n\t\t{ time: \"01:00\", amount: 0 },\n\t\t{ time: \"02:00\", amount: 0 },\n\t\t{ time: \"03:00\", amount: 0 },\n\t\t{ time: \"04:00\", amount: 0 },\n\t\t{ time: \"05:00\", amount: 0 },\n\t\t{ time: \"06:00\", amount: 0 },\n\t\t{ time: \"07:00\", amount: 0 },\n\t\t{ time: \"08:00\", amount: 0 },\n\t\t{ time: \"09:00\", amount: 0 },\n\t\t{ time: \"10:00\", amount: 0 },\n\t\t{ time: \"11:00\", amount: 0 },\n\t\t{ time: \"12:00\", amount: 0 },\n\t\t{ time: \"13:00\", amount: 0 },\n\t\t{ time: \"14:00\", amount: 0 },\n\t\t{ time: \"15:00\", amount: 0 },\n\t\t{ time: \"16:00\", amount: 0 },\n\t\t{ time: \"17:00\", amount: 0 },\n\t\t{ time: \"18:00\", amount: 0 },\n\t\t{ time: \"19:00\", amount: 0 },\n\t\t{ time: \"20:00\", amount: 0 },\n\t\t{ time: \"21:00\", amount: 0 },\n\t\t{ time: \"22:00\", amount: 0 },\n\t\t{ time: \"23:00\", amount: 0 },\n\t\t{ time: \"00:00\", amount: 0 },\n\t]);\n\n\tuseEffect(() => {\n\t\tsetChartData(prevState => {\n\t\t\tlet aux = [...prevState];\n\n\t\t\taux.forEach(a => {\n\t\t\t\ttickets.forEach(ticket => {\n\t\t\t\t\tformat(startOfHour(parseISO(ticket.createdAt)), \"HH:mm\") === a.time &&\n\t\t\t\t\t\ta.amount++;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn aux;\n\t\t});\n\t}, [tickets]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Title>{`${i18n.t(\"dashboard.charts.perDay.title\")}${\n\t\t\t\ttickets.length\n\t\t\t}`}</Title>\n\t\t\t<ResponsiveContainer>\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tbarSize={40}\n\t\t\t\t\twidth={730}\n\t\t\t\t\theight={250}\n\t\t\t\t\tmargin={{\n\t\t\t\t\t\ttop: 16,\n\t\t\t\t\t\tright: 16,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tleft: 24,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t<XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tstroke={theme.palette.text.secondary}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tangle={270}\n\t\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\t\tstyle={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTickets\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</YAxis>\n\t\t\t\t\t<Bar dataKey=\"amount\" fill={theme.palette.primary.main} />\n\t\t\t\t</BarChart>\n\t\t\t</ResponsiveContainer>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport { Avatar, Card, CardHeader, Typography } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n\tcardAvatar: {\n\t\tfontSize: '55px',\n\t\tcolor: grey[500],\n\t\tbackgroundColor: '#ffffff',\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7)\n\t},\n\tcardTitle: {\n\t\tfontSize: '18px',\n\t\tcolor: theme.palette.text.primary\n\t},\n\tcardSubtitle: {\n\t\tcolor: grey[600],\n\t\tfontSize: '14px'\n\t}\n}));\n\nexport default function CardCounter(props) {\n    const { icon, title, value, loading } = props\n\tconst classes = useStyles();\n    return ( !loading ? \n        <Card>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.cardAvatar}>\n                        {icon}\n                    </Avatar>\n                }\n                title={\n                    <Typography variant=\"h6\" component=\"h2\" className={classes.cardTitle}>\n                        { title }\n                    </Typography>\n                }\n                subheader={\n                    <Typography variant=\"subtitle1\" component=\"p\" className={classes.cardSubtitle}>\n                        { value }\n                    </Typography>\n                }\n            />\n        </Card>\n        : <Skeleton variant=\"rect\" height={80} />\n    )\n    \n}","import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, red } from '@material-ui/core/colors';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport moment from 'moment';\n\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles(theme => ({\n\ton: {\n\t\tcolor: green[600],\n\t\tfontSize: '20px'\n\t},\n\toff: {\n\t\tcolor: red[600],\n\t\tfontSize: '20px'\n\t},\n    pointer: {\n        cursor: \"pointer\"\n    }\n}));\n\nexport function RatingBox ({ rating }) {\n    const ratingTrunc = rating === null ? 0 : Math.trunc(rating);\n    return <Rating\n        defaultValue={ratingTrunc}\n        max={3}\n        readOnly\n    />\n}\n\nexport default function TableAttendantsStatus(props) {\n    const { loading, attendants } = props\n\tconst classes = useStyles();\n\n    function renderList () {\n        return attendants.map((a, k) => (\n            <TableRow key={k}>\n                <TableCell>{a.name}</TableCell>\n                <TableCell align=\"center\" title=\"1 - Insatisfeito, 2 - Satisfeito, 3 - Muito Satisfeito\" className={classes.pointer}>\n                    <RatingBox rating={a.rating} />\n                </TableCell>\n                <TableCell align=\"center\">{formatTime(a.avgSupportTime, 2)}</TableCell>\n                <TableCell align=\"center\">\n                    { a.online ?\n                        <CheckCircleIcon className={classes.on} />\n                        : <ErrorIcon className={classes.off} />\n                    }\n                </TableCell>\n            </TableRow>\n        ))\n    }\n\n\tfunction formatTime(minutes){\n\t\treturn moment().startOf('day').add(minutes, 'minutes').format('HH[h] mm[m]');\n\t}\n\n    return ( !loading ?\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell align=\"center\">Avaliações</TableCell>\n                        <TableCell align=\"center\">T.M. de Atendimento</TableCell>\n                        <TableCell align=\"center\">Status (Atual)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    { renderList() }\n                    {/* <TableRow>\n                        <TableCell>Nome 4</TableCell>\n                        <TableCell align=\"center\">10</TableCell>\n                        <TableCell align=\"center\">10 minutos</TableCell>\n                        <TableCell align=\"center\">\n                            <CheckCircleIcon className={classes.off} />\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>Nome 5</TableCell>\n                        <TableCell align=\"center\">10</TableCell>\n                        <TableCell align=\"center\">10 minutos</TableCell>\n                        <TableCell align=\"center\">\n                            <CheckCircleIcon className={classes.on} />\n                        </TableCell>\n                    </TableRow> */}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        : <Skeleton variant=\"rect\" height={150} />\n    )\n}","import api from \"../../services/api\";\n\nconst useDashboard = () => {\n\n    const find = async (params) => {\n        const { data } = await api.request({\n            url: `/dashboard`,\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        find\n    }\n}\n\nexport default useDashboard;","import api from \"../../services/api\";\n\nconst useCompanies = () => {\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/companies',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const findAll = async (id) => {\n        const { data } = await api.request({\n            url: `/companies`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const list = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/list`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const find = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const finding = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/companies/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const updateSchedules = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/companies/${data.id}/schedules`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    return {\n        save,\n        update,\n        remove,\n        list,\n        find,\n        finding,\n        findAll,\n        updateSchedules\n    }\n}\n\nexport default useCompanies;","import React, { useState, useEffect } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// ICONS\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport TodayIcon from '@material-ui/icons/Today';\nimport CallIcon from \"@material-ui/icons/Call\";\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MessageIcon from '@material-ui/icons/Message';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport TimerIcon from '@material-ui/icons/Timer';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport { toast } from \"react-toastify\";\n\nimport Chart from \"./Chart\";\nimport ButtonWithSpinner from \"../../components/ButtonWithSpinner\";\n\nimport CardCounter from \"../../components/Dashboard/CardCounter\";\nimport TableAttendantsStatus from \"../../components/Dashboard/TableAttendantsStatus\";\nimport { isArray } from \"lodash\";\n\nimport useDashboard from \"../../hooks/useDashboard\";\nimport useCompanies from \"../../hooks/useCompanies\";\n\nimport { isEmpty } from \"lodash\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: 240,\n    overflowY: \"auto\",\n    ...theme.scrollbarStyles,\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700],\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\",\n  },\n  alignRight: {\n    textAlign: \"right\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n  card1: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#0094bb\",\n    color: \"#eee\",\n  },\n  card2: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#748e9d\",\n    color: \"#eee\",\n  },\n  card3: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#7f78e6\",\n    color: \"#eee\",\n  },\n  card4: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#cc991b\",\n    color: \"#eee\",\n  },\n  card5: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#434243\",\n    color: \"#eee\",\n  },\n  card6: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#b87d77\",\n    color: \"#eee\",\n  },\n  card7: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#7bc780\",\n    color: \"#eee\",\n  },\n  card8: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#b05c38\",\n    color: \"#eee\",\n  },\n  card9: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#bd3c58\",\n    color: \"#eee\",\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [counters, setCounters] = useState({});\n  const [attendants, setAttendants] = useState([]);\n  const [filterType, setFilterType] = useState(1);\n  const [period, setPeriod] = useState(0);\n  const [companyDueDate, setCompanyDueDate] = useState();\n  const [dateFrom, setDateFrom] = useState(\n    moment(\"1\", \"D\").format(\"YYYY-MM-DD\")\n  );\n  const [dateTo, setDateTo] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [loading, setLoading] = useState(false);\n  const { find } = useDashboard();\n  const { finding } = useCompanies();\n  useEffect(() => {\n    async function firstLoad() {\n      await fetchData();\n    }\n    setTimeout(() => {\n      firstLoad();\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function handleChangePeriod(value) {\n    setPeriod(value);\n  }\n\n  async function handleChangeFilterType(value) {\n    setFilterType(value);\n    if (value === 1) {\n      setPeriod(0);\n    } else {\n      setDateFrom(\"\");\n      setDateTo(\"\");\n    }\n  }\n\n  async function fetchData() {\n    setLoading(true);\n\n    let params = {};\n\n    if (period > 0) {\n      params = {\n        days: period,\n      };\n    }\n\n    if (!isEmpty(dateFrom) && moment(dateFrom).isValid()) {\n      params = {\n        ...params,\n        date_from: moment(dateFrom).format(\"YYYY-MM-DD\"),\n      };\n    }\n\n    if (!isEmpty(dateTo) && moment(dateTo).isValid()) {\n      params = {\n        ...params,\n        date_to: moment(dateTo).format(\"YYYY-MM-DD\"),\n      };\n    }\n\n    if (Object.keys(params).length === 0) {\n      toast.error(\"Parametrize o filtro\");\n      setLoading(false);\n      return;\n    }\n\n    const data = await find(params);\n\n\n\n    setCounters(data.counters);\n    if (isArray(data.attendants)) {\n      setAttendants(data.attendants);\n    } else {\n      setAttendants([]);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadCompanies();\n    }\n    fetchData();\n  }, [])\n  //let companyDueDate = localStorage.getItem(\"companyDueDate\");\n  //const companyDueDate = localStorage.getItem(\"companyDueDate\").toString();\n  const companyId = localStorage.getItem(\"companyId\");\n  const loadCompanies = async () => {\n    setLoading(true);\n    try {\n      const companiesList = await finding(companyId);\n      setCompanyDueDate(moment(companiesList.dueDate).format(\"DD/MM/yyyy\"));\n    } catch (e) {\n      console.log(\"🚀 Console Log : e\", e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n  function formatTime(minutes) {\n    return moment()\n      .startOf(\"day\")\n      .add(minutes, \"minutes\")\n      .format(\"HH[h] mm[m]\");\n  }\n\n  function renderFilters() {\n    if (filterType === 1) {\n      return (\n        <>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              label=\"Data Inicial\"\n              type=\"date\"\n              value={dateFrom}\n              onChange={(e) => setDateFrom(e.target.value)}\n              className={classes.fullWidth}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              label=\"Data Final\"\n              type=\"date\"\n              value={dateTo}\n              onChange={(e) => setDateTo(e.target.value)}\n              className={classes.fullWidth}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </>\n      );\n    } else {\n      return (\n        <Grid item xs={12} sm={6} md={4}>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"period-selector-label\">Período</InputLabel>\n            <Select\n              labelId=\"period-selector-label\"\n              id=\"period-selector\"\n              value={period}\n              onChange={(e) => handleChangePeriod(e.target.value)}\n            >\n              <MenuItem value={0}>Nenhum selecionado</MenuItem>\n              <MenuItem value={3}>Últimos 3 dias</MenuItem>\n              <MenuItem value={7}>Últimos 7 dias</MenuItem>\n              <MenuItem value={15}>Últimos 15 dias</MenuItem>\n              <MenuItem value={30}>Últimos 30 dias</MenuItem>\n              <MenuItem value={60}>Últimos 60 dias</MenuItem>\n              <MenuItem value={90}>Últimos 90 dias</MenuItem>\n            </Select>\n            <FormHelperText>Selecione o período desejado</FormHelperText>\n          </FormControl>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3} justifyContent=\"flex-end\">\n          \n          {/* GRID DO VENCIMENTO */}\n          {/* <Grid item xs={12} sm={6} md={3}>\n            <CardCounter\n              icon={<TodayIcon fontSize=\"inherit\" />}\n              title=\"Data Vencimento\"\n              value={companyDueDate}\n              loading={loading}\n            />\n          </Grid> */}\n\n          {/* DASHBOARD ATENDIMENTOS HOJE */}\n          <Grid item xs={12}>\n            <Paper className={classes.fixedHeightPaper}>\n              <Chart />\n            </Paper>\n          </Grid>\n\n          {/* FILTROS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl className={classes.selectContainer}>\n              <InputLabel id=\"period-selector-label\">Tipo de Filtro</InputLabel>\n              <Select\n                labelId=\"period-selector-label\"\n                value={filterType}\n                onChange={(e) => handleChangeFilterType(e.target.value)}\n              >\n                <MenuItem value={1}>Filtro por Data</MenuItem>\n                <MenuItem value={2}>Filtro por Período</MenuItem>\n              </Select>\n              <FormHelperText>Selecione o período desejado</FormHelperText>\n            </FormControl>\n          </Grid>\n\n          {renderFilters()}\n\n          {/* BOTAO FILTRAR */}\n          <Grid item xs={12} className={classes.alignRight}>\n            <ButtonWithSpinner\n              loading={loading}\n              onClick={() => fetchData()}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Filtrar\n            </ButtonWithSpinner>\n          </Grid>\n\n          {/* ATENDIMENTOS PENDENTES */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card1}\n              style={{ overflow: \"hidden\" }}\n              elevation={4}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Atd. Pendentes\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportPending}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={2}>\n                  <CallIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#0b708c\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* ATENDIMENTOS ACONTECENDO */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card2}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Atd. Acontecendo\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportHappening}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <HourglassEmptyIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#47606e\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* ATENDIMENTOS REALIZADOS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card3}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Finalizados\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportFinished}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <CheckCircleIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#5852ab\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* NOVOS CONTATOS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card4}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Novos Contatos\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.leads}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <GroupAddIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#8c6b19\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* T.M. DE ATENDIMENTO */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card8}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    T.M. de Atendimento\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {formatTime(counters.avgSupportTime)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <AccessAlarmIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#7a3f26\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* T.M. DE ESPERA */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card9}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    T.M. de Espera\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {formatTime(counters.avgWaitTime)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <TimerIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#8a2c40\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* USUARIOS ONLINE */}\n          <Grid item xs={12}>\n            {attendants.length ? (\n              <TableAttendantsStatus\n                attendants={attendants}\n                loading={loading}\n              />\n            ) : null}\n          </Grid>\n\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, FieldArray, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\ttextField: {\n\t\tmarginRight: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\n\textraAttr: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n}));\n\nconst ContactSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tnumber: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\"),\n});\n\nconst ContactModal = ({ open, onClose, contactId, initialValues, onSave }) => {\n\tconst classes = useStyles();\n\tconst isMounted = useRef(true);\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\tnumber: \"\",\n\t\temail: \"\",\n\t};\n\n\tconst [contact, setContact] = useState(initialState);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst fetchContact = async () => {\n\t\t\tif (initialValues) {\n\t\t\t\tsetContact(prevState => {\n\t\t\t\t\treturn { ...prevState, ...initialValues };\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!contactId) return;\n\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(`/contacts/${contactId}`);\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetContact(data);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t};\n\n\t\tfetchContact();\n\t}, [contactId, open, initialValues]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetContact(initialState);\n\t};\n\n\tconst handleSaveContact = async values => {\n\t\ttry {\n\t\t\tif (contactId) {\n\t\t\t\tawait api.put(`/contacts/${contactId}`, values);\n\t\t\t\thandleClose();\n\t\t\t} else {\n\t\t\t\tconst { data } = await api.post(\"/contacts\", values);\n\t\t\t\tif (onSave) {\n\t\t\t\t\tonSave(data);\n\t\t\t\t}\n\t\t\t\thandleClose();\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"contactModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{contactId\n\t\t\t\t\t\t? `${i18n.t(\"contactModal.title.edit\")}`\n\t\t\t\t\t\t: `${i18n.t(\"contactModal.title.add\")}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={contact}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={ContactSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveContact(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ values, errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.form.mainInfo\")}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.name\")}\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.number\")}\n\t\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\t\terror={touched.number && Boolean(errors.number)}\n\t\t\t\t\t\t\t\t\thelperText={touched.number && errors.number}\n\t\t\t\t\t\t\t\t\tplaceholder=\"5513912344321\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8, marginTop: 12 }}\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.form.extraInfo\")}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<FieldArray name=\"extraInfo\">\n\t\t\t\t\t\t\t\t\t{({ push, remove }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{values.extraInfo &&\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.extraInfo.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.extraInfo.map((info, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.extraAttr}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`${index}-info`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.extraName\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`extraInfo[${index}].name`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.extraValue\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`extraInfo[${index}].value`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.extraAttr}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ flex: 1, marginTop: 8 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => push({ name: \"\", value: \"\" })}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`+ ${i18n.t(\"contactModal.buttons.addExtraInfo\")}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</FieldArray>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{contactId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default ContactModal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, {\n\tcreateFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nconst filter = createFilterOptions({\n\ttrim: true,\n});\n\nconst NewTicketModal = ({ modalOpen, onClose, initialContact }) => {\n\n\tconst [options, setOptions] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [searchParam, setSearchParam] = useState(\"\");\n\tconst [selectedContact, setSelectedContact] = useState(null);\n\tconst [selectedQueue, setSelectedQueue] = useState(\"\");\n\tconst [newContact, setNewContact] = useState({});\n\tconst [contactModalOpen, setContactModalOpen] = useState(false);\n\tconst { user } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tif (initialContact?.id !== undefined) {\n\t\t\tsetOptions([initialContact]);\n\t\t\tsetSelectedContact(initialContact);\n\t\t}\n\t}, [initialContact]);\n\n\tuseEffect(() => {\n\t\tif (!modalOpen || searchParam.length < 3) {\n\t\t\tsetLoading(false);\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\tconst delayDebounceFn = setTimeout(() => {\n\t\t\tconst fetchContacts = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { data } = await api.get(\"contacts\", {\n\t\t\t\t\t\tparams: { searchParam },\n\t\t\t\t\t});\n\t\t\t\t\tsetOptions(data.contacts);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\ttoastError(err);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchContacts();\n\t\t}, 500);\n\t\treturn () => clearTimeout(delayDebounceFn);\n\t}, [searchParam, modalOpen]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetSearchParam(\"\");\n\t\tsetSelectedContact(null);\n\t};\n\n\tconst handleSaveTicket = async contactId => {\n\t\tif (!contactId) return;\n\t\tif (selectedQueue === \"\" && user.profile !== 'admin') {\n\t\t\ttoast.error(\"Selecione uma fila\");\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst queueId = selectedQueue !== \"\" ? selectedQueue : null;\n\t\t\tconst { data: ticket } = await api.post(\"/tickets\", {\n\t\t\t\tcontactId: contactId,\n\t\t\t\tqueueId,\n\t\t\t\tuserId: user.id,\n\t\t\t\tstatus: \"open\",\n\t\t\t});\n\t\t\tonClose(ticket);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\tconst handleSelectOption = (e, newValue) => {\n\t\tif (newValue?.number) {\n\t\t\tsetSelectedContact(newValue);\n\t\t} else if (newValue?.name) {\n\t\t\tsetNewContact({ name: newValue.name });\n\t\t\tsetContactModalOpen(true);\n\t\t}\n\t};\n\n\tconst handleCloseContactModal = () => {\n\t\tsetContactModalOpen(false);\n\t};\n\n\tconst handleAddNewContactTicket = contact => {\n\t\thandleSaveTicket(contact.id);\n\t};\n\n\tconst createAddContactOption = (filterOptions, params) => {\n\t\tconst filtered = filter(filterOptions, params);\n\n\t\tif (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n\t\t\tfiltered.push({\n\t\t\t\tname: `${params.inputValue}`,\n\t\t\t});\n\t\t}\n\n\t\treturn filtered;\n\t};\n\n\tconst renderOption = option => {\n\t\tif (option.number) {\n\t\t\treturn `${option.name} - ${option.number}`;\n\t\t} else {\n\t\t\treturn `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n\t\t}\n\t};\n\n\tconst renderOptionLabel = option => {\n\t\tif (option.number) {\n\t\t\treturn `${option.name} - ${option.number}`;\n\t\t} else {\n\t\t\treturn `${option.name}`;\n\t\t}\n\t};\n\n\tconst renderContactAutocomplete = () => {\n\t\tif (initialContact === undefined || initialContact.id === undefined) {\n\t\t\treturn (\n\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tclearOnBlur\n\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\tclearOnEscape\n\t\t\t\t\t\tgetOptionLabel={renderOptionLabel}\n\t\t\t\t\t\trenderOption={renderOption}\n\t\t\t\t\t\tfilterOptions={createAddContactOption}\n\t\t\t\t\t\tonChange={(e, newValue) => handleSelectOption(e, newValue)}\n\t\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tlabel={i18n.t(\"newTicketModal.fieldLabel\")}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tonChange={e => setSearchParam(e.target.value)}\n\t\t\t\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\t\t\t\tif (loading || !selectedContact) return;\n\t\t\t\t\t\t\t\t\telse if (e.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\thandleSaveTicket(selectedContact.id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContactModal\n\t\t\t\topen={contactModalOpen}\n\t\t\t\tinitialValues={newContact}\n\t\t\t\tonClose={handleCloseContactModal}\n\t\t\t\tonSave={handleAddNewContactTicket}\n\t\t\t></ContactModal>\n\t\t\t<Dialog open={modalOpen} onClose={handleClose}>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{i18n.t(\"newTicketModal.title\")}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t<Grid style={{ width: 300 }} container spacing={2}>\n\t\t\t\t\t\t{renderContactAutocomplete()}\n\t\t\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={selectedQueue}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetSelectedQueue(e.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderValue={() => {\n\t\t\t\t\t\t\t\t\tif (selectedQueue === \"\") {\n\t\t\t\t\t\t\t\t\t\treturn \"Selecione uma fila\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst queue = user.queues.find(q => q.id === selectedQueue)\n\t\t\t\t\t\t\t\t\treturn queue.name\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{user.queues?.length > 0 &&\n\t\t\t\t\t\t\t\t\tuser.queues.map((queue, key) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem dense key={key} value={queue.id}>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={queue.name} />\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"newTicketModal.buttons.cancel\")}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tdisabled={!selectedContact}\n\t\t\t\t\t\tonClick={() => handleSaveTicket(selectedContact.id)}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"newTicketModal.buttons.ok\")}\n\t\t\t\t\t</ButtonWithSpinner>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n};\n\nexport default NewTicketModal;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TicketsContext = createContext();\n\nconst TicketsContextProvider = ({ children }) => {\n\tconst [currentTicket, setCurrentTicket] = useState({ id: null, code: null });\n    const history = useHistory();\n\n    useEffect(() => {\n        if (currentTicket.id !== null) {\n            history.push(`/tickets/${currentTicket.uuid}`);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentTicket])\n\n\treturn (\n\t\t<TicketsContext.Provider\n\t\t\tvalue={{ currentTicket, setCurrentTicket }}\n\t\t>\n\t\t\t{children}\n\t\t</TicketsContext.Provider>\n\t);\n};\n\nexport { TicketsContext, TicketsContextProvider };\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport { Button, Divider, } from \"@material-ui/core\";\n\nconst VcardPreview = ({ contact, number }) => {\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const companyId = localStorage.getItem(\"companyId\");\n\n  const [selectedContact, setContact] = useState({\n    id: 0,\n    name: \"\",\n    number: 0,\n    profilePicUrl: \"\"\n  });\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          let contactObj = {\n            name: contact,\n            number,\n            email: \"\"\n          }\n          const { data } = await api.post(\"/contacts/findOrCreate\", contactObj);\n          setContact(data)\n\n        } catch (err) {\n          console.log(err)\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [contact, number]);\n\n  const handleNewChat = async () => {\n    try {\n      const { data: ticket } = await api.post(\"/tickets\", {\n        contactId: selectedContact.id,\n        userId: user.id,\n        status: \"open\",\n        companyId: companyId\n      });\n      history.push(`/tickets/${ticket.uuid}`);\n    } catch (err) {\n      toastError(err);\n    }\n  }\n\n  return (\n    <>\n      <div style={{\n        minWidth: \"250px\",\n        maxWidth: \"350px\",\n        marginTop: '8px',\n        backgroundColor: '#ffffff',\n        boxShadow: \"0 1px 1px #b3b3b3\",\n        borderRadius: \"4px\"\n      }}>\n        <Box\n        // backgroundColor=\"#ffffff\"\n        >\n          <Box\n            display=\"flex\"\n            padding={1}\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Avatar src={selectedContact?.profilePicUrl} />\n\n            <Typography\n              style={{ marginTop: \"12px\", marginLeft: \"10px\", fontWeight: 'bolder' }}\n\n            >\n              {selectedContact?.name}\n            </Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            padding={1}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Divider />\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant='outlined'\n              onClick={handleNewChat}\n              disabled={!selectedContact?.number}\n            >\n              Conversar\n            </Button>\n          </Box>\n        </Box>\n      </div>\n    </>\n  );\n\n};\n\nexport default VcardPreview;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ModalImage from \"react-modal-image\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n\tmessageMedia: {\n\t\tobjectFit: \"cover\",\n\t\twidth: 250,\n\t\theight: 200,\n\t\tborderTopLeftRadius: 8,\n\t\tborderTopRightRadius: 8,\n\t\tborderBottomLeftRadius: 8,\n\t\tborderBottomRightRadius: 8,\n\t},\n}));\n\nconst ModalImageCors = ({ imageUrl }) => {\n\tconst classes = useStyles();\n\tconst [fetching, setFetching] = useState(true);\n\tconst [blobUrl, setBlobUrl] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (!imageUrl) return;\n\t\tconst fetchImage = async () => {\n\t\t\tconst { data, headers } = await api.get(imageUrl, {\n\t\t\t\tresponseType: \"blob\",\n\t\t\t});\n\t\t\tconst url = window.URL.createObjectURL(\n\t\t\t\tnew Blob([data], { type: headers[\"content-type\"] })\n\t\t\t);\n\t\t\tsetBlobUrl(url);\n\t\t\tsetFetching(false);\n\t\t};\n\t\tfetchImage();\n\t}, [imageUrl]);\n\n\treturn (\n\t\t<ModalImage\n\t\t\tclassName={classes.messageMedia}\n\t\t\tsmallSrcSet={fetching ? imageUrl : blobUrl}\n\t\t\tmedium={fetching ? imageUrl : blobUrl}\n\t\t\tlarge={fetching ? imageUrl : blobUrl}\n\t\t\talt=\"image\"\n\t\t/>\n\t);\n};\n\nexport default ModalImageCors;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst ConfirmationModal = ({ title, children, open, onClose, onConfirm }) => {\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={() => onClose(false)}\n\t\t\taria-labelledby=\"confirm-dialog\"\n\t\t>\n\t\t\t<DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t<Typography>{children}</Typography>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => onClose(false)}\n\t\t\t\t\tcolor=\"default\"\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"confirmationModal.buttons.cancel\")}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClose(false);\n\t\t\t\t\t\tonConfirm();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"confirmationModal.buttons.confirm\")}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nexport default ConfirmationModal;\n","import React, { useState, createContext } from \"react\";\n\nconst ReplyMessageContext = createContext();\n\nconst ReplyMessageProvider = ({ children }) => {\n\tconst [replyingMessage, setReplyingMessage] = useState(null);\n\tconst [medias, setMedias] = useState([]);\n\n\treturn (\n\t\t<ReplyMessageContext.Provider\n\t\t\tvalue={{ replyingMessage, setReplyingMessage, medias, setMedias }}\n\t\t>\n\t\t\t{children}\n\t\t</ReplyMessageContext.Provider>\n\t);\n};\n\nexport { ReplyMessageContext, ReplyMessageProvider };\n","import React, { useState, useContext } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport { Menu } from \"@material-ui/core\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst MessageOptionsMenu = ({ message, menuOpen, handleClose, anchorEl }) => {\n\tconst { setReplyingMessage } = useContext(ReplyMessageContext);\n\tconst [confirmationOpen, setConfirmationOpen] = useState(false);\n\n\tconst handleDeleteMessage = async () => {\n\t\ttry {\n\t\t\tawait api.delete(`/messages/${message.id}`);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst hanldeReplyMessage = () => {\n\t\tsetReplyingMessage(message);\n\t\thandleClose();\n\t};\n\n\tconst handleOpenConfirmationModal = e => {\n\t\tsetConfirmationOpen(true);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ConfirmationModal\n\t\t\t\ttitle={i18n.t(\"messageOptionsMenu.confirmationModal.title\")}\n\t\t\t\topen={confirmationOpen}\n\t\t\t\tonClose={setConfirmationOpen}\n\t\t\t\tonConfirm={handleDeleteMessage}\n\t\t\t>\n\t\t\t\t{i18n.t(\"messageOptionsMenu.confirmationModal.message\")}\n\t\t\t</ConfirmationModal>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\topen={menuOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{message.fromMe && (\n\t\t\t\t\t<MenuItem onClick={handleOpenConfirmationModal}>\n\t\t\t\t\t\t{i18n.t(\"messageOptionsMenu.delete\")}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)}\n\t\t\t\t<MenuItem onClick={hanldeReplyMessage}>\n\t\t\t\t\t{i18n.t(\"messageOptionsMenu.reply\")}\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t</>\n\t);\n};\n\nexport default MessageOptionsMenu;\n","import React, { useState, useEffect, useReducer, useRef, useContext } from \"react\";\n\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport {\n  AccessTime,\n  Block,\n  Done,\n  DoneAll,\n  ExpandMore,\n  GetApp,\n  Facebook,\n  Instagram,\n} from \"@material-ui/icons\";\nimport VcardPreview from \"../VcardPreview\";\n\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200,\n  },\n\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 20px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n\n  circleLoading: {\n    color: green[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12,\n  },\n\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#ffffff\",\n    color: \"#303030\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#dcf8c6\",\n    color: \"#303030\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: \"#cfe9ba\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\",\n  },\n\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"inherit\" },\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 250,\n    height: 200,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n  },\n\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\",\n  },\n\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\",\n  },\n\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4,\n  },\n\n  ackDoneAllIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10,\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n\n    messages.forEach((message) => {\n      const messageIndex = state.findIndex((m) => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n\n    return [...newMessages, ...state];\n  }\n\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === newMessage.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === messageToUpdate.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst MessagesList = ({ ticket, ticketId, isGroup }) => {\n  const classes = useStyles();\n\n  const { setMedias } = useContext(ReplyMessageContext);\n\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const lastMessageRef = useRef();\n\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const currentTicketId = useRef(ticketId);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n\n    currentTicketId.current = ticketId;\n  }, [ticketId]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === undefined) return;\n        try {\n          const { data } = await api.get(\"/messages/\" + ticketId, {\n            params: { pageNumber },\n          });\n\n          if (currentTicketId.current === ticketId) {\n            dispatch({ type: \"LOAD_MESSAGES\", payload: data.messages });\n            setHasMore(data.hasMore);\n            setLoading(false);\n          }\n\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      if (data.action === \"create\") {\n        dispatch({ type: \"ADD_MESSAGE\", payload: data.message });\n        scrollToBottom();\n      }\n\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_MESSAGE\", payload: data.message });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket]);\n\n  const loadMore = () => {\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n  };\n\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({});\n    }\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore) return;\n    const { scrollTop } = e.currentTarget;\n\n    if (scrollTop === 0) {\n      document.getElementById(\"messagesList\").scrollTop = 1;\n    }\n\n    if (loading) {\n      return;\n    }\n\n    if (scrollTop < 50) {\n      loadMore();\n    }\n  };\n\n  const handleOpenMessageOptionsMenu = (e, message) => {\n    setAnchorEl(e.currentTarget);\n    setSelectedMessage(message);\n  };\n\n  const handleCloseMessageOptionsMenu = (e) => {\n    setAnchorEl(null);\n  };\n\n  const extrairNomeENumero = (vcard) => {\n    const nomeMatch = vcard.match(/FN:(.*?)\\n/);\n    const nome = nomeMatch ? nomeMatch[1] : '';\n\n    const numeroMatch = vcard.match(/waid=(\\d+)/);\n    const numero = numeroMatch ? numeroMatch[1].replace(/\\D/g, '') : '';\n    if (nome && numero) {\n      return { nome, numero };\n    } else {\n      return null;\n    }\n  }\n\n  const checkMessageMedia = (message) => {\n\n    if (message.mediaType === \"image\") {\n      return <ModalImageCors imageUrl={message.mediaUrl} />;\n    }\n\n    if (message.mediaType === \"contactMessage\") {\n\n      const vcardPreviewInfo = extrairNomeENumero(message.body)\n\n      return <VcardPreview key={message.id} contact={vcardPreviewInfo?.nome} number={vcardPreviewInfo?.numero} />\n    }\n\n    if (message.mediaType === \"contactsArrayMessage\") {\n\n      const contactsArray = JSON.parse(message.body);\n\n      return contactsArray.map((contact, index) => {\n\n        const vcardPreviewInfo = extrairNomeENumero(contact)\n\n\n        return <VcardPreview key={index} contact={vcardPreviewInfo?.nome} number={vcardPreviewInfo?.numero} />\n      })\n\n    }\n\n    if (message.mediaType === \"audio\") {\n      return (\n        <audio controls>\n          <source src={message.mediaUrl} type=\"audio/mp3\"></source>\n        </audio>\n      );\n    }\n\n    if (message.mediaType === \"video\") {\n      return (\n        <video\n          className={classes.messageMedia}\n          src={message.mediaUrl}\n          controls\n        />\n      );\n    } else {\n      return (\n        <>\n          <div className={classes.downloadMedia}>\n            <Button\n              startIcon={<GetApp />}\n              color=\"primary\"\n              variant=\"outlined\"\n              target=\"_blank\"\n              href={message.mediaUrl}\n            >\n              Download\n            </Button>\n          </div>\n          <Divider />\n        </>\n      );\n    }\n  };\n\n  const renderMessageAck = (message) => {\n    if (message.ack === 0) {\n      return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 1) {\n      return <Done fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 2) {\n      return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 3 || message.ack === 4) {\n      return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} />;\n    }\n  };\n\n  const renderDailyTimestamps = (message, index) => {\n    if (index === 0) {\n      return (\n        <span\n          className={classes.dailyTimestamp}\n          key={`timestamp-${message.id}`}\n        >\n          <div className={classes.dailyTimestampText}>\n            {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n          </div>\n        </span>\n      );\n    }\n    if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return (\n          <span\n            className={classes.dailyTimestamp}\n            key={`timestamp-${message.id}`}\n          >\n            <div className={classes.dailyTimestampText}>\n              {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n            </div>\n          </span>\n        );\n      }\n    }\n    if (index === messagesList.length - 1) {\n      return (\n        <div\n          key={`ref-${message.createdAt}`}\n          ref={lastMessageRef}\n          style={{ float: \"left\", clear: \"both\" }}\n        />\n      );\n    }\n  };\n\n  const renderMessageDivider = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageUser = messagesList[index].fromMe;\n      let previousMessageUser = messagesList[index - 1].fromMe;\n\n      if (messageUser !== previousMessageUser) {\n        return (\n          <span style={{ marginTop: 16 }} key={`divider-${message.id}`}></span>\n        );\n      }\n    }\n  };\n\n  const renderQuotedMessage = (message) => {\n    return (\n      <div\n        className={clsx(classes.quotedContainerLeft, {\n          [classes.quotedContainerRight]: message.fromMe,\n        })}\n      >\n        <span\n          className={clsx(classes.quotedSideColorLeft, {\n            [classes.quotedSideColorRight]: message.quotedMsg?.fromMe,\n          })}\n        ></span>\n        <div className={classes.quotedMsg}>\n          {!message.quotedMsg?.fromMe && (\n            <span className={classes.messageContactName}>\n              {message.quotedMsg?.contact?.name}\n            </span>\n          )}\n          {message.quotedMsg?.body}\n        </div>\n      </div>\n    );\n  };\n\n  const renderMessages = () => {\n    if (messagesList.length > 0) {\n      const viewMessagesList = messagesList.map((message, index) => {\n        if (!message.fromMe) {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderMessageDivider(message, index)}\n              <div\n                className={classes.messageLeft}\n                title={message.queueId && message.queue?.name}\n              >\n                <IconButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  id=\"messageActionsButton\"\n                  disabled={message.isDeleted}\n                  className={classes.messageActionsButton}\n                  onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                >\n                  <ExpandMore />\n                </IconButton>\n                {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {message.contact?.name}\n                  </span>\n                )}\n                {(message.mediaUrl || message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') && checkMessageMedia(message)}\n\n                {/* {message.mediaUrl && checkMessageMedia(message)} */}\n                <div className={classes.textContentItem}>\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  <MarkdownWrapper>{(message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') ? ' ' : message.body}</MarkdownWrapper>\n                  {/* <MarkdownWrapper>{message.body}</MarkdownWrapper> */}\n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderMessageDivider(message, index)}\n              <div\n                className={classes.messageRight}\n                title={message.queueId && message.queue?.name}\n              >\n                <IconButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  id=\"messageActionsButton\"\n                  disabled={message.isDeleted}\n                  className={classes.messageActionsButton}\n                  onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                >\n                  <ExpandMore />\n                </IconButton>\n                {(message.mediaUrl || message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') && checkMessageMedia(message)}\n\n                {/* {message.mediaUrl && checkMessageMedia(message)} */}\n                <div\n                  className={clsx(classes.textContentItem, {\n                    [classes.textContentItemDeleted]: message.isDeleted,\n                  })}\n                >\n                  {message.isDeleted && (\n                    <Block\n                      color=\"disabled\"\n                      fontSize=\"small\"\n                      className={classes.deletedIcon}\n                    />\n                  )}\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  <MarkdownWrapper>{(message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') ? ' ' : message.body}</MarkdownWrapper>\n                  {/* <MarkdownWrapper>{message.body}</MarkdownWrapper> */}\n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                    {renderMessageAck(message)}\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        }\n      });\n      return viewMessagesList;\n    } else {\n      return <div>Say hello to your new contact!</div>;\n    }\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setMedias(droppedFiles);\n    event.dataTransfer.clearData();\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  const handleInputPaste = (e) => {\n\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n\n  return (\n    <div className={classes.messagesListWrapper}>\n      <MessageOptionsMenu\n        message={selectedMessage}\n        anchorEl={anchorEl}\n        menuOpen={messageOptionsMenuOpen}\n        handleClose={handleCloseMessageOptionsMenu}\n      />\n      <div\n        id=\"messagesList\"\n        className={classes.messagesList}\n        onScroll={handleScroll}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onPaste={handleInputPaste}\n      >\n        {messagesList.length > 0 ? renderMessages() : []}\n      </div>\n\n      {loading && (\n        <div>\n          <CircularProgress className={classes.circleLoading} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessagesList;","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Card, CardHeader } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles(theme => ({\n\tticketHeader: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflex: \"none\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t},\n}));\n\nconst TicketHeaderSkeleton = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Card square className={classes.ticketHeader}>\n\t\t\t<CardHeader\n\t\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\t\tavatar={\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\">\n\t\t\t\t\t\t<Avatar alt=\"contact_image\" />\n\t\t\t\t\t</Skeleton>\n\t\t\t\t}\n\t\t\t\ttitle={<Skeleton animation=\"wave\" width={80} />}\n\t\t\t\tsubheader={<Skeleton animation=\"wave\" width={140} />}\n\t\t\t/>\n\t\t</Card>\n\t);\n};\n\nexport default TicketHeaderSkeleton;\n","import React from \"react\";\n\nimport { Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TicketHeaderSkeleton from \"../TicketHeaderSkeleton\";\n\nconst useStyles = makeStyles(theme => ({\n\tticketHeader: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflex: \"none\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t},\n}));\n\nconst TicketHeader = ({ loading, children }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t{loading ? (\n\t\t\t\t<TicketHeaderSkeleton />\n\t\t\t) : (\n\t\t\t\t<Card square className={classes.ticketHeader}>\n\t\t\t\t\t{children}\n\t\t\t\t</Card>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default TicketHeader;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Avatar, CardHeader } from \"@material-ui/core\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst TicketInfo = ({ contact, ticket, onClick }) => {\n\tconst { user } = ticket\n\tconst [userName, setUserName] = useState('')\n\tconst [contactName, setContactName] = useState('')\n\n\tuseEffect(() => {\n\t\tif (contact) {\n\t\t\tsetContactName(contact.name);\n\t\t\tif(document.body.offsetWidth < 600) {\n\t\t\t\tif (contact.name.length > 10) {\n\t\t\t\t\tconst truncadName = contact.name.substring(0, 10) + '...';\n\t\t\t\t\tsetContactName(truncadName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (user && contact) {\n\t\t\tsetUserName(`${i18n.t(\"messagesList.header.assignedTo\")} ${user.name}`);\n\n\t\t\tif(document.body.offsetWidth < 600) {\n\t\t\t\tsetUserName(`${user.name}`);\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn (\n\t\t<CardHeader\n\t\t\tonClick={onClick}\n\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\tavatar={<Avatar src={contact.profilePicUrl} alt=\"contact_image\" />}\n\t\t\ttitle={`${contactName} #${ticket.id}`}\n\t\t\tsubheader={ticket.user && `${userName}`}\n\t\t/>\n\t);\n};\n\nexport default TicketInfo;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport MessagesList from \"../MessagesList\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function TicketMessagesDialog({ open, handleClose, ticketId }) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n\n  useEffect(() => {\n    let delayDebounceFn = null;\n    if (open) {\n      setLoading(true);\n      delayDebounceFn = setTimeout(() => {\n        const fetchTicket = async () => {\n          try {\n            const { data } = await api.get(\"/tickets/\" + ticketId);\n            const { queueId } = data;\n            const { queues, profile } = user;\n\n            const queueAllowed = queues.find((q) => q.id === queueId);\n            if (queueAllowed === undefined && profile !== \"admin\") {\n              toast.error(\"Acesso não permitido\");\n              history.push(\"/tickets\");\n              return;\n            }\n\n            setContact(data.contact);\n            setTicket(data);\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        };\n        fetchTicket();\n      }, 500);\n    }\n    return () => {\n      if (delayDebounceFn !== null) {\n        clearTimeout(delayDebounceFn);\n      }\n    };\n  }, [ticketId, user, history, open]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    let socket = null;\n\n    if (open) {\n      socket = socketConnection({ companyId });\n      socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n      socket.on(`company-${companyId}-ticket`, (data) => {\n        if (data.action === \"update\") {\n          setTicket(data.ticket);\n        }\n\n        if (data.action === \"delete\") {\n          toast.success(\"Ticket deleted sucessfully.\");\n          history.push(\"/tickets\");\n        }\n      });\n\n      socket.on(`company-${companyId}-contact`, (data) => {\n        if (data.action === \"update\") {\n          setContact((prevState) => {\n            if (prevState.id === data.contact?.id) {\n              return { ...prevState, ...data.contact };\n            }\n            return prevState;\n          });\n        }\n      });\n    }\n\n    return () => {\n      if (socket !== null) {\n        socket.disconnect();\n      }\n    };\n  }, [ticketId, ticket, history, open]);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const renderTicketInfo = () => {\n    if (ticket.user !== undefined) {\n      return (\n        <TicketInfo\n          contact={contact}\n          ticket={ticket}\n          onClick={handleDrawerOpen}\n        />\n      );\n    }\n  };\n\n  const renderMessagesList = () => {\n    return (\n      <Box className={classes.root}>\n        <MessagesList\n          ticket={ticket}\n          ticketId={ticket.id}\n          isGroup={ticket.isGroup}\n        ></MessagesList>\n      </Box>\n    );\n  };\n\n  return (\n    <Dialog maxWidth=\"md\" onClose={handleClose} open={open}>\n      <TicketHeader loading={loading}>{renderTicketInfo()}</TicketHeader>\n      <ReplyMessageProvider>{renderMessagesList()}</ReplyMessageProvider>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","function getRGB(c) {\n  return parseInt(c, 16) || c\n}\n\nfunction getsRGB(c) {\n  return getRGB(c) / 255 <= 0.03928\n    ? getRGB(c) / 255 / 12.92\n    : Math.pow((getRGB(c) / 255 + 0.055) / 1.055, 2.4)\n}\n\nfunction getLuminance(hexColor) {\n  return (\n    0.2126 * getsRGB(hexColor.substr(1, 2)) +\n    0.7152 * getsRGB(hexColor.substr(3, 2)) +\n    0.0722 * getsRGB(hexColor.substr(-2))\n  )\n}\n\nfunction getContrast(f, b) {\n  const L1 = getLuminance(f)\n  const L2 = getLuminance(b)\n  return (Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05)\n}\n\nfunction getTextColor(bgColor) {\n  const whiteContrast = getContrast(bgColor, '#ffffff')\n  const blackContrast = getContrast(bgColor, '#000000')\n\n  return whiteContrast > blackContrast ? '#ffffff' : '#000000'\n}\n\nconst contrastColor = (color) => {\n    return getTextColor(color);\n}\n\nexport default contrastColor;","import { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    tag: {\n        padding: \"1px 5px\",\n        borderRadius: \"3px\",\n        fontSize: \"0.8em\",\n        fontWeight: \"bold\",\n        color: \"#FFF\",\n        marginRight: \"5px\",\n        whiteSpace: \"nowrap\"\n    }\n}));\n\nconst ContactTag = ({ tag }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tag} style={{ backgroundColor: tag.color, marginTop: \"2px\" }}>\n            {tag.name.toUpperCase()}\n        </div>\n    )\n}\n\nexport default ContactTag;","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { parseISO, format, isSameDay } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, grey, red, blue } from \"@material-ui/core/colors\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport toastError from \"../../errors/toastError\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport RoomIcon from '@material-ui/icons/Room';\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport AndroidIcon from \"@material-ui/icons/Android\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TicketMessagesDialog from \"../TicketMessagesDialog\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearOutlinedIcon from '@material-ui/icons/ClearOutlined';\nimport contrastColor from \"../../helpers/contrastColor\";\nimport ContactTag from \"../ContactTag\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    position: \"relative\",\n  },\n\n  pendingTicket: {\n    cursor: \"unset\",\n  },\n  queueTag: {\n    background: \"#FCFCFC\",\n    color: \"#000\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  newMessagesCount: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n    top: \"10px\",\n    left: \"20px\",\n    borderRadius: 0,\n  },\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"5px\",\n  },\n\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    top: -21\n  },\n\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\",\n  },\n\n  contactLastMessage: {\n    paddingRight: \"0%\",\n    marginLeft: \"5px\",\n  },\n\n\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500],\n  },\n\n  acceptButton: {\n    position: \"absolute\",\n    right: \"108px\",\n  },\n\n\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\",\n  },\n\n\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n  },\n\n  ticketInfo: {\n    position: \"relative\",\n    top: -13\n  },\n  secondaryContentSecond: {\n    display: 'flex',\n    // marginTop: 5,\n    //marginLeft: \"5px\",\n    alignItems: \"flex-start\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignContent: \"flex-start\",\n  },\n  ticketInfo1: {\n    position: \"relative\",\n    top: 13,\n    right: 0\n  },\n  Radiusdot: {\n    \"& .MuiBadge-badge\": {\n      borderRadius: 2,\n      position: \"inherit\",\n      height: 16,\n      margin: 2,\n      padding: 3\n    },\n    \"& .MuiBadge-anchorOriginTopRightRectangle\": {\n      transform: \"scale(1) translate(0%, -40%)\",\n    },\n\n  }\n}));\n\nconst TicketListItemCustom = ({ ticket }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [ticketUser, setTicketUser] = useState(null);\n  const [ticketQueueName, setTicketQueueName] = useState(null);\n  const [ticketQueueColor, setTicketQueueColor] = useState(null);\n  // const [tag, setTag] = useState([]);\n  const [whatsAppName, setWhatsAppName] = useState(null);\n\n  const [openTicketMessageDialog, setOpenTicketMessageDialog] = useState(false);\n  const { ticketId } = useParams();\n  const isMounted = useRef(true);\n  const { setCurrentTicket } = useContext(TicketsContext);\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  useEffect(() => {\n    if (ticket.userId && ticket.user) {\n      setTicketUser(ticket.user?.name?.toUpperCase());\n    }\n    setTicketQueueName(ticket.queue?.name?.toUpperCase());\n    setTicketQueueColor(ticket.queue?.color);\n\n    if (ticket.whatsappId && ticket.whatsapp) {\n      setWhatsAppName(ticket.whatsapp.name?.toUpperCase());\n    }\n\n    // setTag(ticket?.tags);\n\n    return () => {\n      isMounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleCloseTicket = async (id) => {\n    // setTag(ticket?.tags);\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"closed\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n\n  const handleReopenTicket = async (id) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n\n  const handleAcepptTicket = async (id) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user?.id,\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  const handleSelectTicket = (ticket) => {\n    const code = uuidv4();\n    const { id, uuid } = ticket;\n    setCurrentTicket({ id, uuid, code });\n  };\n\n\n  const renderTicketInfo = () => {\n    if (ticketUser) {\n\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n\n          {/* </span> */}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment key={ticket.id}>\n      <TicketMessagesDialog\n        open={openTicketMessageDialog}\n\n        handleClose={() => setOpenTicketMessageDialog(false)}\n        ticketId={ticket.id}\n      ></TicketMessagesDialog>\n      <ListItem dense button\n        onClick={(e) => {\n          if (ticket.status === \"pending\") return;\n          handleSelectTicket(ticket);\n        }}\n        selected={ticketId && +ticketId === ticket.id}\n        className={clsx(classes.ticket, {\n          [classes.pendingTicket]: ticket.status === \"pending\",\n        })}\n      >\n        <Tooltip arrow placement=\"right\" title={ticket.queue?.name?.toUpperCase() || \"SEM FILA\"} >\n          <span style={{ backgroundColor: ticket.queue?.color || \"#7C7C7C\" }} className={classes.ticketQueueColor}></span>\n        </Tooltip>\n        <ListItemAvatar>\n          {ticket.status !== \"pending\" ?\n            <Avatar\n              style={{\n                marginTop: \"-20px\",\n                marginLeft: \"-3px\",\n                width: \"55px\",\n                height: \"55px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n            :\n            <Avatar\n              style={{\n                marginTop: \"-30px\",\n                marginLeft: \"0px\",\n                width: \"50px\",\n                height: \"50px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n          }\n        </ListItemAvatar>\n        <ListItemText\n          disableTypography\n\n          primary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {ticket.contact.name}\n                {profile === \"admin\" && (\n                  <Tooltip title=\"Espiar Conversa\">\n                    <VisibilityIcon\n                      onClick={() => setOpenTicketMessageDialog(true)}\n                      fontSize=\"small\"\n                      style={{\n                        color: blue[700],\n                        cursor: \"pointer\",\n                        marginLeft: 10,\n                        verticalAlign: \"middle\"\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Typography>\n              <ListItemSecondaryAction>\n                <Box className={classes.ticketInfo1}>{renderTicketInfo()}</Box>\n              </ListItemSecondaryAction>\n            </span>\n\n          }\n          secondary={\n            <span className={classes.contactNameWrapper}>\n\n              <Typography\n                className={classes.contactLastMessage}\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              > {ticket.lastMessage.includes('data:image/png;base64') ? <MarkdownWrapper> Localização</MarkdownWrapper> : <MarkdownWrapper>{ticket.lastMessage}</MarkdownWrapper>}\n                <span className={classes.secondaryContentSecond} >\n                  {ticket?.whatsapp?.name ? <Badge className={classes.connectionTag}>{ticket?.whatsapp?.name?.toUpperCase()}</Badge> : <br></br>}\n                  {ticketUser ? <Badge style={{ backgroundColor: \"#000000\" }} className={classes.connectionTag}>{ticketUser}</Badge> : <br></br>}\n                  <Badge style={{ backgroundColor: ticket.queue?.color || \"#7c7c7c\" }} className={classes.connectionTag}>{ticket.queue?.name?.toUpperCase() || \"SEM FILA\"}</Badge>\n                </span>\n                <span style={{ paddingTop: \"2px\" }} className={classes.secondaryContentSecond} >\n                  {ticket?.tags?.map((tag) => {\n                    return (\n                      <ContactTag tag={tag} key={`ticket-contact-tag-${ticket.id}-${tag.id}`} />\n                    );\n                  })}\n                </span>\n              </Typography>\n\n              <Badge\n                className={classes.newMessagesCount}\n                badgeContent={ticket.unreadMessages}\n                classes={{\n                  badge: classes.badgeStyle,\n                }}\n              />\n            </span>\n          }\n\n        />\n        <ListItemSecondaryAction>\n          {ticket.lastMessage && (\n            <>\n\n              <Typography\n                className={classes.lastMessageTime}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n\n                {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                  <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                ) : (\n                  <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                )}\n              </Typography>\n\n              <br />\n\n            </>\n          )}\n\n        </ListItemSecondaryAction>\n        <span className={classes.secondaryContentSecond} >\n          {ticket.status === \"pending\" && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'green', color: 'white', padding: '0px', bottom: '17px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleAcepptTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.accept\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status !== \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleCloseTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.closed\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status === \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleReopenTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.reopen\")}\n            </ButtonWithSpinner>\n\n          )}\n        </span>\n      </ListItem>\n\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default TicketListItemCustom;","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst TicketsSkeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={60} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={90} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={70} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={120} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={60} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={90} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t</>\n\t);\n};\n\nexport default TicketsSkeleton;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\n\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsListWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  ticketsList: {\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  ticketsListHeader: {\n    color: \"rgb(67, 83, 105)\",\n    zIndex: 2,\n    backgroundColor: \"white\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  ticketsCount: {\n    fontWeight: \"normal\",\n    color: \"rgb(104, 121, 146)\",\n    marginLeft: \"8px\",\n    fontSize: \"14px\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TICKETS\") {\n    const newTickets = action.payload;\n\n    newTickets.forEach((ticket) => {\n      const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n      if (ticketIndex !== -1) {\n        state[ticketIndex] = ticket;\n        if (ticket.unreadMessages > 0) {\n          state.unshift(state.splice(ticketIndex, 1)[0]);\n        }\n      } else {\n        state.push(ticket);\n      }\n    });\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET_UNREAD\") {\n    const ticketId = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].unreadMessages = 0;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_TAGS\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex(t => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].tags = ticket.tags;\n    }\n\n    return [...state];\n  }\n\n\n  if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n      state.unshift(state.splice(ticketIndex, 1)[0]);\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_CONTACT\") {\n    const contact = action.payload;\n    const ticketIndex = state.findIndex((t) => t.contactId === contact.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].contact = contact;\n    }\n    return [...state];\n  }\n\n  if (action.type === \"DELETE_TICKET\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state.splice(ticketIndex, 1);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst TicketsListCustom = (props) => {\n  const {\n    status,\n    searchParam,\n    tags,\n    users,\n    showAll,\n    selectedQueueIds,\n    updateCount,\n    style,\n  } = props;\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [ticketsList, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [status, searchParam, dispatch, showAll, tags, users, selectedQueueIds]);\n\n  const { tickets, hasMore, loading } = useTickets({\n    pageNumber,\n    searchParam,\n    status,\n    showAll,\n    tags: JSON.stringify(tags),\n    users: JSON.stringify(users),\n    queueIds: JSON.stringify(selectedQueueIds),\n  });\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n    } else {\n      dispatch({ type: \"LOAD_TICKETS\", payload: tickets });\n    }\n  }, [tickets, status, searchParam, queues, profile]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const shouldUpdateTicket = (ticket) =>\n      (!ticket.userId || ticket.userId === user?.id || showAll) &&\n      (!ticket.queueId || selectedQueueIds.indexOf(ticket.queueId) > -1);\n\n    const notBelongsToUserQueues = (ticket) =>\n      ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n\n    socket.on(\"connect\", () => {\n      if (status) {\n        socket.emit(\"joinTickets\", status);\n      } else {\n        socket.emit(\"joinNotification\");\n      }\n    });\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n\n      if (data.action === \"updateUnread\") {\n        dispatch({\n          type: \"RESET_UNREAD\",\n          payload: data.ticketId,\n        });\n      }\n\n      if (data.action === \"update\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET\",\n          payload: data.ticket,\n        });\n      }\n\n      if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticket.id });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticketId });\n      }\n\n      if (data.action === \"tagUpdate\") {\n\n        console.log(\"tagUpdate\", data.ticket);\n\n        dispatch({\n          type: \"UPDATE_TICKET_TAGS\",\n          payload: data.ticket,\n        });\n\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      const queueIds = queues.map((q) => q.id);\n      if (\n        profile === \"user\" &&\n        (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n          data.ticket.queue === null)\n      ) {\n        return;\n      }\n\n      if (data.action === \"create\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n          payload: data.ticket,\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_TICKET_CONTACT\",\n          payload: data.contact,\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues]);\n\n  useEffect(() => {\n    const count = ticketsList.filter(ticket => !ticket.isGroup).length;\n    if (typeof updateCount === \"function\") {\n      updateCount(count);\n    }\n  }, [ticketsList, updateCount]);\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.ticketsListWrapper} style={style}>\n      <Paper\n        square\n        name=\"closed\"\n        elevation={0}\n        className={classes.ticketsList}\n        onScroll={handleScroll}\n      >\n        <List style={{ paddingTop: 0 }}>\n          {ticketsList.length === 0 && !loading ? (\n            <div className={classes.noTicketsDiv}>\n              <span className={classes.noTicketsTitle}>\n                {i18n.t(\"ticketsList.noTicketsTitle\")}\n              </span>\n              <p className={classes.noTicketsText}>\n                {i18n.t(\"ticketsList.noTicketsMessage\")}\n              </p>\n            </div>\n          ) : (\n            <>\n              {ticketsList\n                .filter(ticket => ticket.isGroup.toString() === \"false\")\n                .map(ticket => (\n                  <TicketListItem ticket={ticket} key={ticket.id} />\n                ))}\n            </>\n          )}\n          {loading && <TicketsListSkeleton />}\n        </List>\n      </Paper>\n    </Paper>\n  );\n};\n\nexport default TicketsListCustom;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\n\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsListWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  ticketsList: {\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  ticketsListHeader: {\n    color: \"rgb(67, 83, 105)\",\n    zIndex: 2,\n    backgroundColor: \"white\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  ticketsCount: {\n    fontWeight: \"normal\",\n    color: \"rgb(104, 121, 146)\",\n    marginLeft: \"8px\",\n    fontSize: \"14px\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TICKETS\") {\n    const newTickets = action.payload;\n\n    newTickets.forEach((ticket) => {\n      const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n      if (ticketIndex !== -1) {\n        state[ticketIndex] = ticket;\n        if (ticket.unreadMessages > 0) {\n          state.unshift(state.splice(ticketIndex, 1)[0]);\n        }\n      } else {\n        state.push(ticket);\n      }\n    });\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET_UNREAD\") {\n    const ticketId = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].unreadMessages = 0;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n      state.unshift(state.splice(ticketIndex, 1)[0]);\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_CONTACT\") {\n    const contact = action.payload;\n    const ticketIndex = state.findIndex((t) => t.contactId === contact.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].contact = contact;\n    }\n    return [...state];\n  }\n\n  if (action.type === \"DELETE_TICKET\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state.splice(ticketIndex, 1);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst TicketsListCustom = (props) => {\n  const {\n    status,\n    searchParam,\n    tags,\n    users,\n    showAll,\n    selectedQueueIds,\n    updateCount,\n    style,\n  } = props;\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [ticketsList, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [status, searchParam, dispatch, showAll, tags, users, selectedQueueIds]);\n\n  const { tickets, hasMore, loading } = useTickets({\n    pageNumber,\n    searchParam,\n    status,\n    showAll,\n    tags: JSON.stringify(tags),\n    users: JSON.stringify(users),\n    queueIds: JSON.stringify(selectedQueueIds),\n  });\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n    } else {\n      dispatch({ type: \"LOAD_TICKETS\", payload: tickets });\n    }\n  }, [tickets, status, searchParam, queues, profile]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const shouldUpdateTicket = (ticket) =>\n      (!ticket.userId || ticket.userId === user?.id || showAll) &&\n      (!ticket.queueId || selectedQueueIds.indexOf(ticket.queueId) > -1);\n\n    const notBelongsToUserQueues = (ticket) =>\n      ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n\n    socket.on(\"connect\", () => {\n      if (status) {\n        socket.emit(\"joinTickets\", status);\n      } else {\n        socket.emit(\"joinNotification\");\n      }\n    });\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"updateUnread\") {\n        dispatch({\n          type: \"RESET_UNREAD\",\n          payload: data.ticketId,\n        });\n      }\n\n      if (data.action === \"update\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET\",\n          payload: data.ticket,\n        });\n      }\n\n      if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticket.id });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticketId });\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      const queueIds = queues.map((q) => q.id);\n      if (\n        profile === \"user\" &&\n        (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n          data.ticket.queue === null)\n      ) {\n        return;\n      }\n\n      if (data.action === \"create\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n          payload: data.ticket,\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_TICKET_CONTACT\",\n          payload: data.contact,\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues]);\n\n  useEffect(() => {\n    const count = ticketsList.filter(ticket => ticket.isGroup).length;\n    if (typeof updateCount === \"function\") {\n      updateCount(count);\n    }\n  }, [ticketsList, updateCount]);\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.ticketsListWrapper} style={style}>\n      <Paper\n        square\n        name=\"closed\"\n        elevation={0}\n        className={classes.ticketsList}\n        onScroll={handleScroll}\n      >\n        <List style={{ paddingTop: 0 }}>\n          {ticketsList.length === 0 && !loading ? (\n            <div className={classes.noTicketsDiv}>\n              <span className={classes.noTicketsTitle}>\n                {i18n.t(\"ticketsList.noTicketsTitle\")}\n              </span>\n              <p className={classes.noTicketsText}>\n                {i18n.t(\"ticketsList.noTicketsMessage\")}\n              </p>\n            </div>\n          ) : (\n            <>\n              {ticketsList\n                .filter(ticket => ticket.isGroup.toString() === \"true\")\n                .map(ticket => (\n                    <TicketListItem ticket={ticket} key={ticket.id} />\n              ))}\n            </>\n          )}\n          {loading && <TicketsListSkeleton />}\n        </List>\n      </Paper>\n    </Paper>\n  );\n};\n\nexport default TicketsListCustom;\n","import React from \"react\";\n\nconst TabPanel = ({ children, value, name, ...rest }) => {\n\tif (value === name) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\trole=\"tabpanel\"\n\t\t\t\tid={`simple-tabpanel-${name}`}\n\t\t\t\taria-labelledby={`simple-tab-${name}`}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t<>{children}</>\n\t\t\t</div>\n\t\t);\n\t} else return null;\n};\n\nexport default TabPanel;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemText } from \"@material-ui/core\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst TicketsQueueSelect = ({\n\tuserQueues,\n\tselectedQueueIds = [],\n\tonChange,\n}) => {\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div style={{ width: 120, marginTop: -4 }}>\n\t\t\t<FormControl fullWidth margin=\"dense\">\n\t\t\t\t<Select\n\t\t\t\t\tmultiple\n\t\t\t\t\tdisplayEmpty\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\t\t\t\t\trenderValue={() => i18n.t(\"ticketsQueueSelect.placeholder\")}\n\t\t\t\t>\n\t\t\t\t\t{userQueues?.length > 0 &&\n\t\t\t\t\t\tuserQueues.map(queue => (\n\t\t\t\t\t\t\t<MenuItem dense key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: queue.color,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tchecked={selectedQueueIds.indexOf(queue.id) > -1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ListItemText primary={queue.name} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default TicketsQueueSelect;\n","import { Box, Chip, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsFilter({ onFiltered }) {\n  const [tags, setTags] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadTags();\n    }\n    fetchData();\n  }, []);\n\n  const loadTags = async () => {\n    try {\n      const { data } = await api.get(`/tags/list`);\n      setTags(data);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const onChange = async (value) => {\n    setSelecteds(value);\n    onFiltered(value);\n  };\n\n  return (\n    <Box style={{ padding: 10 }}>\n      <Autocomplete\n        multiple\n        size=\"small\"\n        options={tags}\n        value={selecteds}\n        onChange={(e, v, r) => onChange(v)}\n        getOptionLabel={(option) => option.name}\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              style={{\n                backgroundColor: option.color || \"#eee\",\n                textShadow: \"1px 1px 1px #000\",\n                color: \"white\",\n              }}\n              label={option.name}\n              {...getTagProps({ index })}\n              size=\"small\"\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            placeholder=\"Filtro por Tags\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n","import { Box, Chip, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function UsersFilter({ onFiltered, initialUsers }) {\n  const [users, setUsers] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadUsers();\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelecteds([]);\n    if (\n      Array.isArray(initialUsers) &&\n      Array.isArray(users) &&\n      users.length > 0\n    ) {\n      onChange(initialUsers);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialUsers, users]);\n\n  const loadUsers = async () => {\n    try {\n      const { data } = await api.get(`/users/list`);\n      const userList = data.map((u) => ({ id: u.id, name: u.name }));\n      setUsers(userList);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const onChange = async (value) => {\n    setSelecteds(value);\n    onFiltered(value);\n  };\n\n  return (\n    <Box style={{ padding: \"0px 10px 10px\" }}>\n      <Autocomplete\n        multiple\n        size=\"small\"\n        options={users}\n        value={selecteds}\n        onChange={(e, v, r) => onChange(v)}\n        getOptionLabel={(option) => option.name}\n        getOptionSelected={(option, value) => {\n          return (\n            option?.id === value?.id ||\n            option?.name.toLowerCase() === value?.name.toLowerCase()\n          );\n        }}\n        renderTags={(value, getUserProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              style={{\n                backgroundColor: \"#bfbfbf\",\n                textShadow: \"1px 1px 1px #000\",\n                color: \"white\",\n              }}\n              label={option.name}\n              {...getUserProps({ index })}\n              size=\"small\"\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            placeholder=\"Filtro por Users\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Badge from \"@material-ui/core/Badge\";\n// import MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\"; \nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport GroupIcon from \"@material-ui/icons/Group\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport NewTicketModal from \"../NewTicketModal\";\nimport TicketsList from \"../TicketsListCustom\";\nimport TicketsListGroup from \"../TicketsListGroup\";\n\nimport TabPanel from \"../TabPanel\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\nimport TicketsQueueSelect from \"../TicketsQueueSelect\";\nimport { Button } from \"@material-ui/core\";\nimport { TagsFilter } from \"../TagsFilter\";\nimport { UsersFilter } from \"../UsersFilter\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  tabsHeader: {\n    flex: \"none\",\n    backgroundColor: theme.palette.tabHeaderBackground,\n  },\n\n  settingsIcon: {\n    alignSelf: \"center\",\n    marginLeft: \"auto\",\n    padding: 8,\n  },\n\n  tab: {\n    minWidth: 60,\n    width: 60,\n  },\n\n  ticketOptionsBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    background: theme.palette.optionsBackground,\n    padding: theme.spacing(1),\n  },\n\n  serachInputWrapper: {\n    flex: 1,\n    background: theme.palette.total,\n    display: \"flex\",\n    borderRadius: 40,\n    padding: 4,\n    marginRight: theme.spacing(1),\n  },\n\n  searchIcon: {\n    color: \"grey\",\n    marginLeft: 6,\n    marginRight: 6,\n    alignSelf: \"center\",\n  },\n\n  searchInput: {\n    flex: 1,\n    border: \"none\",\n    borderRadius: 30,\n  },\n\n  badge: {\n    right: \"-10px\",\n  },\n  show: {\n    display: \"block\",\n  },\n  hide: {\n    display: \"none !important\",\n  },\n}));\n\nconst TicketsManagerTabs = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [tab, setTab] = useState(\"open\");\n  const [tabOpen, setTabOpen] = useState(\"open\");\n  const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n  const [showAllTickets, setShowAllTickets] = useState(false);\n  const searchInputRef = useRef();\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  const [openCount, setOpenCount] = useState(0);\n  const [pendingCount, setPendingCount] = useState(0);\n\n  const userQueueIds = user.queues.map((q) => q.id);\n  const [selectedQueueIds, setSelectedQueueIds] = useState(userQueueIds || []);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  useEffect(() => {\n    if (user.profile.toUpperCase() === \"ADMIN\") {\n      setShowAllTickets(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (tab === \"search\") {\n      searchInputRef.current.focus();\n    }\n  }, [tab]);\n\n  let searchTimeout;\n\n  const handleSearch = (e) => {\n    const searchedTerm = e.target.value.toLowerCase();\n\n    clearTimeout(searchTimeout);\n\n    if (searchedTerm === \"\") {\n      setSearchParam(searchedTerm);\n      setTab(\"open\");\n      return;\n    }\n\n    searchTimeout = setTimeout(() => {\n      setSearchParam(searchedTerm);\n    }, 500);\n  };\n\n  const handleChangeTab = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  const handleChangeTabOpen = (e, newValue) => {\n    setTabOpen(newValue);\n  };\n\n  const applyPanelStyle = (status) => {\n    if (tabOpen !== status) {\n      return { width: 0, height: 0 };\n    }\n  };\n\n  const handleCloseOrOpenTicket = (ticket) => {\n    setNewTicketModalOpen(false);\n    if (ticket !== undefined && ticket.uuid !== undefined) {\n      history.push(`/tickets/${ticket.uuid}`);\n    }\n  };\n\n  const handleSelectedTags = (selecteds) => {\n    const tags = selecteds.map((t) => t.id);\n    setSelectedTags(tags);\n  };\n\n  const handleSelectedUsers = (selecteds) => {\n    const users = selecteds.map((t) => t.id);\n    setSelectedUsers(users);\n  };\n\n  return (\n    <Paper elevation={0} variant=\"outlined\" className={classes.ticketsWrapper}>\n      <NewTicketModal\n        modalOpen={newTicketModalOpen}\n        onClose={(ticket) => {\n          console.log(\"ticket\", ticket);\n          handleCloseOrOpenTicket(ticket);\n        }}\n      />\n      <Paper elevation={0} square className={classes.tabsHeader}>\n        <Tabs\n          value={tab}\n          onChange={handleChangeTab}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon label tabs example\"\n        >\n          <Tab\n            value={\"open\"}\n            icon={<WhatsAppIcon />}            \n            classes={{ root: classes.tab }}\n          />\n\t\t  <Tab\n            value={\"group\"}\n            icon={<GroupIcon />}          \n            classes={{ root: classes.tab }}\n          />\n          <Tab\n            value={\"closed\"}\n            icon={<CheckBoxIcon />}          \n            classes={{ root: classes.tab }}\n          />\n          <Tab\n            value={\"search\"}\n            icon={<SearchIcon />}          \n            classes={{ root: classes.tab }}\n          />\n        </Tabs>\n      </Paper>\n      <Paper square elevation={0} className={classes.ticketOptionsBox}>\n        {tab === \"search\" ? (\n          <div className={classes.serachInputWrapper}>\n            <SearchIcon className={classes.searchIcon} />\n            <InputBase\n              className={classes.searchInput}\n              inputRef={searchInputRef}\n              placeholder={i18n.t(\"tickets.search.placeholder\")}\n              type=\"search\"\n              onChange={handleSearch}\n            />\n          </div>\n        ) : (\n          <>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setNewTicketModalOpen(true)}\n            >\n              {i18n.t(\"ticketsManager.buttons.newTicket\")}\n            </Button>\n            <Can\n              role={user.profile}\n              perform=\"tickets-manager:showall\"\n              yes={() => (\n                <FormControlLabel\n                  label={i18n.t(\"tickets.buttons.showAll\")}\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"small\"\n                      checked={showAllTickets}\n                      onChange={() =>\n                        setShowAllTickets((prevState) => !prevState)\n                      }\n                      name=\"showAllTickets\"\n                      color=\"primary\"\n                    />\n                  }\n                />\n              )}\n            />\n          </>\n        )}\n        <TicketsQueueSelect\n          style={{ marginLeft: 6 }}\n          selectedQueueIds={selectedQueueIds}\n          userQueues={user?.queues}\n          onChange={(values) => setSelectedQueueIds(values)}\n        />\n      </Paper>\n      <TabPanel value={tab} name=\"open\" className={classes.ticketsWrapper}>\n        <Tabs\n          value={tabOpen}\n          onChange={handleChangeTabOpen}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={openCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.assignedHeader\")}\n              </Badge>\n            }\n            value={\"open\"}\n          />\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={pendingCount}\n                color=\"secondary\"\n              >\n                {i18n.t(\"ticketsList.pendingHeader\")}\n              </Badge>\n            }\n            value={\"pending\"}\n          />\n        </Tabs>\n        <Paper className={classes.ticketsWrapper}>\n          <TicketsList\n            status=\"open\"\n            showAll={showAllTickets}\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setOpenCount(val)}\n            style={applyPanelStyle(\"open\")}\n          />\n          <TicketsList\n            status=\"pending\"\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setPendingCount(val)}\n            style={applyPanelStyle(\"pending\")}\n          />\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tab} name=\"group\" className={classes.ticketsWrapper}>\n        <Tabs\n          value={tabOpen}\n          onChange={handleChangeTabOpen}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={openCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.assignedHeader\")}\n              </Badge>\n            }\n            value={\"open\"}\n          />\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={pendingCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.pendingHeader\")}\n              </Badge>\n            }\n            value={\"pending\"}\n          />\n        </Tabs>\n        <Paper className={classes.ticketsWrapper}>\n          <TicketsListGroup\n            status=\"open\"\n            showAll={showAllTickets}\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setOpenCount(val)}\n            style={applyPanelStyle(\"open\")}\n          />\n          <TicketsListGroup\n            status=\"pending\"\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setPendingCount(val)}\n            style={applyPanelStyle(\"pending\")}\n          />\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tab} name=\"closed\" className={classes.ticketsWrapper}>\n        <TicketsList\n          status=\"closed\"\n          showAll={true}\n          selectedQueueIds={selectedQueueIds}\n        />\n        <TicketsListGroup\n          status=\"closed\"\n          showAll={true}\n          selectedQueueIds={selectedQueueIds}\n        />\n      </TabPanel>\n      <TabPanel value={tab} name=\"search\" className={classes.ticketsWrapper}>\n        <TagsFilter onFiltered={handleSelectedTags} />\n        {profile === \"admin\" && (\n          <UsersFilter onFiltered={handleSelectedUsers} />\n        )}\n        <TicketsList\n          searchParam={searchParam}\n          showAll={true}\n          tags={selectedTags}\n          users={selectedUsers}\n          selectedQueueIds={selectedQueueIds}\n        />\n      </TabPanel>\n    </Paper>\n  );\n};\n\nexport default TicketsManagerTabs;\n","import React from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { i18n } from \"../../translate/i18n\";\nimport { Grid } from \"@material-ui/core\";\n\nconst ContactDrawerSkeleton = ({ classes }) => {\n\treturn (\n\t\t<div className={classes.content}>\n\t\t\t<Paper square variant=\"outlined\" className={classes.contactHeader}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\tvariant=\"circle\"\n\t\t\t\t\t\t\twidth={60}\n\t\t\t\t\t\t\theight={60}\n\t\t\t\t\t\t\tclassName={classes.contactAvatar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={90} />\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={80} />\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={80} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t\t<Paper square className={classes.contactDetails}>\n\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t{i18n.t(\"contactDrawer.extraInfo\")}\n\t\t\t\t</Typography>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n\nexport default ContactDrawerSkeleton;\n","import React, { useState, useEffect } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\ttextField: {\n\t\tmarginRight: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\n\textraAttr: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\n    textCenter: {\n        backgroundColor: 'red'\n    }\n}));\n\nconst ContactSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tnumber: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\"),\n});\n\nexport function ContactForm ({ initialContact, onSave, onCancel }) {\n\tconst classes = useStyles();\n\n\tconst [contact, setContact] = useState(initialContact);\n\n    useEffect(() => {\n        setContact(initialContact);\n    }, [initialContact]);\n\n\tconst handleSaveContact = async values => {\n\t\ttry {\n\t\t\tif (contact.id) {\n\t\t\t\tawait api.put(`/contacts/${contact.id}`, values);\n\t\t\t} else {\n\t\t\t\tconst { data } = await api.post(\"/contacts\", values);\n\t\t\t\tif (onSave) {\n\t\t\t\t\tonSave(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"contactModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n    return (\n        <Formik\n            initialValues={contact}\n            enableReinitialize={true}\n            validationSchema={ContactSchema}\n            onSubmit={(values, actions) => {\n                setTimeout(() => {\n                    handleSaveContact(values);\n                    actions.setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {({ values, errors, touched, isSubmitting }) => (\n                <Form>\n                    <Grid container spacing={1}>\n                        {/* <Grid item xs={12}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                {i18n.t(\"contactModal.form.mainInfo\")}\n                            </Typography>\n                        </Grid> */}\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.name\")}\n                                name=\"name\"\n                                autoFocus\n                                error={touched.name && Boolean(errors.name)}\n                                helperText={touched.name && errors.name}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                className={classes.textField}\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.number\")}\n                                name=\"number\"\n                                error={touched.number && Boolean(errors.number)}\n                                helperText={touched.number && errors.number}\n                                placeholder=\"5513912344321\"\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.email\")}\n                                name=\"email\"\n                                error={touched.email && Boolean(errors.email)}\n                                helperText={touched.email && errors.email}\n                                placeholder=\"Email address\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} spacing={1}>\n                            <Grid container spacing={1}>\n                                <Grid xs={6} item>\n                                    <Button\n                                        onClick={onCancel}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    >\n                                        {i18n.t(\"contactModal.buttons.cancel\")}\n                                    </Button>\n                                </Grid>\n                                <Grid classes={classes.textCenter} xs={6} item>\n                                    <Button\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        className={classes.btnWrapper}\n                                        fullWidth\n                                    >\n                                        {contact.id\n                                            ? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n                                            : `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n                                        {isSubmitting && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n        width: '100%'\n    }\n}));\n\nexport default function ContactNotesDialogListItem (props) {\n    const { note, deleteItem } = props;\n    const classes = useStyles();\n\n    const handleDelete = (item) => {\n        deleteItem(item);\n    }\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt={note.user.name} src=\"/static/images/avatar/1.jpg\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {note.note}\n                        </Typography>\n                    </>\n                }\n                secondary={\n                    <>\n                        {note.user.name}, {moment(note.createdAt).format('DD/MM/YY HH:mm')}\n                    </>\n                }\n            />\n            <ListItemSecondaryAction>\n                <IconButton onClick={() => handleDelete(note)} edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    )   \n}\n\nContactNotesDialogListItem.propTypes = {\n    note: PropTypes.object.isRequired,\n    deleteItem: PropTypes.func.isRequired\n}","import api from \"../../services/api\";\n\nconst useTicketNotes = () => {\n\n    const saveNote = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/ticket-notes',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const deleteNote = async (id) => {\n        const { data } = await api.request({\n            url: `/ticket-notes/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const listNotes = async (params) => {\n        const { data } = await api.request({\n            url: '/ticket-notes/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        saveNote,\n        deleteNote,\n        listNotes\n    }\n}\n\nexport default useTicketNotes;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport ContactNotesDialogListItem from '../ContactNotesDialogListItem';\nimport ConfirmationModal from '../ConfirmationModal';\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport ButtonWithSpinner from '../ButtonWithSpinner';\n\nimport useTicketNotes from '../../hooks/useTicketNotes';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '350px',\n        },\n    },\n    list: {\n        width: '100%',\n        maxWidth: '350px',\n        maxHeight: '200px',\n        backgroundColor: theme.palette.background.paper,\n        overflow: 'auto'\n    },\n    inline: {\n        width: '100%'\n    }\n}));\n\nconst NoteSchema = Yup.object().shape({\n\tnote: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.required(\"Required\")\n});\nexport function ContactNotes ({ ticket }) {\n    const { id: ticketId, contactId } = ticket\n    const classes = useStyles()\n    const [newNote, setNewNote] = useState({ note: \"\" });\n    const [loading, setLoading] = useState(false)\n    const [showOnDeleteDialog, setShowOnDeleteDialog] = useState(false)\n    const [selectedNote, setSelectedNote] = useState({})\n    const [notes, setNotes] = useState([])\n    const { saveNote, deleteNote, listNotes } = useTicketNotes()\n\n    useEffect(() => {\n        async function openAndFetchData () {\n            handleResetState()\n            await loadNotes()\n        }\n        openAndFetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleResetState = () => {\n        setNewNote({ note: \"\" })\n        setLoading(false)\n    }\n\n    const handleChangeComment = (e) => {\n        setNewNote({ note: e.target.value })\n    }\n\n    const handleSave = async values => {\n        setLoading(true)\n        try {\n            await saveNote({\n                ...values,\n                ticketId,\n                contactId\n            })\n            await loadNotes()\n            setNewNote({ note: '' })\n            toast.success('Observação adicionada com sucesso!')\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDialogDelete = (item) => {\n        setSelectedNote(item)\n        setShowOnDeleteDialog(true)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await deleteNote(selectedNote.id)\n            await loadNotes()\n            setSelectedNote({})\n            toast.success('Observação excluída com sucesso!')\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const loadNotes = async () => {\n        setLoading(true)\n        try {\n            const notes = await listNotes({ ticketId, contactId })\n            setNotes(notes)\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const renderNoteList = () => {\n        return notes.map((note) => {\n            return <ContactNotesDialogListItem\n                note={note}\n                key={note.id}\n                deleteItem={handleOpenDialogDelete}\n            />\n        })\n    }\n\n    return (\n        <>\n            <ConfirmationModal\n                title=\"Excluir Registro\"\n                open={showOnDeleteDialog}\n                onClose={setShowOnDeleteDialog}\n                onConfirm={handleDelete}\n            >\n                Deseja realmente excluir este registro?\n            </ConfirmationModal>\n            <Formik\n                initialValues={newNote}\n                enableReinitialize={true}\n                validationSchema={NoteSchema}\n                onSubmit={(values, actions) => {\n                    setTimeout(() => {\n                        handleSave(values);\n                        actions.setSubmitting(false);\n                    }, 400);\n                }}\n            >\n\n                {({ touched, errors, setErrors }) => (\n                    <Form>\n                        <Grid container spacing={2}>\n                            <Grid xs={12} item>\n                                <Field\n                                    as={TextField}\n                                    name=\"note\"\n                                    rows={3}\n                                    label={i18n.t(\"ticketOptionsMenu.appointmentsModal.textarea\")}\n                                    placeholder={i18n.t(\"ticketOptionsMenu.appointmentsModal.placeholder\")}\n                                    multiline={true}\n                                    error={touched.note && Boolean(errors.note)}\n                                    helperText={touched.note && errors.note}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeComment}\n                                    fullWidth\n                                />\n                            </Grid>\n                            { notes.length > 0 && (\n                                <Grid xs={12} item>\n                                    <List className={classes.list}>\n                                        { renderNoteList() }\n                                    </List>\n                                </Grid>\n                            ) }\n                            <Grid xs={12} item>\n                                <Grid container spacing={2}>\n                                    <Grid xs={6} item>\n                                        <Button\n                                            onClick={() => {\n                                                setNewNote(\"\");\n                                                setErrors({});\n                                            }}\n                                            color=\"primary\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            Cancelar\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={6} item>\n                                        <ButtonWithSpinner loading={loading} color=\"primary\" type=\"submit\" variant=\"contained\" autoFocus fullWidth>\n                                            Salvar\n                                        </ButtonWithSpinner>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Link from \"@material-ui/core/Link\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport ContactDrawerSkeleton from \"../ContactDrawerSkeleton\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { CardHeader } from \"@material-ui/core\";\nimport { ContactForm } from \"../ContactForm\";\nimport ContactModal from \"../ContactModal\";\nimport { ContactNotes } from \"../ContactNotes\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles(theme => ({\n\tdrawer: {\n\t\twidth: drawerWidth,\n\t\tflexShrink: 0,\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t\tdisplay: \"flex\",\n\t\tborderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderRight: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderTopRightRadius: 4,\n\t\tborderBottomRightRadius: 4,\n\t},\n\theader: {\n\t\tdisplay: \"flex\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tbackground: theme.palette.total,\n\t\talignItems: \"center\",\n\t\tpadding: theme.spacing(0, 1),\n\t\tminHeight: \"73px\",\n\t\tjustifyContent: \"flex-start\",\n\t},\n\tcontent: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflexDirection: \"column\",\n\t\tpadding: \"8px 0px 8px 8px\",\n\t\theight: \"100%\",\n\t\toverflowY: \"scroll\",\n\t\t...theme.scrollbarStyles,\n\t},\n\n\tcontactAvatar: {\n\t\tmargin: 15,\n\t\twidth: 100,\n\t\theight: 100,\n\t},\n\n\tcontactHeader: {\n\t\tdisplay: \"flex\",\n\t\tpadding: 8,\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\t\"& > *\": {\n\t\t\tmargin: 4,\n\t\t},\n\t},\n\n\tcontactDetails: {\n\t\tmarginTop: 8,\n\t\tpadding: 8,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n\tcontactExtraInfo: {\n\t\tmarginTop: 4,\n\t\tpadding: 6,\n\t},\n}));\n\nconst ContactDrawer = ({ open, handleDrawerClose, contact, ticket, loading }) => {\n\tconst classes = useStyles();\n\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [openForm, setOpenForm] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetOpenForm(false);\n\t}, [open, contact]);\n\n\treturn (\n\t\t<>\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"persistent\"\n\t\t\t\tanchor=\"right\"\n\t\t\t\topen={open}\n\t\t\t\tPaperProps={{ style: { position: \"absolute\" } }}\n\t\t\t\tBackdropProps={{ style: { position: \"absolute\" } }}\n\t\t\t\tModalProps={{\n\t\t\t\t\tcontainer: document.getElementById(\"drawer-container\"),\n\t\t\t\t\tstyle: { position: \"absolute\" },\n\t\t\t\t}}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.header}>\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography style={{ justifySelf: \"center\" }}>\n\t\t\t\t\t\t{i18n.t(\"contactDrawer.header\")}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<ContactDrawerSkeleton classes={classes} />\n\t\t\t\t) : (\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactHeader}>\n\t\t\t\t\t\t\t<CardHeader\n\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\", width: '100%' }}\n\t\t\t\t\t\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\t\t\t\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\t\t\t\t\t\tavatar={<Avatar src={contact.profilePicUrl} alt=\"contact_image\" style={{ width: 60, height: 60 }} />}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography onClick={() => setOpenForm(true)}>\n\t\t\t\t\t\t\t\t\t\t\t{contact.name}\n\t\t\t\t\t\t\t\t\t\t\t<CreateIcon style={{fontSize: 16, marginLeft: 5}} />\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{fontSize: 12}}>\n\t\t\t\t\t\t\t\t\t\t\t<Link href={`tel:${contact.number}`}>{contact.number}</Link>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{fontSize: 12}}>\n\t\t\t\t\t\t\t\t\t\t\t<Link href={`mailto:${contact.email}`}>{contact.email}</Link>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => setModalOpen(!openForm)}\n\t\t\t\t\t\t\t\tstyle={{fontSize: 12}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"contactDrawer.buttons.edit\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{(contact.id && openForm) && <ContactForm initialContact={contact} onCancel={() => setOpenForm(false)} />}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactDetails}>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" style={{marginBottom: 10}}>\n\t\t\t\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.appointmentsModal.title\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ContactNotes ticket={ticket} />\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactDetails}>\n\t\t\t\t\t\t\t<ContactModal\n\t\t\t\t\t\t\t\topen={modalOpen}\n\t\t\t\t\t\t\t\tonClose={() => setModalOpen(false)}\n\t\t\t\t\t\t\t\tcontactId={contact.id}\n\t\t\t\t\t\t\t></ContactModal>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t{i18n.t(\"contactDrawer.extraInfo\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{contact?.extraInfo?.map(info => (\n\t\t\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\t\t\tkey={info.id}\n\t\t\t\t\t\t\t\t\tsquare\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tclassName={classes.contactExtraInfo}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InputLabel>{info.name}</InputLabel>\n\t\t\t\t\t\t\t\t\t<Typography component=\"div\" noWrap style={{ paddingTop: 2 }}>\n\t\t\t\t\t\t\t\t\t\t<MarkdownWrapper>{info.value}</MarkdownWrapper>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Drawer>\n\t\t</>\n\t);\n};\n\nexport default ContactDrawer;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\ttimerBox: {\n\t\tdisplay: \"flex\",\n\t\tmarginLeft: 10,\n\t\tmarginRight: 10,\n\t\talignItems: \"center\",\n\t},\n}));\n\nconst RecordingTimer = () => {\n\tconst classes = useStyles();\n\tconst initialState = {\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t};\n\tconst [timer, setTimer] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(\n\t\t\t() =>\n\t\t\t\tsetTimer(prevState => {\n\t\t\t\t\tif (prevState.seconds === 59) {\n\t\t\t\t\t\treturn { ...prevState, minutes: prevState.minutes + 1, seconds: 0 };\n\t\t\t\t\t}\n\t\t\t\t\treturn { ...prevState, seconds: prevState.seconds + 1 };\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, []);\n\n\tconst addZero = n => {\n\t\treturn n < 10 ? \"0\" + n : n;\n\t};\n\n\treturn (\n\t\t<div className={classes.timerBox}>\n\t\t\t<span>{`${addZero(timer.minutes)}:${addZero(timer.seconds)}`}</span>\n\t\t</div>\n\t);\n};\n\nexport default RecordingTimer;\n","import api from \"../../services/api\";\n\nconst useQuickMessages = () => {\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/quick-messages',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/quick-messages/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const deleteRecord = async (id) => {\n        const { data } = await api.request({\n            url: `/quick-messages/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/quick-messages/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        save,\n        update,\n        deleteRecord,\n        list\n    }\n}\n\nexport default useQuickMessages;","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoodIcon from \"@material-ui/icons/Mood\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { isString, isEmpty, isObject, has } from \"lodash\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport RecordingTimer from \"./RecordingTimer\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport toastError from \"../../errors/toastError\";\n\nimport useQuickMessages from \"../../hooks/useQuickMessages\";\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    background: theme.palette.tabHeaderBackground,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  newMessageBox: {\n    background: theme.palette.tabHeaderBackground,\n    width: \"100%\",\n    display: \"flex\",\n    padding: \"7px\",\n    alignItems: \"center\",\n  },\n\n  messageInputWrapper: {\n    padding: 6,\n    marginRight: 7,\n    background: theme.palette.total,\n    display: \"flex\",\n    borderRadius: 20,\n    flex: 1,\n  },\n\n  messageInput: {\n    paddingLeft: 10,\n    flex: 1,\n    border: \"none\",\n  },\n\n  sendMessageIcons: {\n    color: \"grey\",\n  },\n\n  uploadInput: {\n    display: \"none\",\n  },\n\n  viewMediaInputWrapper: {\n    display: \"flex\",\n    padding: \"10px 13px\",\n    position: \"relative\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  emojiBox: {\n    position: \"absolute\",\n    bottom: 63,\n    width: 40,\n    borderTop: \"1px solid #e8e8e8\",\n  },\n\n  circleLoading: {\n    color: green[500],\n    opacity: \"70%\",\n    position: \"absolute\",\n    top: \"20%\",\n    left: \"50%\",\n    marginLeft: -12,\n  },\n\n  audioLoading: {\n    color: green[500],\n    opacity: \"70%\",\n  },\n\n  recorderWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"middle\",\n  },\n\n  cancelAudioIcon: {\n    color: \"red\",\n  },\n\n  sendAudioIcon: {\n    color: \"green\",\n  },\n\n  replyginMsgWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 8,\n    paddingLeft: 73,\n    paddingRight: 7,\n  },\n\n  replyginMsgContainer: {\n    flex: 1,\n    marginRight: 5,\n    overflowY: \"hidden\",\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  replyginMsgBody: {\n    padding: 10,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  replyginContactMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  replyginSelfMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n}));\n\nconst EmojiOptions = (props) => {\n  const { disabled, showEmoji, setShowEmoji, handleAddEmoji } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <IconButton\n        aria-label=\"emojiPicker\"\n        component=\"span\"\n        disabled={disabled}\n        onClick={(e) => setShowEmoji((prevState) => !prevState)}\n      >\n        <MoodIcon className={classes.sendMessageIcons} />\n      </IconButton>\n      {showEmoji ? (\n        <div className={classes.emojiBox}>\n          <Picker\n            perLine={16}\n            showPreview={false}\n            showSkinTones={false}\n            onSelect={handleAddEmoji}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst SignSwitch = (props) => {\n  const { width, setSignMessage, signMessage } = props;\n  if (isWidthUp(\"md\", width)) {\n    return (\n      <FormControlLabel\n        style={{ marginRight: 7, color: \"gray\" }}\n        label={i18n.t(\"messagesInput.signMessage\")}\n        labelPlacement=\"start\"\n        control={\n          <Switch\n            size=\"small\"\n            checked={signMessage}\n            onChange={(e) => {\n              setSignMessage(e.target.checked);\n            }}\n            name=\"showAllTickets\"\n            color=\"primary\"\n          />\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst FileInput = (props) => {\n  const { handleChangeMedias, disableOption } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <input\n        multiple\n        type=\"file\"\n        id=\"upload-button\"\n        disabled={disableOption()}\n        className={classes.uploadInput}\n        onChange={handleChangeMedias}\n      />\n      <label htmlFor=\"upload-button\">\n        <IconButton\n          aria-label=\"upload\"\n          component=\"span\"\n          disabled={disableOption()}\n        >\n          <AttachFileIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </label>\n    </>\n  );\n};\n\nconst ActionButtons = (props) => {\n  const {\n    inputMessage,\n    loading,\n    recording,\n    ticketStatus,\n    handleSendMessage,\n    handleCancelAudio,\n    handleUploadAudio,\n    handleStartRecording,\n  } = props;\n  const classes = useStyles();\n  if (inputMessage) {\n    return (\n      <IconButton\n        aria-label=\"sendMessage\"\n        component=\"span\"\n        onClick={handleSendMessage}\n        disabled={loading}\n      >\n        <SendIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  } else if (recording) {\n    return (\n      <div className={classes.recorderWrapper}>\n        <IconButton\n          aria-label=\"cancelRecording\"\n          component=\"span\"\n          fontSize=\"large\"\n          disabled={loading}\n          onClick={handleCancelAudio}\n        >\n          <HighlightOffIcon className={classes.cancelAudioIcon} />\n        </IconButton>\n        {loading ? (\n          <div>\n            <CircularProgress className={classes.audioLoading} />\n          </div>\n        ) : (\n          <RecordingTimer />\n        )}\n\n        <IconButton\n          aria-label=\"sendRecordedAudio\"\n          component=\"span\"\n          onClick={handleUploadAudio}\n          disabled={loading}\n        >\n          <CheckCircleOutlineIcon className={classes.sendAudioIcon} />\n        </IconButton>\n      </div>\n    );\n  } else {\n    return (\n      <IconButton\n        aria-label=\"showRecorder\"\n        component=\"span\"\n        disabled={loading || ticketStatus !== \"open\"}\n        onClick={handleStartRecording}\n      >\n        <MicIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  }\n};\n\nconst CustomInput = (props) => {\n  const {\n    loading,\n    inputRef,\n    ticketStatus,\n    inputMessage,\n    setInputMessage,\n    handleSendMessage,\n    handleInputPaste,\n    disableOption,\n    setMedias,\n    setMediaUrl\n  } = props;\n  const classes = useStyles();\n  const [quickMessages, setQuickMessages] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n\n  const { user } = useContext(AuthContext);\n\n\n  const { list: listQuickMessages } = useQuickMessages();\n\n  useEffect(() => {\n    async function fetchData() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const messages = await listQuickMessages({ companyId, userId: user.id });\n\n      const options = messages.map((m) => {\n        let truncatedMessage = m.message;\n        if (isString(truncatedMessage) && truncatedMessage.length > 35) {\n          truncatedMessage = m.message.substring(0, 35) + \"...\";\n        }\n        return {\n          value: m.message,\n          label: `/${m.shortcode} - ${truncatedMessage}`,\n          mediaPath: m.mediaPath,\n        };\n      });\n      setQuickMessages(options);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      isString(inputMessage) &&\n      !isEmpty(inputMessage) &&\n      inputMessage.length > 1\n    ) {\n      const firstWord = inputMessage.charAt(0);\n      setPopupOpen(firstWord.indexOf(\"/\") > -1);\n\n      const filteredOptions = quickMessages.filter(\n        (m) => m.label.indexOf(inputMessage) > -1\n      );\n      setOptions(filteredOptions);\n    } else {\n      setPopupOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputMessage]);\n\n  const onKeyPress = (e) => {\n\n    if (loading || e.shiftKey) return;\n    else if (e.key === \"Enter\") {\n      const response = disableOption();\n      if (response) {\n        toastError(\"Não é possível enviar mensagens para o status atual do ticket.\");\n        setInputMessage(\"\");\n        return;\n      }\n\n      handleSendMessage();\n    }\n  };\n\n  const onPaste = (e) => {\n\n    if (ticketStatus === \"open\") {\n      handleInputPaste(e);\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (ticketStatus === \"open\") {\n      return i18n.t(\"messagesInput.placeholderOpen\");\n    }\n    return i18n.t(\"messagesInput.placeholderClosed\");\n  };\n\n  const setInputRef = (input) => {\n    if (input) {\n      input.focus();\n      inputRef.current = input;\n    }\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n\n    console.log('dropped')\n\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setMedias(droppedFiles);\n    event.dataTransfer.clearData();\n  };\n\n  const handleDragOver = (event) => {\n\n    console.log('drag over')\n\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  return (\n    <div className={classes.messageInputWrapper}>\n      <Autocomplete\n        style={{ color: '#000' }}\n        freeSolo\n        open={popupOpen}\n        id=\"grouped-demo\"\n        value={inputMessage}\n        options={options}\n        closeIcon={null}\n        getOptionLabel={(option) => {\n          if (isObject(option)) {\n            return option.label;\n          } else {\n            return option;\n          }\n        }}\n\n        onChange={(event, opt) => {\n          if (isObject(opt) && has(opt, \"value\")) {\n            setInputMessage(opt.value);\n            setMediaUrl(opt.mediaPath);\n\n            console.log(opt);\n\n            setTimeout(() => {\n              inputRef.current.scrollTop = inputRef.current.scrollHeight;\n            }, 200);\n          }\n        }}\n\n        onInputChange={(event, opt, reason) => {\n          if (reason === \"input\") {\n            setInputMessage(event.target.value);\n          }\n        }}\n\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n\n\n\n\n        onPaste={onPaste}\n        onKeyPress={onKeyPress}\n        style={{ width: \"100%\" }}\n        renderInput={(params) => {\n          const { InputLabelProps, InputProps, ...rest } = params;\n          return (\n            <InputBase\n              {...params.InputProps}\n              {...rest}\n              disabled={disableOption()}\n              inputRef={setInputRef}\n              placeholder={renderPlaceholder()}\n              multiline\n              draggable\n              className={classes.messageInput}\n              maxRows={5}\n            />\n          );\n        }}\n\n\n\n      />\n    </div>\n  );\n};\n\nconst MessageInputCustom = (props) => {\n\n  const { ticket: { status, id, isWorking, userId } } = props;\n  const classes = useStyles();\n\n\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const inputRef = useRef();\n  const { setReplyingMessage, replyingMessage, medias, setMedias } = useContext(ReplyMessageContext);\n\n  const { user } = useContext(AuthContext);\n\n  const [signMessage, setSignMessage] = useLocalStorage(\"signOption\", true);\n  const [mediaUrl, setMediaUrl] = useState(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [replyingMessage]);\n\n  useEffect(() => {\n    inputRef.current.focus();\n    return () => {\n      setInputMessage(\"\");\n      setShowEmoji(false);\n      setMedias([]);\n      setReplyingMessage(null);\n    };\n  }, [id, setReplyingMessage]);\n\n\n  const handleAddEmoji = (e) => {\n\n    if (!itsMe()) return;\n\n    let emoji = e.native;\n    setInputMessage((prevState) => prevState + emoji);\n  };\n\n  const handleChangeMedias = (e) => {\n\n\n    if (!e.target.files) {\n      return;\n    }\n\n    const selectedMedias = Array.from(e.target.files);\n    setMedias(selectedMedias);\n  };\n\n  const handleInputPaste = (e) => {\n\n    if (!itsMe()) return;\n\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n\n  const handleUploadMedia = async (e) => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"fromMe\", true);\n    medias.forEach((media) => {\n      formData.append(\"medias\", media);\n      formData.append(\"body\", media.name);\n    });\n\n    try {\n      await api.post(`/messages/${id}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setLoading(false);\n    setMedias([]);\n  };\n\n  const itsMe = () => {\n\n    if (user.id === userId || user.profile === 'admin') return true;\n\n    toastError(\"Esse ticket não está atribuído ao seu usuário.\");\n\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n\n    return false;\n\n  }\n\n  const handleSendMessage = async () => {\n\n    if (!itsMe()) return;\n\n    if (inputMessage.trim() === \"\") return;\n    setLoading(true);\n\n    const message = {\n      read: 1,\n      fromMe: true,\n      mediaUrl: mediaUrl,\n      body: signMessage\n        ? `*${user?.name}:*\\n${inputMessage.trim()}`\n        : inputMessage.trim(),\n      quotedMsg: replyingMessage,\n    };\n    try {\n      await api.post(`/messages/${id}`, message);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n    setMediaUrl(null);\n\n  };\n\n  const handleStartRecording = async () => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      await Mp3Recorder.start();\n      setRecording(true);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleUploadAudio = async () => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    try {\n      const [, blob] = await Mp3Recorder.stop().getMp3();\n      if (blob.size < 10000) {\n        setLoading(false);\n        setRecording(false);\n        return;\n      }\n\n      const formData = new FormData();\n      const filename = `audio-record-site-${new Date().getTime()}.mp3`;\n      formData.append(\"medias\", blob, filename);\n      formData.append(\"body\", filename);\n      formData.append(\"fromMe\", true);\n\n      await api.post(`/messages/${id}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setRecording(false);\n    setLoading(false);\n  };\n\n  const handleCancelAudio = async () => {\n    try {\n      await Mp3Recorder.stop().getMp3();\n      setRecording(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const disableOption = () => {\n    return loading || recording || status !== \"open\";\n  };\n\n  const renderReplyingMessage = (message) => {\n    return (\n      <div className={classes.replyginMsgWrapper}>\n        <div className={classes.replyginMsgContainer}>\n          <span\n            className={clsx(classes.replyginContactMsgSideColor, {\n              [classes.replyginSelfMsgSideColor]: !message.fromMe,\n            })}\n          ></span>\n          <div className={classes.replyginMsgBody}>\n            {!message.fromMe && (\n              <span className={classes.messageContactName}>\n                {message.contact?.name}\n              </span>\n            )}\n            {message.body}\n          </div>\n        </div>\n        <IconButton\n          aria-label=\"showRecorder\"\n          component=\"span\"\n          disabled={loading || status !== \"open\"}\n          onClick={() => setReplyingMessage(null)}\n        >\n          <ClearIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </div>\n    );\n  };\n\n  if (medias && medias.length > 0)\n    return (\n      <Paper elevation={0} square className={classes.viewMediaInputWrapper}>\n        <IconButton\n          aria-label=\"cancel-upload\"\n          component=\"span\"\n          onClick={(e) => setMedias([])}\n        >\n          <CancelIcon className={classes.sendMessageIcons} />\n        </IconButton>\n\n        {loading ? (\n          <div>\n            <CircularProgress className={classes.circleLoading} />\n          </div>\n        ) : (\n          <span>\n            {medias[0]?.name}\n            {/* <img src={media.preview} alt=\"\"></img> */}\n          </span>\n        )}\n        <IconButton\n          aria-label=\"send-upload\"\n          component=\"span\"\n          onClick={handleUploadMedia}\n          disabled={loading}\n        >\n          <SendIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </Paper>\n    );\n  else {\n    return (\n      <Paper square elevation={0} className={classes.mainWrapper}>\n        {replyingMessage && renderReplyingMessage(replyingMessage)}\n        <div className={classes.newMessageBox}>\n          <EmojiOptions\n            disabled={disableOption()}\n            handleAddEmoji={handleAddEmoji}\n            showEmoji={showEmoji}\n            setShowEmoji={setShowEmoji}\n          />\n\n          <FileInput\n            disableOption={disableOption}\n            handleChangeMedias={handleChangeMedias}\n          />\n          {user.profile === 'admin' && (\n\n            <SignSwitch\n              width={props.width}\n              setSignMessage={setSignMessage}\n              signMessage={signMessage}\n            />\n          )}\n\n          <CustomInput\n            loading={loading}\n            inputRef={inputRef}\n            ticketStatus={status}\n            inputMessage={inputMessage}\n            setInputMessage={setInputMessage}\n            // handleChangeInput={handleChangeInput}\n            handleSendMessage={handleSendMessage}\n            handleInputPaste={handleInputPaste}\n            disableOption={disableOption}\n            setMedias={setMedias}\n            setMediaUrl={setMediaUrl}\n          />\n\n          <ActionButtons\n            inputMessage={inputMessage}\n            loading={loading}\n            recording={recording}\n            ticketStatus={status}\n            handleSendMessage={handleSendMessage}\n            handleCancelAudio={handleCancelAudio}\n            handleUploadAudio={handleUploadAudio}\n            handleStartRecording={handleStartRecording}\n          />\n        </div>\n      </Paper>\n    );\n  }\n};\n\nexport default withWidth()(MessageInputCustom);\n","import { useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nexport function useLocalStorage(key, initialValue) {\n\tconst [storedValue, setStoredValue] = useState(() => {\n\t\ttry {\n\t\t\tconst item = localStorage.getItem(key);\n\t\t\treturn item ? JSON.parse(item) : initialValue;\n\t\t} catch (error) {\n\t\t\ttoastError(error);\n\t\t\treturn initialValue;\n\t\t}\n\t});\n\n\tconst setValue = value => {\n\t\ttry {\n\t\t\tconst valueToStore =\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\n\n\t\t\tsetStoredValue(valueToStore);\n\n\t\t\tlocalStorage.setItem(key, JSON.stringify(valueToStore));\n\t\t} catch (error) {\n\t\t\ttoastError(error);\n\t\t}\n\t};\n\n\treturn [storedValue, setValue];\n}\n","import api from \"../../services/api\";\n\nconst useQueues = () => {\n\tconst findAll = async () => {\n        const { data } = await api.get(\"/queue\");\n        return data;\n    }\n\n\treturn { findAll };\n};\n\nexport default useQueues;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport useQueues from \"../../hooks/useQueues\";\n\nconst useStyles = makeStyles((theme) => ({\n  maxWidth: {\n    width: \"100%\",\n  },\n}));\n\nconst filterOptions = createFilterOptions({\n  trim: true,\n});\n\nconst TransferTicketModalCustom = ({ modalOpen, onClose, ticketid }) => {\n  const history = useHistory();\n  const [options, setOptions] = useState([]);\n  const [queues, setQueues] = useState([]);\n  const [allQueues, setAllQueues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const classes = useStyles();\n  const { findAll: findAllQueues } = useQueues();\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loadQueues = async () => {\n        const list = await findAllQueues();\n        setAllQueues(list);\n        setQueues(list);\n      };\n      loadQueues();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    const delayDebounceFn = setTimeout(() => {\n      setLoading(true);\n      const fetchUsers = async () => {\n        try {\n          const { data } = await api.get(\"/users/\", {\n            params: { searchParam },\n          });\n          setOptions(data.users);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n\n      fetchUsers();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setSelectedUser(null);\n  };\n\n  const handleSaveTicket = async (e) => {\n    e.preventDefault();\n    if (!ticketid) return;\n    if (!selectedQueue || selectedQueue === \"\") return;\n    setLoading(true);\n    try {\n      let data = {};\n\n      if (selectedUser) {\n        data.userId = selectedUser.id;\n      }\n\n      if (selectedQueue && selectedQueue !== null) {\n        data.queueId = selectedQueue;\n\n        if (!selectedUser) {\n          data.status = \"pending\";\n          data.userId = null;\n        }\n      }\n\n      await api.put(`/tickets/${ticketid}`, data);\n\n      history.push(`/tickets`);\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n  };\n\n  return (\n    <Dialog open={modalOpen} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n      <form onSubmit={handleSaveTicket}>\n        <DialogTitle id=\"form-dialog-title\">\n          {i18n.t(\"transferTicketModal.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Autocomplete\n            style={{ width: 300, marginBottom: 20 }}\n            getOptionLabel={(option) => `${option.name}`}\n            onChange={(e, newValue) => {\n              setSelectedUser(newValue);\n              if (newValue != null && Array.isArray(newValue.queues)) {\n                setQueues(newValue.queues);\n              } else {\n                setQueues(allQueues);\n                setSelectedQueue(\"\");\n              }\n            }}\n            options={options}\n            filterOptions={filterOptions}\n            freeSolo\n            autoHighlight\n            noOptionsText={i18n.t(\"transferTicketModal.noOptions\")}\n            loading={loading}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label={i18n.t(\"transferTicketModal.fieldLabel\")}\n                variant=\"outlined\"\n                autoFocus\n                onChange={(e) => setSearchParam(e.target.value)}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n          <FormControl variant=\"outlined\" className={classes.maxWidth}>\n            <InputLabel>\n              {i18n.t(\"transferTicketModal.fieldQueueLabel\")}\n            </InputLabel>\n            <Select\n              value={selectedQueue}\n              onChange={(e) => setSelectedQueue(e.target.value)}\n              label={i18n.t(\"transferTicketModal.fieldQueuePlaceholder\")}\n            >\n              {queues.map((queue) => (\n                <MenuItem key={queue.id} value={queue.id}>\n                  {queue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={loading}\n            variant=\"outlined\"\n          >\n            {i18n.t(\"transferTicketModal.buttons.cancel\")}\n          </Button>\n          <ButtonWithSpinner\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            loading={loading}\n          >\n            {i18n.t(\"transferTicketModal.buttons.ok\")}\n          </ButtonWithSpinner>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TransferTicketModalCustom;","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { FormControl } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport moment from \"moment\"\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { isArray, capitalize } from \"lodash\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst ScheduleSchema = Yup.object().shape({\n\tbody: Yup.string()\n\t\t.min(5, \"Mensagem muito curta\")\n\t\t.required(\"Obrigatório\"),\n\tcontactId: Yup.number().required(\"Obrigatório\"),\n\tsendAt: Yup.string().required(\"Obrigatório\")\n});\n\nconst ScheduleModal = ({ open, onClose, scheduleId, contactId, cleanContact, reload }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { user } = useContext(AuthContext);\n\n\tconst initialState = {\n\t\tbody: \"\",\n\t\tcontactId: \"\",\n\t\tsendAt: moment().add(1, 'hour').format('YYYY-MM-DDTHH:mm'),\n\t\tsentAt: \"\"\n\t};\n\n\tconst initialContact = {\n\t\tid: \"\",\n\t\tname: \"\"\n\t}\n\n\tconst [schedule, setSchedule] = useState(initialState);\n\tconst [currentContact, setCurrentContact] = useState(initialContact);\n\tconst [contacts, setContacts] = useState([initialContact]);\n\n\tuseEffect(() => {\n\t\tif (contactId && contacts.length) {\n\t\t\tconst contact = contacts.find(c => c.id === contactId);\n\t\t\tif (contact) {\n\t\t\t\tsetCurrentContact(contact);\n\t\t\t}\n\t\t}\n\t}, [contactId, contacts]);\n\n\tuseEffect(() => {\n\t\tconst { companyId } = user;\n\t\tif (open) {\n\t\t\ttry {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { data: contactList } = await api.get('/contacts/list', { params: { companyId: companyId } });\n\t\t\t\t\tlet customList = contactList.map((c) => ({id: c.id, name: c.name}));\n\t\t\t\t\tif (isArray(customList)) {\n\t\t\t\t\t\tsetContacts([{id: \"\", name: \"\"}, ...customList]);\n\t\t\t\t\t}\n\t\t\t\t\tif (contactId) {\n\t\t\t\t\t\tsetSchedule(prevState => {\n\t\t\t\t\t\t\treturn { ...prevState, contactId }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!scheduleId) return;\n\n\t\t\t\t\tconst { data } = await api.get(`/schedules/${scheduleId}`);\n\t\t\t\t\tsetSchedule(prevState => {\n\t\t\t\t\t\treturn { ...prevState, ...data, sendAt: moment(data.sendAt).format('YYYY-MM-DDTHH:mm') };\n\t\t\t\t\t});\n\t\t\t\t\tsetCurrentContact(data.contact);\n\t\t\t\t})()\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t}\n\t}, [scheduleId, contactId, open, user]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetSchedule(initialState);\n\t};\n\n\tconst handleSaveSchedule = async values => {\n\t\tconst scheduleData = { ...values, userId: user.id };\n\t\ttry {\n\t\t\tif (scheduleId) {\n\t\t\t\tawait api.put(`/schedules/${scheduleId}`, scheduleData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/schedules\", scheduleData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"scheduleModal.success\"));\n\t\t\tif (typeof reload == 'function') {\n\t\t\t\treload();\n\t\t\t}\n\t\t\tif (contactId) {\n\t\t\t\tif (typeof cleanContact === 'function') {\n\t\t\t\t\tcleanContact();\n\t\t\t\t\thistory.push('/schedules');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\tsetCurrentContact(initialContact);\n\t\tsetSchedule(initialState);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{schedule.status === 'ERRO' ? 'Erro de Envio' : `Mensagem ${capitalize(schedule.status)}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={schedule}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={ScheduleSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveSchedule(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting, values }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentContact}\n\t\t\t\t\t\t\t\t\t\t\toptions={contacts}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e, contact) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst contactId = contact ? contact.id : '';\n\t\t\t\t\t\t\t\t\t\t\t\tsetSchedule({ ...schedule, contactId });\n\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentContact(contact ? contact : initialContact);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\t\t\t\t\t\tgetOptionSelected={(option, value) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn value.id === option.id\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} variant=\"outlined\" placeholder=\"Contato\" />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\trows={9}\n\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"scheduleModal.form.body\")}\n\t\t\t\t\t\t\t\t\t\tname=\"body\"\n\t\t\t\t\t\t\t\t\t\terror={touched.body && Boolean(errors.body)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.body && errors.body}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"scheduleModal.form.sendAt\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\tname=\"sendAt\"\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t  shrink: true,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\terror={touched.sendAt && Boolean(errors.sendAt)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.sendAt && errors.sendAt}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"scheduleModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{ (schedule.sentAt === null || schedule.sentAt === \"\") && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{scheduleId\n\t\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"scheduleModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"scheduleModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default ScheduleModal;","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport TransferTicketModalCustom from \"../TransferTicketModalCustom\";\nimport toastError from \"../../errors/toastError\";\nimport { Can } from \"../Can\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport ScheduleModal from \"../ScheduleModal\";\n\nconst TicketOptionsMenu = ({ ticket, menuOpen, handleClose, anchorEl }) => {\n\tconst [confirmationOpen, setConfirmationOpen] = useState(false);\n\tconst [transferTicketModalOpen, setTransferTicketModalOpen] = useState(false);\n\tconst isMounted = useRef(true);\n\tconst { user } = useContext(AuthContext);\n\n\tconst [scheduleModalOpen, setScheduleModalOpen] = useState(false);\n\tconst [contactId, setContactId] = useState(null);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tconst handleDeleteTicket = async () => {\n\t\ttry {\n\t\t\tawait api.delete(`/tickets/${ticket.id}`);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst handleOpenConfirmationModal = e => {\n\t\tsetConfirmationOpen(true);\n\t\thandleClose();\n\t};\n\n\tconst handleOpenTransferModal = e => {\n\t\tsetTransferTicketModalOpen(true);\n\t\thandleClose();\n\t};\n\n\tconst handleCloseTransferTicketModal = () => {\n\t\tif (isMounted.current) {\n\t\t\tsetTransferTicketModalOpen(false);\n\t\t}\n\t};\n\n\tconst handleOpenScheduleModal = () => {\n\t\thandleClose();\n\t\tsetContactId(ticket.contact.id);\n\t\tsetScheduleModalOpen(true);\n\t}\n\n\tconst handleCloseScheduleModal = () => {\n\t\tsetScheduleModalOpen(false);\n\t\tsetContactId(null);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Menu\n\t\t\t\tid=\"menu-appbar\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\tkeepMounted\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\topen={menuOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem onClick={handleOpenScheduleModal}>\n\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.schedule\")}\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem onClick={handleOpenTransferModal}>\n\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.transfer\")}\n\t\t\t\t</MenuItem>\n\t\t\t\t<Can\n\t\t\t\t\trole={user.profile}\n\t\t\t\t\tperform=\"ticket-options:deleteTicket\"\n\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t<MenuItem onClick={handleOpenConfirmationModal}>\n\t\t\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.delete\")}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Menu>\n\t\t\t<ConfirmationModal\n\t\t\t\ttitle={`${i18n.t(\"ticketOptionsMenu.confirmationModal.title\")}${\n\t\t\t\t\tticket.id\n\t\t\t\t} ${i18n.t(\"ticketOptionsMenu.confirmationModal.titleFrom\")} ${\n\t\t\t\t\tticket.contact.name\n\t\t\t\t}?`}\n\t\t\t\topen={confirmationOpen}\n\t\t\t\tonClose={setConfirmationOpen}\n\t\t\t\tonConfirm={handleDeleteTicket}\n\t\t\t>\n\t\t\t\t{i18n.t(\"ticketOptionsMenu.confirmationModal.message\")}\n\t\t\t</ConfirmationModal>\n\t\t\t<TransferTicketModalCustom\n\t\t\t\tmodalOpen={transferTicketModalOpen}\n\t\t\t\tonClose={handleCloseTransferTicketModal}\n\t\t\t\tticketid={ticket.id}\n\t\t\t/>\n\t\t\t<ScheduleModal\n\t\t\t\topen={scheduleModalOpen}\n\t\t\t\tonClose={handleCloseScheduleModal}\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\tcontactId={contactId}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default TicketOptionsMenu;","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles, createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { IconButton } from \"@material-ui/core\";\nimport { MoreVert, Replay } from \"@material-ui/icons\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport TicketOptionsMenu from \"../TicketOptionsMenu\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport UndoRoundedIcon from '@material-ui/icons/UndoRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { green } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles(theme => ({\n\tactionButtons: {\n\t\tmarginRight: 6,\n\t\tflex: \"none\",\n\t\talignSelf: \"center\",\n\t\tmarginLeft: \"auto\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(0.5),\n\t\t},\n\t},\n}));\n\nconst TicketActionButtonsCustom = ({ ticket }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\tconst ticketOptionsMenuOpen = Boolean(anchorEl);\n\tconst { user } = useContext(AuthContext);\n\tconst { setCurrentTicket } = useContext(TicketsContext);\n\n\tconst customTheme = createTheme({\n\t\tpalette: {\n\t\t  \tprimary: green,\n\t\t}\n\t});\n\n\tconst handleOpenTicketOptionsMenu = e => {\n\t\tsetAnchorEl(e.currentTarget);\n\t};\n\n\tconst handleCloseTicketOptionsMenu = e => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleUpdateTicketStatus = async (e, status, userId) => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tawait api.put(`/tickets/${ticket.id}`, {\n\t\t\t\tstatus: status,\n\t\t\t\tuserId: userId || null,\n\t\t\t});\n\n\t\t\tsetLoading(false);\n\t\t\tif (status === \"open\") {\n\t\t\t\tsetCurrentTicket({ ...ticket, code: \"#open\" });\n\t\t\t} else {\n\t\t\t\tsetCurrentTicket({ id: null, code: null })\n\t\t\t\thistory.push(\"/tickets\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.actionButtons}>\n\t\t\t{ticket.status === \"closed\" && (\n\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tstartIcon={<Replay />}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"open\", user?.id)}\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.reopen\")}\n\t\t\t\t</ButtonWithSpinner>\n\t\t\t)}\n\t\t\t{ticket.status === \"open\" && (\n\t\t\t\t<>\n\t\t\t\t\t<Tooltip title={i18n.t(\"messagesList.header.buttons.return\")}>\n\t\t\t\t\t\t<IconButton onClick={e => handleUpdateTicketStatus(e, \"pending\", null)}>\n\t\t\t\t\t\t\t<UndoRoundedIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<ThemeProvider theme={customTheme}>\n\t\t\t\t\t\t<Tooltip title={i18n.t(\"messagesList.header.buttons.resolve\")}>\n\t\t\t\t\t\t\t<IconButton onClick={e => handleUpdateTicketStatus(e, \"closed\", user?.id)} color=\"primary\">\n\t\t\t\t\t\t\t\t<CheckCircleIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t{/* <ButtonWithSpinner\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tstartIcon={<Replay />}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"pending\", null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.return\")}\n\t\t\t\t\t</ButtonWithSpinner>\n\t\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"closed\", user?.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.resolve\")}\n\t\t\t\t\t</ButtonWithSpinner> */}\n\t\t\t\t\t<IconButton onClick={handleOpenTicketOptionsMenu}>\n\t\t\t\t\t\t<MoreVert />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<TicketOptionsMenu\n\t\t\t\t\t\tticket={ticket}\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tmenuOpen={ticketOptionsMenuOpen}\n\t\t\t\t\t\thandleClose={handleCloseTicketOptionsMenu}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{ticket.status === \"pending\" && (\n\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"open\", user?.id)}\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.accept\")}\n\t\t\t\t</ButtonWithSpinner>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TicketActionButtonsCustom;\n","import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsContainer({ ticket }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isMounted.current) {\n            loadTags().then(() => {\n                if (Array.isArray(ticket.tags)) {\n                    setSelecteds(ticket.tags);\n                } else {\n                    setSelecteds([]);\n                }\n            });\n        }\n    }, [ticket]);\n\n    const createTag = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`);\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const syncTags = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags/sync`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value, reason) => {\n        let optionsChanged = []\n        if (reason === 'create-option') {\n            if (isArray(value)) {\n                for (let item of value) {\n                    if (isString(item)) {\n                        const newTag = await createTag({ name: item })\n                        optionsChanged.push(newTag);\n                    } else {\n                        optionsChanged.push(item);\n                    }\n                }\n            }\n            await loadTags();\n        } else {\n            optionsChanged = value;\n        }\n        setSelecteds(optionsChanged);\n        await syncTags({ ticketId: ticket.id, tags: optionsChanged });\n    }\n\n    return (\n        <Paper style={{ padding: 12 }}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                freeSolo\n                onChange={(e, v, r) => onChange(v, r)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{ backgroundColor: option?.color || '#eee', textShadow: '1px 1px 1px #000', color: 'white' }}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Tags\" />\n                )}\n                PaperComponent={({ children }) => (\n                    <Paper style={{ width: 400, marginLeft: 12 }}>\n                        {children}\n                    </Paper>\n                )}\n            />\n        </Paper>\n    )\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport clsx from \"clsx\";\n\nimport { Paper, makeStyles } from \"@material-ui/core\";\n\nimport ContactDrawer from \"../ContactDrawer\";\nimport MessageInput from \"../MessageInputCustom/\";\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\nimport TicketActionButtons from \"../TicketActionButtonsCustom\";\nimport MessagesList from \"../MessagesList\";\nimport api from \"../../services/api\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TagsContainer } from \"../TagsContainer\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst Ticket = () => {\n  const { ticketId } = useParams();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTicket = async () => {\n        try {\n          const { data } = await api.get(\"/tickets/u/\" + ticketId);\n          const { queueId } = data;\n          const { queues, profile } = user;\n\n          const queueAllowed = queues.find((q) => q.id === queueId);\n          if (queueAllowed === undefined && profile !== \"admin\") {\n            toast.error(\"Acesso não permitido\");\n            history.push(\"/tickets\");\n            return;\n          }\n\n          setContact(data.contact);\n          setTicket(data);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchTicket();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [ticketId, user, history]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"update\") {\n        setTicket(data.ticket);\n      }\n\n      if (data.action === \"delete\") {\n        toast.success(\"Ticket deleted sucessfully.\");\n        history.push(\"/tickets\");\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        setContact((prevState) => {\n          if (prevState.id === data.contact?.id) {\n            return { ...prevState, ...data.contact };\n          }\n          return prevState;\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket, history]);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const renderTicketInfo = () => {\n    if (ticket.user !== undefined) {\n      return (\n        <TicketInfo\n          contact={contact}\n          ticket={ticket}\n          onClick={handleDrawerOpen}\n        />\n      );\n    }\n  };\n\n  const renderMessagesList = () => {\n    return (\n      <ReplyMessageProvider>\n        <MessagesList\n          ticket={ticket}\n          ticketId={ticket.id}\n          isGroup={ticket.isGroup}\n        ></MessagesList>\n        <MessageInput ticket={ticket} />\n      </ReplyMessageProvider>\n    );\n  };\n\n  return (\n    <div className={classes.root} id=\"drawer-container\">\n      <Paper\n        variant=\"outlined\"\n        elevation={0}\n        className={clsx(classes.mainWrapper, {\n          [classes.mainWrapperShift]: drawerOpen,\n        })}\n      >\n        <TicketHeader loading={loading}>\n          {renderTicketInfo()}\n          <TicketActionButtons ticket={ticket} />\n        </TicketHeader>\n        <Paper>\n          <TagsContainer ticket={ticket} />\n        </Paper>\n        {renderMessagesList()}\n        {/* <ReplyMessageProvider>{renderMessagesList()}</ReplyMessageProvider> */}\n      </Paper>\n      <ContactDrawer\n        open={drawerOpen}\n        handleDrawerClose={handleDrawerClose}\n        contact={contact}\n        loading={loading}\n        ticket={ticket}\n      />\n    </div>\n  );\n};\n\nexport default Ticket;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TicketsManager from \"../../components/TicketsManagerTabs/\";\nimport Ticket from \"../../components/Ticket/\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchatContainer: {\n\t\tflex: 1,\n\t\t// backgroundColor: \"#eee\",\n\t\tpadding: theme.spacing(4),\n\t\theight: `calc(100% - 48px)`,\n\t\toverflowY: \"hidden\",\n\t},\n\n\tchatPapper: {\n\t\t// backgroundColor: \"red\",\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t},\n\n\tcontactsWrapper: {\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t\tflexDirection: \"column\",\n\t\toverflowY: \"hidden\",\n\t},\n\tmessagesWrapper: {\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t\tflexDirection: \"column\",\n\t},\n\twelcomeMsg: {\n\t\tbackground: theme.palette.total,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"center\",\n\t\theight: \"100%\",\n\t\ttextAlign: \"center\",\n\t},\n}));\n\nconst TicketsCustom = () => {\n\tconst classes = useStyles();\n\tconst { ticketId } = useParams();\n\n\treturn (\n\t\t<div className={classes.chatContainer}>\n\t\t\t<div className={classes.chatPapper}>\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={4} className={classes.contactsWrapper}>\n\t\t\t\t\t\t<TicketsManager />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={8} className={classes.messagesWrapper}>\n\t\t\t\t\t\t{ticketId ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Ticket />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.welcomeMsg}>\n\t\t\t\t\t\t\t\t<span>{i18n.t(\"chat.noTicketMessage\")}</span>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TicketsCustom;\n","import { styled } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst TicketAdvancedLayout = styled(Paper)({\n    height: `calc(100% - 56px)`,\n    display: \"grid\",\n    gridTemplateRows: \"56px 1fr\"\n})\n\nexport default TicketAdvancedLayout;","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport TicketsManagerTabs from \"../../components/TicketsManagerTabs/\";\nimport Ticket from \"../../components/Ticket/\";\nimport TicketAdvancedLayout from \"../../components/TicketAdvancedLayout\";\n\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n    },\n    content: {\n        overflow: \"auto\"\n    },\n    placeholderContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n\t\tbackground: theme.palette.total,\n    },\n    placeholderItem: {\n    }\n}));\n\nconst TicketAdvanced = (props) => {\n\tconst classes = useStyles();\n\tconst { ticketId } = useParams();\n\tconst [option, setOption] = useState(0);\n    const { currentTicket, setCurrentTicket } = useContext(TicketsContext)\n\n    useEffect(() => {\n        if(currentTicket.id !== null) {\n            setCurrentTicket({ id: currentTicket.id, code: '#open' })\n        }\n        if (!ticketId) {\n            setOption(1)\n        }\n        return () => {\n            setCurrentTicket({ id: null, code: null })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (currentTicket.id !== null) {\n            setOption(0)\n        }\n    }, [currentTicket])\n\n\tconst renderPlaceholder = () => {\n\t\treturn <Box className={classes.placeholderContainer}>\n            <div className={classes.placeholderItem}>{i18n.t(\"chat.noTicketMessage\")}</div><br />\n            <Button onClick={() => setOption(1)} variant=\"contained\" color=\"primary\">\n                Selecionar Ticket\n            </Button>\n        </Box>\n\t}\n\n\tconst renderMessageContext = () => {\n\t\tif (ticketId) {\n\t\t\treturn <Ticket />\n\t\t}\n\t\treturn renderPlaceholder()\n\t}\n\n\tconst renderTicketsManagerTabs = () => {\n\t\treturn <TicketsManagerTabs />\n\t}\n\n\treturn (\n        <TicketAdvancedLayout>\n            <Box className={classes.header}>\n                <BottomNavigation\n                    value={option}\n                    onChange={(event, newValue) => {\n                        setOption(newValue);\n                    }}\n                    showLabels\n                    className={classes.root}\n                >\n                    <BottomNavigationAction label=\"Ticket\" icon={<ChatIcon />} />\n                    <BottomNavigationAction label=\"Atendimentos\" icon={<QuestionAnswerIcon />} />\n                </BottomNavigation>\n            </Box>\n            <Box className={classes.content}>\n                { option === 0 ? renderMessageContext() : renderTicketsManagerTabs() }\n            </Box>\n        </TicketAdvancedLayout>\n\t);\n};\n\nexport default TicketAdvanced;\n","import React from \"react\";\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport Tickets from \"../TicketsCustom\"\nimport TicketAdvanced from \"../TicketsAdvanced\";\n\nfunction TicketResponsiveContainer (props) {\n    if (isWidthUp('md', props.width)) {\n        return <Tickets />;    \n    }\n    return <TicketAdvanced />\n}\n\nexport default withWidth()(TicketResponsiveContainer);","import api, { openApi } from \"../../services/api\";\n\nconst usePlans = () => {\n\n    const getPlanList = async (params) => {\n        const { data } = await openApi.request({\n            url: '/plans/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/plans/all',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const finder = async (id) => {\n        const { data } = await api.request({\n            url: `/plans/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/plans',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/plans/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/plans/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    return {\n        getPlanList,\n        list,\n        save,\n        update,\n        finder,\n        remove\n    }\n}\n\nexport default usePlans;","import React, { useState, useEffect } from \"react\";\nimport qs from 'query-string'\n\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field } from \"formik\";\nimport usePlans from \"../../hooks/usePlans\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n\tFormControl,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport { openApi } from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport moment from \"moment\";\n// const Copyright = () => {\n// \treturn (\n// \t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n// \t\t\t{\"Copyleft \"}\n// \t\t\t<Link color=\"inherit\" href=\"https://github.com/canove\">\n// \t\t\t\tCanove\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// };\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\",\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst UserSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tpassword: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst SignUp = () => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tlet companyId = null\n\n\tconst params = qs.parse(window.location.search)\n\tif (params.companyId !== undefined) {\n\t\tcompanyId = params.companyId\n\t}\n\n\tconst initialState = { name: \"\", email: \"\", password: \"\", planId: \"\", };\n\n\tconst [user] = useState(initialState);\n\tconst dueDate = moment().add(3, \"day\").format();\n\tconst handleSignUp = async values => {\n\t\tObject.assign(values, { recurrence: \"MENSAL\" });\n\t\tObject.assign(values, { dueDate: dueDate });\n\t\tObject.assign(values, { status: \"t\" });\n\t\tObject.assign(values, { campaignsEnabled: true });\n\t\ttry {\n\t\t\tawait openApi.post(\"/companies/cadastro\", values);\n\t\t\ttoast.success(i18n.t(\"signup.toasts.success\"));\n\t\t\thistory.push(\"/login\");\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst [plans, setPlans] = useState([]);\n\tconst { list: listPlans } = usePlans();\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst list = await listPlans();\n\t\t\tsetPlans(list);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className=\"jss11\">\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t{i18n.t(\"signup.title\")}\n\t\t\t\t</Typography>\n\t\t\t\t{/* <form className={classes.form} noValidate onSubmit={handleSignUp}> */}\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={user}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSignUp(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting }) => (\n\t\t\t\t\t\t<Form className={classes.form}>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nome da Empresa\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"signup.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\terror={touched.password && Boolean(errors.password)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"signup.form.password\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"plan-selection\">Plano</InputLabel>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={Select}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"plan-selection\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Plano\"\n\t\t\t\t\t\t\t\t\t\tname=\"planId\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{plans.map((plan, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={plan.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{plan.name} - Atendentes: {plan.users} - WhatsApp: {plan.connections} - Filas: {plan.queues} - R$ {plan.value}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"signup.buttons.submit\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{i18n.t(\"signup.buttons.login\")}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t<Box mt={5}>{/* <Copyright /> */}</Box>\n\t\t</Container>\n\t);\n};\n\nexport default SignUp;\n","import React, { useState, useContext } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport logo from \"../../assets/logologin.png\";\n\n\n// const Copyright = () => {\n// \treturn (\n// \t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n// \t\t\t{\"Copyleft \"}\n// \t\t\t<Link color=\"inherit\" href=\"https://github.com/canove\">\n// \t\t\t\tCanove\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// };\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst Login = () => {\n\tconst classes = useStyles();\n\n\tconst [user, setUser] = useState({ email: \"\", password: \"\" });\n\n\tconst { handleLogin } = useContext(AuthContext);\n\n\tconst handleChangeInput = e => {\n\t\tsetUser({ ...user, [e.target.name]: e.target.value });\n\t};\n\n\tconst handlSubmit = e => {\n\t\te.preventDefault();\n\t\thandleLogin(user);\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className=\"jss11\">\n\t\t\t\t<div>\n\t\t\t\t\t<img style={{ margin: \"0 auto\", height: \"80px\", }} src={logo} alt=\"Whats\" />\n\t\t\t\t</div>\n\t\t\t\t{/* <Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t{i18n.t(\"login.title\")}\n\t\t\t\t</Typography> */}\n\t\t\t\t<form className={classes.form} noValidate onSubmit={handlSubmit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel={i18n.t(\"login.form.email\")}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel={i18n.t(\"login.form.password\")}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"login.buttons.submit\")}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"login.buttons.register\")}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Box mt={8}>{ /* <Copyright />*/ }</Box>\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tflex: 1,\n\t\tpadding: theme.spacing(2),\n\t\theight: `calc(100% - 48px)`,\n\t},\n\n\tcontentWrapper: {\n\t\theight: \"100%\",\n\t\toverflowY: \"hidden\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n}));\n\nconst MainContainer = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container className={classes.mainContainer}>\n\t\t\t<div className={classes.contentWrapper}>{children}</div>\n\t\t</Container>\n\t);\n};\n\nexport default MainContainer;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tcontactsHeader: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tpadding: \"0px 6px 6px 6px\",\n\t},\n}));\n\nconst MainHeader = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn <div className={classes.contactsHeader}>{children}</div>;\n};\n\nexport default MainHeader;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tMainHeaderButtonsWrapper: {\n\t\tflex: \"none\",\n\t\tmarginLeft: \"auto\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(1),\n\t\t},\n\t},\n}));\n\nconst MainHeaderButtonsWrapper = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn <div className={classes.MainHeaderButtonsWrapper}>{children}</div>;\n};\n\nexport default MainHeaderButtonsWrapper;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props) {\n\treturn (\n\t\t<Typography variant=\"h5\" color=\"primary\" gutterBottom>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\tcustomTableCell: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n}));\n\nconst TableRowSkeleton = ({ avatar, columns }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<>\n\t\t\t<TableRow>\n\t\t\t\t{avatar && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<TableCell style={{ paddingRight: 0 }}>\n\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\tvariant=\"circle\"\n\t\t\t\t\t\t\t\twidth={40}\n\t\t\t\t\t\t\t\theight={40}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={30} width={80} />\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{Array.from({ length: columns }, (_, index) => (\n\t\t\t\t\t<TableCell align=\"center\" key={index}>\n\t\t\t\t\t\t<div className={classes.customTableCell}>\n\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\theight={30}\n\t\t\t\t\t\t\t\twidth={80}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</>\n\t);\n};\n\nexport default TableRowSkeleton;\n","import React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Button,\n  DialogActions,\n  CircularProgress,\n  TextField,\n  Switch,\n  FormControlLabel,\n  Grid,\n} from \"@material-ui/core\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelect from \"../QueueSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst SessionSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst WhatsAppModal = ({ open, onClose, whatsAppId }) => {\n  const classes = useStyles();\n  const initialState = {\n    name: \"\",\n    greetingMessage: \"\",\n    complationMessage: \"\",\n    outOfHoursMessage: \"\",\n    ratingMessage: \"\",\n    isDefault: false,\n    token: \"\",\n    provider: \"beta\",\n  };\n  const [whatsApp, setWhatsApp] = useState(initialState);\n  const [selectedQueueIds, setSelectedQueueIds] = useState([]);\n  const [selectedQueueId, setSelectedQueueId] = useState(null);\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      if (!whatsAppId) return;\n\n      try {\n        const { data } = await api.get(`whatsapp/${whatsAppId}?session=0`);\n        setWhatsApp(data);\n\n        const whatsQueueIds = data.queues?.map((queue) => queue.id);\n        setSelectedQueueIds(whatsQueueIds);\n        setSelectedQueueId(data.transferQueueId);\n      } catch (err) {\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, [whatsAppId]);\n\n  const handleSaveWhatsApp = async (values) => {\n    const whatsappData = { ...values, queueIds: selectedQueueIds, transferQueueId: selectedQueueId };\n    delete whatsappData[\"queues\"];\n    delete whatsappData[\"session\"];\n\n    try {\n      if (whatsAppId) {\n        await api.put(`/whatsapp/${whatsAppId}`, whatsappData);\n      } else {\n        await api.post(\"/whatsapp\", whatsappData);\n      }\n      toast.success(i18n.t(\"whatsappModal.success\"));\n      handleClose();\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleClose = () => {\n    onClose();\n    setWhatsApp(initialState);\n    setSelectedQueueId(null);\n    setSelectedQueueIds([]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle>\n          {whatsAppId\n            ? i18n.t(\"whatsappModal.title.edit\")\n            : i18n.t(\"whatsappModal.title.add\")}\n        </DialogTitle>\n        <Formik\n          initialValues={whatsApp}\n          enableReinitialize={true}\n          validationSchema={SessionSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveWhatsApp(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Grid spacing={2} container>\n                    <Grid item>\n                      <Field\n                        as={TextField}\n                        label={i18n.t(\"whatsappModal.form.name\")}\n                        autoFocus\n                        name=\"name\"\n                        error={touched.name && Boolean(errors.name)}\n                        helperText={touched.name && errors.name}\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        className={classes.textField}\n                      />\n                    </Grid>\n                    <Grid style={{ paddingTop: 15 }} item>\n                      <FormControlLabel\n                        control={\n                          <Field\n                            as={Switch}\n                            color=\"primary\"\n                            name=\"isDefault\"\n                            checked={values.isDefault}\n                          />\n                        }\n                        label={i18n.t(\"whatsappModal.form.default\")}\n                      />\n                    </Grid>\n                  </Grid>\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.greetingMessage\")}\n                    type=\"greetingMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"greetingMessage\"\n                    error={\n                      touched.greetingMessage && Boolean(errors.greetingMessage)\n                    }\n                    helperText={\n                      touched.greetingMessage && errors.greetingMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.complationMessage\")}\n                    type=\"complationMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"complationMessage\"\n                    error={\n                      touched.complationMessage &&\n                      Boolean(errors.complationMessage)\n                    }\n                    helperText={\n                      touched.complationMessage && errors.complationMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.outOfHoursMessage\")}\n                    type=\"outOfHoursMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"outOfHoursMessage\"\n                    error={\n                      touched.outOfHoursMessage &&\n                      Boolean(errors.outOfHoursMessage)\n                    }\n                    helperText={\n                      touched.outOfHoursMessage && errors.outOfHoursMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.ratingMessage\")}\n                    type=\"ratingMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"ratingMessage\"\n                    error={\n                      touched.ratingMessage && Boolean(errors.ratingMessage)\n                    }\n                    helperText={touched.ratingMessage && errors.ratingMessage}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.token\")}\n                    type=\"token\"\n                    fullWidth\n                    name=\"token\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <QueueSelect\n                  selectedQueueIds={selectedQueueIds}\n                  onChange={(selectedIds) => setSelectedQueueIds(selectedIds)}\n                />\n\n                <Grid container spacing={2} >\n                  <Grid item sm={6} >\n                    <Field\n                      fullWidth\n                      type=\"number\"\n                      as={TextField}\n                      label='Transferir após x (minutos)'\n                      name=\"timeToTransfer\"\n                      error={touched.timeToTransfer && Boolean(errors.timeToTransfer)}\n                      helperText={touched.timeToTransfer && errors.timeToTransfer}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                      InputLabelProps={{ shrink: values.timeToTransfer ? true : false }}\n                    />\n\n                  </Grid>\n\n                  <Grid item sm={6}>\n                    <QueueSelect\n                      selectedQueueIds={selectedQueueId}\n                      onChange={(selectedId) => {\n                        setSelectedQueueId(selectedId)\n                      }}\n                      multiple={false}\n                      title={'Fila de Transferência'}\n                    />\n                  </Grid>\n                </Grid>\n\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"whatsappModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {whatsAppId\n                    ? i18n.t(\"whatsappModal.buttons.okEdit\")\n                    : i18n.t(\"whatsappModal.buttons.okAdd\")}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default React.memo(WhatsAppModal);\n","import React, { useEffect, useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport toastError from \"../../errors/toastError\";\n\nimport { Dialog, DialogContent, Paper, Typography } from \"@material-ui/core\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst QrcodeModal = ({ open, onClose, whatsAppId }) => {\n  const [qrCode, setQrCode] = useState(\"\");\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      if (!whatsAppId) return;\n\n      try {\n        const { data } = await api.get(`/whatsapp/${whatsAppId}`);\n        setQrCode(data.qrcode);\n      } catch (err) {\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, [whatsAppId]);\n\n  useEffect(() => {\n    if (!whatsAppId) return;\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-whatsappSession`, (data) => {\n      if (data.action === \"update\" && data.session.id === whatsAppId) {\n        setQrCode(data.session.qrcode);\n      }\n\n      if (data.action === \"update\" && data.session.qrcode === \"\") {\n        onClose();\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [whatsAppId, onClose]);\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"lg\" scroll=\"paper\">\n      <DialogContent>\n        <Paper elevation={0}>\n          <Typography color=\"primary\" gutterBottom>\n            {i18n.t(\"qrCode.message\")}\n          </Typography>\n          <div style={{ backgroundColor: \"white\", padding: '5px' }}>\n            {qrCode ? (\n              <QRCode value={qrCode} size={256} />\n            ) : (\n              <span>Waiting for QR Code</span>\n            )}\n          </div>\n        </Paper>\n      </DialogContent>\n    </Dialog >\n  );\n};\n\nexport default React.memo(QrcodeModal);\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport { format, parseISO } from \"date-fns\";\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  Table,\n  TableHead,\n  Paper,\n  Tooltip,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {\n  Edit,\n  CheckCircle,\n  SignalCellularConnectedNoInternet2Bar,\n  SignalCellularConnectedNoInternet0Bar,\n  SignalCellular4Bar,\n  CropFree,\n  DeleteOutline,\n  Facebook,\n  Instagram,\n  WhatsApp,\n} from \"@material-ui/icons\";\n\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\n\nimport api from \"../../services/api\";\nimport WhatsAppModal from \"../../components/WhatsAppModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport QrcodeModal from \"../../components/QrcodeModal\";\nimport { i18n } from \"../../translate/i18n\";\nimport { WhatsAppsContext } from \"../../context/WhatsApp/WhatsAppsContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontSize: theme.typography.pxToRem(14),\n    border: \"1px solid #dadde9\",\n    maxWidth: 450,\n  },\n  tooltipPopper: {\n    textAlign: \"center\",\n  },\n  buttonProgress: {\n    color: green[500],\n  },\n}));\n\nconst CustomToolTip = ({ title, content, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip\n      arrow\n      classes={{\n        tooltip: classes.tooltip,\n        popper: classes.tooltipPopper,\n      }}\n      title={\n        <React.Fragment>\n          <Typography gutterBottom color=\"inherit\">\n            {title}\n          </Typography>\n          {content && <Typography>{content}</Typography>}\n        </React.Fragment>\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nconst IconChannel = (channel) => {\n  switch (channel) {\n    case \"facebook\":\n      return <Facebook />;\n    case \"instagram\":\n      return <Instagram />;\n    case \"whatsapp\":\n      return <WhatsApp />;\n    default:\n      return \"error\";\n  }\n};\n\nconst Connections = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const { user } = useContext(AuthContext);\n\n\n  const { whatsApps, loading } = useContext(WhatsAppsContext);\n  const [whatsAppModalOpen, setWhatsAppModalOpen] = useState(false);\n  const [qrModalOpen, setQrModalOpen] = useState(false);\n  const [selectedWhatsApp, setSelectedWhatsApp] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const confirmationModalInitialState = {\n    action: \"\",\n    title: \"\",\n    message: \"\",\n    whatsAppId: \"\",\n    open: false,\n  };\n  const [confirmModalInfo, setConfirmModalInfo] = useState(\n    confirmationModalInitialState\n  );\n\n  const responseFacebook = (response) => {\n    if (response.status !== \"unknown\") {\n      const { accessToken, id } = response;\n\n      api\n        .post(\"/facebook\", {\n          facebookUserId: id,\n          facebookUserToken: accessToken,\n        })\n        .then((response) => {\n          toast.success(i18n.t(\"connections.facebook.success\"));\n        })\n        .catch((error) => {\n          toastError(error);\n        });\n    }\n  };\n\n  const responseInstagram = (response) => {\n    if (response.status !== \"unknown\") {\n      const { accessToken, id } = response;\n\n      api\n        .post(\"/facebook\", {\n          addInstagram: true,\n          facebookUserId: id,\n          facebookUserToken: accessToken,\n        })\n        .then((response) => {\n          toast.success(i18n.t(\"connections.facebook.success\"));\n        })\n        .catch((error) => {\n          toastError(error);\n        });\n    }\n  };\n\n  const handleStartWhatsAppSession = async (whatsAppId) => {\n    try {\n      await api.post(`/whatsappsession/${whatsAppId}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleRequestNewQrCode = async (whatsAppId) => {\n    try {\n      await api.put(`/whatsappsession/${whatsAppId}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenWhatsAppModal = () => {\n    setSelectedWhatsApp(null);\n    setWhatsAppModalOpen(true);\n  };\n\n  const handleCloseWhatsAppModal = useCallback(() => {\n    setWhatsAppModalOpen(false);\n    setSelectedWhatsApp(null);\n  }, [setSelectedWhatsApp, setWhatsAppModalOpen]);\n\n  const handleOpenQrModal = (whatsApp) => {\n    setSelectedWhatsApp(whatsApp);\n    setQrModalOpen(true);\n  };\n\n  const handleCloseQrModal = useCallback(() => {\n    setSelectedWhatsApp(null);\n    setQrModalOpen(false);\n  }, [setQrModalOpen, setSelectedWhatsApp]);\n\n  const handleEditWhatsApp = (whatsApp) => {\n    setSelectedWhatsApp(whatsApp);\n    setWhatsAppModalOpen(true);\n  };\n\n  const handleOpenConfirmationModal = (action, whatsAppId) => {\n    if (action === \"disconnect\") {\n      setConfirmModalInfo({\n        action: action,\n        title: i18n.t(\"connections.confirmationModal.disconnectTitle\"),\n        message: i18n.t(\"connections.confirmationModal.disconnectMessage\"),\n        whatsAppId: whatsAppId,\n      });\n    }\n\n    if (action === \"delete\") {\n      setConfirmModalInfo({\n        action: action,\n        title: i18n.t(\"connections.confirmationModal.deleteTitle\"),\n        message: i18n.t(\"connections.confirmationModal.deleteMessage\"),\n        whatsAppId: whatsAppId,\n      });\n    }\n    setConfirmModalOpen(true);\n  };\n\n  const handleSubmitConfirmationModal = async () => {\n    if (confirmModalInfo.action === \"disconnect\") {\n      try {\n        await api.delete(`/whatsappsession/${confirmModalInfo.whatsAppId}`);\n      } catch (err) {\n        toastError(err);\n      }\n    }\n\n    if (confirmModalInfo.action === \"delete\") {\n      try {\n        await api.delete(`/whatsapp/${confirmModalInfo.whatsAppId}`);\n        toast.success(i18n.t(\"connections.toasts.deleted\"));\n      } catch (err) {\n        toastError(err);\n      }\n    }\n\n    setConfirmModalInfo(confirmationModalInitialState);\n  };\n\n  const renderActionButtons = (whatsApp) => {\n    return (\n      <>\n        {whatsApp.status === \"qrcode\" && (\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleOpenQrModal(whatsApp)}\n          >\n            {i18n.t(\"connections.buttons.qrcode\")}\n          </Button>\n        )}\n        {whatsApp.status === \"DISCONNECTED\" && (\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => handleStartWhatsAppSession(whatsApp.id)}\n            >\n              {i18n.t(\"connections.buttons.tryAgain\")}\n            </Button>{\" \"}\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => handleRequestNewQrCode(whatsApp.id)}\n            >\n              {i18n.t(\"connections.buttons.newQr\")}\n            </Button>\n          </>\n        )}\n        {(whatsApp.status === \"CONNECTED\" ||\n          whatsApp.status === \"PAIRING\" ||\n          whatsApp.status === \"TIMEOUT\") && (\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              handleOpenConfirmationModal(\"disconnect\", whatsApp.id);\n            }}\n          >\n            {i18n.t(\"connections.buttons.disconnect\")}\n          </Button>\n        )}\n        {whatsApp.status === \"OPENING\" && (\n          <Button size=\"small\" variant=\"outlined\" disabled color=\"default\">\n            {i18n.t(\"connections.buttons.connecting\")}\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  const renderStatusToolTips = (whatsApp) => {\n    return (\n      <div className={classes.customTableCell}>\n        {whatsApp.status === \"DISCONNECTED\" && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.disconnected.title\")}\n            content={i18n.t(\"connections.toolTips.disconnected.content\")}\n          >\n            <SignalCellularConnectedNoInternet0Bar color=\"secondary\" />\n          </CustomToolTip>\n        )}\n        {whatsApp.status === \"OPENING\" && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n        {whatsApp.status === \"qrcode\" && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.qrcode.title\")}\n            content={i18n.t(\"connections.toolTips.qrcode.content\")}\n          >\n            <CropFree />\n          </CustomToolTip>\n        )}\n        {whatsApp.status === \"CONNECTED\" && (\n          <CustomToolTip title={i18n.t(\"connections.toolTips.connected.title\")}>\n            <SignalCellular4Bar style={{ color: green[500] }} />\n          </CustomToolTip>\n        )}\n        {(whatsApp.status === \"TIMEOUT\" || whatsApp.status === \"PAIRING\") && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.timeout.title\")}\n            content={i18n.t(\"connections.toolTips.timeout.content\")}\n          >\n            <SignalCellularConnectedNoInternet2Bar color=\"secondary\" />\n          </CustomToolTip>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={confirmModalInfo.title}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={handleSubmitConfirmationModal}\n      >\n        {confirmModalInfo.message}\n      </ConfirmationModal>\n      <QrcodeModal\n        open={qrModalOpen}\n        onClose={handleCloseQrModal}\n        whatsAppId={!whatsAppModalOpen && selectedWhatsApp?.id}\n      />\n      <WhatsAppModal\n        open={whatsAppModalOpen}\n        onClose={handleCloseWhatsAppModal}\n        whatsAppId={!qrModalOpen && selectedWhatsApp?.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"connections.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n              <React.Fragment>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  {...bindTrigger(popupState)}\n                >\n                 Adicionar Conexão\n                </Button>\n                <Menu {...bindMenu(popupState)}>\n                  <MenuItem\n                    onClick={() => {\n                      handleOpenWhatsAppModal();\n                      popupState.close();\n                    }}\n                  >\n                    <WhatsApp\n                      fontSize=\"small\"\n                      style={{\n                        marginRight: \"10px\",\n                      }}\n                    />\n                    WhatsApp\n                  </MenuItem>\n                 \n                </Menu>\n              </React.Fragment>\n            )}\n          </PopupState>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                Channel\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.session\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.lastUpdate\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.default\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? (\n              <TableRowSkeleton />\n            ) : (\n              <>\n                {whatsApps?.length > 0 &&\n                  whatsApps.map((whatsApp) => (\n                    <TableRow key={whatsApp.id}>\n                      <TableCell align=\"center\">\n                        {IconChannel(whatsApp.channel)}\n                      </TableCell>\n                      <TableCell align=\"center\">{whatsApp.name}</TableCell>\n                      <TableCell align=\"center\">\n                        {renderStatusToolTips(whatsApp)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {renderActionButtons(whatsApp)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {format(parseISO(whatsApp.updatedAt), \"dd/MM/yy HH:mm\")}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {whatsApp.isDefault && (\n                          <div className={classes.customTableCell}>\n                            <CheckCircle style={{ color: green[500] }} />\n                          </div>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => handleEditWhatsApp(whatsApp)}\n                        >\n                          <Edit />\n                        </IconButton>\n\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => {\n                            handleOpenConfirmationModal(\"delete\", whatsApp.id);\n                          }}\n                        >\n                          <DeleteOutline />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </>\n            )}\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Connections;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, TextField, Grid, Container } from \"@material-ui/core\";\nimport { Formik, Form, FastField, FieldArray } from \"formik\";\nimport { isArray } from \"lodash\";\nimport NumberFormat from \"react-number-format\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  textfield: {\n    width: \"100%\",\n  },\n  row: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  control: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n  buttonContainer: {\n    textAlign: \"right\",\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction SchedulesForm(props) {\n  const { initialValues, onSubmit, loading, labelSaveButton } = props;\n  const classes = useStyles();\n\n  const [schedules, setSchedules] = useState([\n    { weekday: \"Segunda-feira\", weekdayEn: \"monday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Terça-feira\", weekdayEn: \"tuesday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Quarta-feira\", weekdayEn: \"wednesday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Quinta-feira\", weekdayEn: \"thursday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Sexta-feira\", weekdayEn: \"friday\", startTime: \"\", endTime: \"\" },\n    { weekday: \"Sábado\", weekdayEn: \"saturday\", startTime: \"\", endTime: \"\" },\n    { weekday: \"Domingo\", weekdayEn: \"sunday\", startTime: \"\", endTime: \"\" },\n  ]);\n\n  useEffect(() => {\n    if (isArray(initialValues) && initialValues.length > 0) {\n      setSchedules(initialValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialValues]);\n\n  const handleSubmit = (data) => {\n    onSubmit(data);\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      className={classes.fullWidth}\n      initialValues={{ schedules }}\n      onSubmit={({ schedules }) =>\n        setTimeout(() => {\n          handleSubmit(schedules);\n        }, 500)\n      }\n    >\n      {({ values }) => (\n        <Form className={classes.fullWidth}>\n          <FieldArray\n            name=\"schedules\"\n            render={(arrayHelpers) => (\n              <Grid spacing={4} container>\n                {values.schedules.map((item, index) => {\n                  return (\n                      <Container>\n                          <FastField\n                            as={TextField}\n                            label=\"Dia da Semana\"\n                            name={`schedules[${index}].weekday`}\n                            disabled\n                            variant=\"outlined\"\n                            style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                            margin=\"dense\"\n                          />\n                          <FastField\n                            name={`schedules[${index}].startTime`}\n                            >\n                            {({ field }) => (\n                              <NumberFormat\n                                label=\"Hora de Inicial\"\n                                {...field}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                customInput={TextField}\n                                format=\"##:##\"\n                                style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                              />\n                            )}\n                          </FastField>\n                          <FastField\n                            name={`schedules[${index}].endTime`}\n                            >\n                            {({ field }) => (\n                              <NumberFormat\n                                label=\"Hora de Final\"\n                                {...field}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                customInput={TextField}\n                                format=\"##:##\"\n                                style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                              />\n                            )}\n                          </FastField>\n\n                      </Container>\n\n                  );\n                })}\n              </Grid>\n            )}\n          ></FieldArray>\n          <div style={{ textAlign: \"center\", marginTop: \"2%\" }} className={classes.buttonContainer}>\n            <ButtonWithSpinner\n              loading={loading}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              {labelSaveButton ?? \"Salvar\"}\n            </ButtonWithSpinner>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default SchedulesForm;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchips: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tchip: {\n\t\tmargin: 2,\n\t},\n}));\n\nconst QueueSelectCustom = ({ selectedQueueIds, companyId, onChange }) => {\n\tconst classes = useStyles();\n\tconst [queues, setQueues] = useState([]);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(\"/queue\", {\n\t\t\t\t\tparams: { companyId }\n\t\t\t\t});\n\t\t\t\tsetQueues(data);\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t})();\n\t}, [companyId]);\n\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div style={{ marginTop: 6 }}>\n\t\t\t<FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n\t\t\t\t<InputLabel>{i18n.t(\"queueSelect.inputLabel\")}</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tmultiple\n\t\t\t\t\tlabelWidth={60}\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t{selected?.length > 0 &&\n\t\t\t\t\t\t\t\tselected.map(id => {\n\t\t\t\t\t\t\t\t\tconst queue = queues.find(q => q.id === id);\n\t\t\t\t\t\t\t\t\treturn queue ? (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queue.color }}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={queue.name}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{queues.map(queue => (\n\t\t\t\t\t\t<MenuItem key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t{queue.name}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default QueueSelectCustom;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelectCustom from \"../QueueSelectCustom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst UserSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  password: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst ModalUsers = ({ open, onClose, userId, companyId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    profile: \"user\",\n  };\n\n  const { user: loggedInUser } = useContext(AuthContext);\n\n  const [user, setUser] = useState(initialState);\n  const [selectedQueueIds, setSelectedQueueIds] = useState([]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!userId) return;\n      if (open) {\n        try {\n          const { data } = await api.get(`/users/${userId}`);\n          setUser((prevState) => {\n            return { ...prevState, ...data };\n          });\n          const userQueueIds = data.queues?.map((queue) => queue.id);\n          setSelectedQueueIds(userQueueIds);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n    };\n\n    fetchUser();\n  }, [userId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setUser(initialState);\n  };\n\n  const handleSaveUser = async (values) => {\n    const userData = { ...values, companyId, queueIds: selectedQueueIds };\n    try {\n      if (userId) {\n        await api.put(`/users/${userId}`, userData);\n      } else {\n        await api.post(\"/users\", userData);\n      }\n      toast.success(i18n.t(\"userModal.success\"));\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {userId\n            ? `${i18n.t(\"userModal.title.edit\")}`\n            : `${i18n.t(\"userModal.title.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={user}\n          enableReinitialize={true}\n          validationSchema={UserSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveUser(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.name\")}\n                    autoFocus\n                    name=\"name\"\n                    error={touched.name && Boolean(errors.name)}\n                    helperText={touched.name && errors.name}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.password\")}\n                    type=\"password\"\n                    name=\"password\"\n                    error={touched.password && Boolean(errors.password)}\n                    helperText={touched.password && errors.password}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.email\")}\n                    name=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={touched.email && errors.email}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    margin=\"dense\"\n                  >\n                    <Can\n                      role={loggedInUser.profile}\n                      perform=\"user-modal:editProfile\"\n                      yes={() => (\n                        <>\n                          <InputLabel id=\"profile-selection-input-label\">\n                            {i18n.t(\"userModal.form.profile\")}\n                          </InputLabel>\n\n                          <Field\n                            as={Select}\n                            label={i18n.t(\"userModal.form.profile\")}\n                            name=\"profile\"\n                            labelId=\"profile-selection-label\"\n                            id=\"profile-selection\"\n                            required\n                          >\n                            <MenuItem value=\"admin\">Admin</MenuItem>\n                            <MenuItem value=\"user\">User</MenuItem>\n                          </Field>\n                        </>\n                      )}\n                    />\n                  </FormControl>\n                </div>\n                <Can\n                  role={loggedInUser.profile}\n                  perform=\"user-modal:editQueues\"\n                  yes={() => (\n                    <QueueSelectCustom\n                      companyId={companyId}\n                      selectedQueueIds={selectedQueueIds}\n                      onChange={(values) => setSelectedQueueIds(values)}\n                    />\n                  )}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"userModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {userId\n                    ? `${i18n.t(\"userModal.buttons.okEdit\")}`\n                    : `${i18n.t(\"userModal.buttons.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ModalUsers;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  TextField,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  IconButton,\n  Select,\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from \"formik\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nimport { Edit as EditIcon } from \"@material-ui/icons\";\n\nimport { toast } from \"react-toastify\";\nimport useCompanies from \"../../hooks/useCompanies\";\nimport usePlans from \"../../hooks/usePlans\";\nimport ModalUsers from \"../ModalUsers\";\nimport api from \"../../services/api\";\nimport { head, isArray, has } from \"lodash\";\nimport { useDate } from \"../../hooks/useDate\";\n\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  mainPaper: {\n    width: \"100%\",\n    flex: 1,\n    padding: theme.spacing(2),\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  tableContainer: {\n    width: \"100%\",\n    overflowX: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textfield: {\n    width: \"100%\",\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  row: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  control: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n  buttonContainer: {\n    textAlign: \"right\",\n    padding: theme.spacing(1),\n  },\n}));\n\nexport function CompanyForm(props) {\n  const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n  const classes = useStyles();\n  const [plans, setPlans] = useState([]);\n  const [modalUser, setModalUser] = useState(false);\n  const [firstUser, setFirstUser] = useState({});\n\n  const [record, setRecord] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    planId: \"\",\n    status: true,\n    campaignsEnabled: false,\n    dueDate: \"\",\n    recurrence: \"\",\n    ...initialValue,\n  });\n\n  const { list: listPlans } = usePlans();\n\n  useEffect(() => {\n    async function fetchData() {\n      const list = await listPlans();\n      setPlans(list);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setRecord((prev) => {\n      if (moment(initialValue).isValid()) {\n        initialValue.dueDate = moment(initialValue.dueDate).format(\n          \"YYYY-MM-DD\"\n        );\n      }\n      return {\n        ...prev,\n        ...initialValue,\n      };\n    });\n  }, [initialValue]);\n\n  const handleSubmit = async (data) => {\n    if (data.dueDate === \"\" || moment(data.dueDate).isValid() === false) {\n      data.dueDate = null;\n    }\n    onSubmit(data);\n    setRecord({ ...initialValue, dueDate: \"\" });\n  };\n\n  const handleOpenModalUsers = async () => {\n    try {\n      const { data } = await api.get(\"/users/list\", {\n        params: {\n          companyId: initialValue.id,\n        },\n      });\n      if (isArray(data) && data.length) {\n        setFirstUser(head(data));\n      }\n      setModalUser(true);\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const handleCloseModalUsers = () => {\n    setFirstUser({});\n    setModalUser(false);\n  };\n\n  const incrementDueDate = () => {\n    const data = { ...record };\n    if (data.dueDate !== \"\" && data.dueDate !== null) {\n      switch (data.recurrence) {\n        case \"MENSAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(1, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"BIMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(2, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"TRIMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(3, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"SEMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(6, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"ANUAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(12, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        default:\n          break;\n      }\n    }\n    setRecord(data);\n  };\n\n  return (\n    <>\n      <ModalUsers\n        userId={firstUser.id}\n        companyId={initialValue.id}\n        open={modalUser}\n        onClose={handleCloseModalUsers}\n      />\n      <Formik\n        enableReinitialize\n        className={classes.fullWidth}\n        initialValues={record}\n        onSubmit={(values, { resetForm }) =>\n          setTimeout(() => {\n            handleSubmit(values);\n            resetForm();\n          }, 500)\n        }\n      >\n        {(values, setValues) => (\n          <Form className={classes.fullWidth}>\n            <Grid spacing={2} justifyContent=\"flex-end\" container>\n              <Grid xs={12} sm={6} md={4} item>\n                <Field\n                  as={TextField}\n                  label=\"Nome\"\n                  name=\"name\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <Field\n                  as={TextField}\n                  label=\"E-mail\"\n                  name=\"email\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                  required\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <Field\n                  as={TextField}\n                  label=\"Telefone\"\n                  name=\"phone\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"plan-selection\">Plano</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"plan-selection\"\n                    label=\"Plano\"\n                    labelId=\"plan-selection-label\"\n                    name=\"planId\"\n                    margin=\"dense\"\n                    required\n                  >\n                    {plans.map((plan, key) => (\n                      <MenuItem key={key} value={plan.id}>\n                        {plan.name}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"status-selection\">Status</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"status-selection\"\n                    label=\"Status\"\n                    labelId=\"status-selection-label\"\n                    name=\"status\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value={true}>Sim</MenuItem>\n                    <MenuItem value={false}>Não</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"status-selection\">Campanhas</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"campaigns-selection\"\n                    label=\"Campanhas\"\n                    labelId=\"campaigns-selection-label\"\n                    name=\"campaignsEnabled\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value={true}>Habilitadas</MenuItem>\n                    <MenuItem value={false}>Desabilitadas</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Field\n                    as={TextField}\n                    label=\"Data de Vencimento\"\n                    type=\"date\"\n                    name=\"dueDate\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"dense\"\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"recorrencia-selection\">\n                    Recorrência\n                  </InputLabel>\n                  <Field\n                    as={Select}\n                    label=\"Recorrência\"\n                    labelId=\"recorrencia-selection-label\"\n                    id=\"recurrence\"\n                    name=\"recurrence\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"MENSAL\">Mensal</MenuItem>\n                    <MenuItem value=\"BIMESTRAL\">Bimestral</MenuItem>\n                    <MenuItem value=\"TRIMESTRAL\">Trimestral</MenuItem>\n                    <MenuItem value=\"SEMESTRAL\">Semestral</MenuItem>\n                    <MenuItem value=\"ANUAL\">Anual</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} item>\n                <Grid justifyContent=\"flex-end\" spacing={1} container>\n                  <Grid xs={4} md={1} item>\n                    <ButtonWithSpinner\n                      className={classes.fullWidth}\n                      style={{ marginTop: 7 }}\n                      loading={loading}\n                      onClick={() => onCancel()}\n                      variant=\"contained\"\n                    >\n                      Limpar\n                    </ButtonWithSpinner>\n                  </Grid>\n                  {record.id !== undefined ? (\n                    <>\n                      <Grid xs={6} md={1} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => onDelete(record)}\n                          variant=\"contained\"\n                          color=\"secondary\"\n                        >\n                          Excluir\n                        </ButtonWithSpinner>\n                      </Grid>\n                      <Grid xs={6} md={2} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => incrementDueDate()}\n                          variant=\"contained\"\n                          color=\"primary\"\n                        >\n                          + Vencimento\n                        </ButtonWithSpinner>\n                      </Grid>\n                      <Grid xs={6} md={1} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => handleOpenModalUsers()}\n                          variant=\"contained\"\n                          color=\"primary\"\n                        >\n                          Usuário\n                        </ButtonWithSpinner>\n                      </Grid>\n                    </>\n                  ) : null}\n                  <Grid xs={6} md={1} item>\n                    <ButtonWithSpinner\n                      className={classes.fullWidth}\n                      style={{ marginTop: 7 }}\n                      loading={loading}\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Salvar\n                    </ButtonWithSpinner>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport function CompaniesManagerGrid(props) {\n  const { records, onSelect } = props;\n  const classes = useStyles();\n  const { dateToClient } = useDate();\n\n  const renderStatus = (row) => {\n    return row.status === false ? \"Não\" : \"Sim\";\n  };\n\n  const renderPlan = (row) => {\n    return row.planId !== null ? row.plan.name : \"-\";\n  };\n\n  const renderCampaignsStatus = (row) => {\n    if (\n      has(row, \"settings\") &&\n      isArray(row.settings) &&\n      row.settings.length > 0\n    ) {\n      const setting = row.settings.find((s) => s.key === \"campaignsEnabled\");\n      if (setting) {\n        return setting.value === \"true\" ? \"Habilitadas\" : \"Desabilitadas\";\n      }\n    }\n    return \"Desabilitadas\";\n  };\n\n  const rowStyle = (record) => {\n    if (moment(record.dueDate).isValid()) {\n      const now = moment();\n      const dueDate = moment(record.dueDate);\n      const diff = dueDate.diff(now, \"days\");\n      if (diff === 5) {\n        return { backgroundColor: \"#fffead\" };\n      }\n      if (diff >= -3 && diff <= 4) {\n        return { backgroundColor: \"#f7cc8f\" };\n      }\n      if (diff === -4) {\n        return { backgroundColor: \"#fa8c8c\" };\n      }\n    }\n    return {};\n  };\n\n  return (\n    <Paper className={classes.tableContainer}>\n      <Table\n        className={classes.fullWidth}\n        size=\"small\"\n        aria-label=\"a dense table\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" style={{ width: \"1%\" }}>\n              #\n            </TableCell>\n            <TableCell align=\"left\">Nome</TableCell>\n            <TableCell align=\"left\">E-mail</TableCell>\n            <TableCell align=\"left\">Telefone</TableCell>\n            <TableCell align=\"left\">Plano</TableCell>\n            <TableCell align=\"left\">Campanhas</TableCell>\n            <TableCell align=\"left\">Status</TableCell>\n            <TableCell align=\"left\">Criada Em</TableCell>\n            <TableCell align=\"left\">Vencimento</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {records.map((row, key) => (\n            <TableRow style={rowStyle(row)} key={key}>\n              <TableCell align=\"center\" style={{ width: \"1%\" }}>\n                <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                  <EditIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"left\">{row.name || \"-\"}</TableCell>\n              <TableCell align=\"left\">{row.email || \"-\"}</TableCell>\n              <TableCell align=\"left\">{row.phone || \"-\"}</TableCell>\n              <TableCell align=\"left\">{renderPlan(row)}</TableCell>\n              <TableCell align=\"left\">{renderCampaignsStatus(row)}</TableCell>\n              <TableCell align=\"left\">{renderStatus(row)}</TableCell>\n              <TableCell align=\"left\">{dateToClient(row.createdAt)}</TableCell>\n              <TableCell align=\"left\">\n                {dateToClient(row.dueDate)}\n                <br />\n                <span>{row.recurrence}</span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default function CompaniesManager() {\n  const classes = useStyles();\n  const { list, save, update, remove } = useCompanies();\n\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [records, setRecords] = useState([]);\n  const [record, setRecord] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    planId: \"\",\n    status: true,\n    campaignsEnabled: false,\n    dueDate: \"\",\n    recurrence: \"\",\n  });\n\n  useEffect(() => {\n    loadPlans();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loadPlans = async () => {\n    setLoading(true);\n    try {\n      const companyList = await list();\n      setRecords(companyList);\n    } catch (e) {\n      toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n  const handleSubmit = async (data) => {\n    setLoading(true);\n    try {\n      if (data.id !== undefined) {\n        await update(data);\n      } else {\n        await save(data);\n      }\n      await loadPlans();\n      handleCancel();\n      toast.success(\"Operação realizada com sucesso!\");\n    } catch (e) {\n      toast.error(\n        \"Não foi possível realizar a operação. Verifique se já existe uma empresa com o mesmo nome ou se os campos foram preenchidos corretamente\"\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    setLoading(true);\n    try {\n      await remove(record.id);\n      await loadPlans();\n      handleCancel();\n      toast.success(\"Operação realizada com sucesso!\");\n    } catch (e) {\n      toast.error(\"Não foi possível realizar a operação\");\n    }\n    setLoading(false);\n  };\n\n  const handleOpenDeleteDialog = () => {\n    setShowConfirmDialog(true);\n  };\n\n  const handleCancel = () => {\n    setRecord((prev) => ({\n      ...prev,\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      planId: \"\",\n      status: true,\n      campaignsEnabled: false,\n      dueDate: \"\",\n      recurrence: \"\",\n    }));\n  };\n\n  const handleSelect = (data) => {\n    let campaignsEnabled = false;\n\n    const setting = data.settings.find(\n      (s) => s.key.indexOf(\"campaignsEnabled\") > -1\n    );\n    if (setting) {\n      campaignsEnabled =\n        setting.value === \"true\" || setting.value === \"enabled\";\n    }\n\n    setRecord((prev) => ({\n      ...prev,\n      id: data.id,\n      name: data.name || \"\",\n      phone: data.phone || \"\",\n      email: data.email || \"\",\n      planId: data.planId || \"\",\n      status: data.status === false ? false : true,\n      campaignsEnabled,\n      dueDate: data.dueDate || \"\",\n      recurrence: data.recurrence || \"\",\n    }));\n  };\n\n  return (\n    <Paper className={classes.mainPaper} elevation={0}>\n      <Grid spacing={2} container>\n        <Grid xs={12} item>\n          <CompanyForm\n            initialValue={record}\n            onDelete={handleOpenDeleteDialog}\n            onSubmit={handleSubmit}\n            onCancel={handleCancel}\n            loading={loading}\n          />\n        </Grid>\n        <Grid xs={12} item>\n          <CompaniesManagerGrid records={records} onSelect={handleSelect} />\n        </Grid>\n      </Grid>\n      <ConfirmationModal\n        title=\"Exclusão de Registro\"\n        open={showConfirmDialog}\n        onClose={() => setShowConfirmDialog(false)}\n        onConfirm={() => handleDelete()}\n      >\n        Deseja realmente excluir esse registro?\n      </ConfirmationModal>\n    </Paper>\n  );\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst defaultMaskOptions = {\n  prefix: 'R$',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n}\n\nconst CurrencyInput = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />\n}\n\nCurrencyInput.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {},\n}\n\nCurrencyInput.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.bool,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.bool,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.bool,\n    allowNegative: PropTypes.bool,\n    allowLeadingZeroes: PropTypes.bool,\n    integerLimit: PropTypes.number,\n  }),\n}\n\nexport default CurrencyInput\n","import React, { useState, useEffect } from \"react\";\nimport {\n    makeStyles,\n    Paper,\n    Grid,\n    TextField,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    IconButton\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from 'formik';\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport CurrencyInput from \"../CurrencyInput\";\nimport InputMask from 'react-input-mask'\nimport { Edit as EditIcon } from \"@material-ui/icons\";\nimport CurrencyFormat from 'react-currency-format';\nimport MaskedInput from 'react-text-mask'\n\nimport { toast } from \"react-toastify\";\nimport usePlans from \"../../hooks/usePlans\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%'\n    },\n    mainPaper: {\n        width: '100%',\n        flex: 1,\n        padding: theme.spacing(2)\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    tableContainer: {\n        width: '100%',\n        overflowX: \"scroll\",\n        ...theme.scrollbarStyles\n    },\n    textfield: {\n        width: '100%'\n    },\n    textRight: {\n        textAlign: 'right'\n    },\n    row: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2)\n    },\n    control: {\n        paddingRight: theme.spacing(1),\n        paddingLeft: theme.spacing(1)\n    },\n    buttonContainer: {\n        textAlign: 'right',\n        padding: theme.spacing(1)\n    }\n}));\n\nexport function PlanManagerForm(props) {\n    const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n    const classes = useStyles()\n\n    const [record, setRecord] = useState({\n        name: '',\n        users: 0,\n        connections: 0,\n        queues: 0,\n        value: 0\n    });\n\n    useEffect(() => {\n        setRecord(initialValue)\n    }, [initialValue])\n\n    const handleSubmit = async (data) => {\n        onSubmit(data)\n    }\n\n    return (\n        <Formik\n            enableReinitialize\n            className={classes.fullWidth}\n            initialValues={record}\n            onSubmit={(values, { resetForm }) =>\n                setTimeout(() => {\n                    handleSubmit(values)\n                    resetForm()\n                }, 500)\n            }\n        >\n            {(values) => (\n                <Form className={classes.fullWidth}>\n                    <Grid spacing={2} justifyContent=\"flex-end\" container>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Nome\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Valor\"\n                                name=\"value\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"text\"\n                            />\n\n\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Usuários\"\n                                name=\"users\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Conexões\"\n                                name=\"connections\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Filas\"\n                                name=\"queues\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Grid justifyContent=\"flex-end\" spacing={1} container>\n                                <Grid xs={4} md={1} item>\n                                    <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onCancel()} variant=\"contained\">\n                                        Limpar\n                                    </ButtonWithSpinner>\n                                </Grid>\n                                {record.id !== undefined ? (\n                                    <Grid xs={4} md={1} item>\n                                        <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onDelete(record)} variant=\"contained\" color=\"secondary\">\n                                            Excluir\n                                        </ButtonWithSpinner>\n                                    </Grid>\n                                ) : null}\n                                <Grid xs={4} md={1} item>\n                                    <ButtonWithSpinner className={classes.fullWidth} loading={loading} type=\"submit\" variant=\"contained\" color=\"primary\">\n                                        Salvar\n                                    </ButtonWithSpinner>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )\n            }\n        </Formik >\n    )\n}\n\nexport function PlansManagerGrid(props) {\n    const { records, onSelect } = props\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.tableContainer}>\n            <Table className={classes.fullWidth} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" style={{ width: '1%' }}>#</TableCell>\n                        <TableCell align=\"left\">Nome</TableCell>\n                        <TableCell align=\"center\">Usuários</TableCell>\n                        <TableCell align=\"center\">Conexões</TableCell>\n                        <TableCell align=\"center\">Filas</TableCell>\n                        <TableCell align=\"center\">Valor</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {records.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell align=\"center\" style={{ width: '1%' }}>\n                                <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                                    <EditIcon />\n                                </IconButton>\n                            </TableCell>\n                            <TableCell align=\"left\">{row.name || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.users || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.connections || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.queues || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.value.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) || '-'}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    )\n}\n\nexport default function PlansManager() {\n    const classes = useStyles()\n    const { list, save, update, remove } = usePlans()\n\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([])\n    const [record, setRecord] = useState({\n        name: '',\n        users: 0,\n        connections: 0,\n        queues: 0,\n        value: 0\n    })\n\n    useEffect(() => {\n        async function fetchData() {\n            await loadPlans()\n        }\n        fetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const loadPlans = async () => {\n        setLoading(true)\n        try {\n            const planList = await list()\n            setRecords(planList)\n        } catch (e) {\n            toast.error('Não foi possível carregar a lista de registros')\n        }\n        setLoading(false)\n    }\n\n    const handleSubmit = async (data) => {\n        const datanew = {\n            id: data.id,\n            connections: data.connections,\n            name: data.name,\n            queues: data.queues,\n            users: data.users,\n            value: data.value.replace(\",\", \".\")\n        }\n        setLoading(true)\n        try {\n            if (data.id !== undefined) {\n                await update(datanew)\n            } else {\n                await save(datanew)\n            }\n            await loadPlans()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação. Verifique se já existe uma plano com o mesmo nome ou se os campos foram preenchidos corretamente')\n        }\n        setLoading(false)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await remove(record.id)\n            await loadPlans()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação')\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDeleteDialog = () => {\n        setShowConfirmDialog(true)\n    }\n\n    const handleCancel = () => {\n        setRecord({\n            name: '',\n            users: 0,\n            connections: 0,\n            queues: 0,\n            value: 0\n        })\n    }\n\n    const handleSelect = (data) => {\n        setRecord({\n            id: data.id,\n            name: data.name || '',\n            users: data.users || 0,\n            connections: data.connections || 0,\n            queues: data.queues || 0,\n            value: data.value.toLocaleString('pt-br', { minimumFractionDigits: 2 }) || 0\n        })\n    }\n\n    return (\n        <Paper className={classes.mainPaper} elevation={0}>\n            <Grid spacing={2} container>\n                <Grid xs={12} item>\n                    <PlanManagerForm\n                        initialValue={record}\n                        onDelete={handleOpenDeleteDialog}\n                        onSubmit={handleSubmit}\n                        onCancel={handleCancel}\n                        loading={loading}\n                    />\n                </Grid>\n                <Grid xs={12} item>\n                    <PlansManagerGrid\n                        records={records}\n                        onSelect={handleSelect}\n                    />\n                </Grid>\n            </Grid>\n            <ConfirmationModal\n                title=\"Exclusão de Registro\"\n                open={showConfirmDialog}\n                onClose={() => setShowConfirmDialog(false)}\n                onConfirm={() => handleDelete()}\n            >\n                Deseja realmente excluir esse registro?\n            </ConfirmationModal>\n        </Paper>\n    )\n}","import api from \"../../services/api\";\n\nconst usePlans = () => {\n\n    const findAll = async (params) => {\n        const { data } = await api.request({\n            url: `/helps`,\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/helps/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/helps',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/helps/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/helps/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    return {\n        findAll,\n        list,\n        save,\n        update,\n        remove\n    }\n}\n\nexport default usePlans;","import React, { useState, useEffect } from \"react\";\nimport {\n    makeStyles,\n    Paper,\n    Grid,\n    TextField,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    IconButton\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from 'formik';\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nimport { Edit as EditIcon } from \"@material-ui/icons\";\n\nimport { toast } from \"react-toastify\";\nimport useHelps from \"../../hooks/useHelps\";\n\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%'\n\t},\n    mainPaper: {\n\t\twidth: '100%',\n\t\tflex: 1,\n\t\tpadding: theme.spacing(2)\n    },\n\tfullWidth: {\n\t\twidth: '100%'\n\t},\n    tableContainer: {\n\t\twidth: '100%',\n\t\toverflowX: \"scroll\",\n\t\t...theme.scrollbarStyles\n    },\n\ttextfield: {\n\t\twidth: '100%'\n\t},\n    textRight: {\n        textAlign: 'right'\n    },\n    row: {\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2)\n    },\n    control: {\n\t\tpaddingRight: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1)\n\t},\n    buttonContainer: {\n        textAlign: 'right',\n\t\tpadding: theme.spacing(1)\n\t}\n}));\n\nexport function HelpManagerForm (props) {\n    const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n    const classes = useStyles()\n\n    const [record, setRecord] = useState(initialValue);\n\n    useEffect(() => {\n        setRecord(initialValue)\n    }, [initialValue])\n\n    const handleSubmit = async(data) => {\n        onSubmit(data)\n    }\n\n    return (\n        <Formik\n            enableReinitialize\n            className={classes.fullWidth}\n            initialValues={record}\n            onSubmit={(values, { resetForm }) =>\n                setTimeout(() => {\n                    handleSubmit(values)\n                    resetForm()\n                }, 500)\n            }\n        >\n            {(values) => (\n                <Form className={classes.fullWidth}>\n                    <Grid spacing={2} justifyContent=\"flex-end\" container>\n                        <Grid xs={12} sm={6} md={3} item>\n                            <Field\n                                as={TextField}\n                                label=\"Título\"\n                                name=\"title\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={3} item>\n                            <Field\n                                as={TextField}\n                                label=\"Código do Vídeo\"\n                                name=\"video\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={12} md={6} item>\n                            <Field\n                                as={TextField}\n                                label=\"Descrição\"\n                                name=\"description\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid sm={3} md={1} item>\n                            <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onCancel()} variant=\"contained\">\n                                Limpar\n                            </ButtonWithSpinner>\n                        </Grid>\n                        { record.id !== undefined ? (\n                            <Grid sm={3} md={1} item>\n                                <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onDelete(record)} variant=\"contained\" color=\"secondary\">\n                                    Excluir\n                                </ButtonWithSpinner>\n                            </Grid>\n                        ) : null}\n                        <Grid sm={3} md={1} item>\n                            <ButtonWithSpinner className={classes.fullWidth} loading={loading} type=\"submit\" variant=\"contained\" color=\"primary\">\n                                Salvar\n                            </ButtonWithSpinner>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport function HelpsManagerGrid (props) {\n    const { records, onSelect } = props\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.tableContainer}>\n            <Table className={classes.fullWidth} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\" style={{width: '1%'}}>#</TableCell>\n                    <TableCell align=\"left\">Título</TableCell>\n                    <TableCell align=\"left\">Descrição</TableCell>\n                    <TableCell align=\"left\">Vídeo</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {records.map((row) => (\n                    <TableRow key={row.id}>\n                        <TableCell align=\"center\" style={{width: '1%'}}>\n                            <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                                <EditIcon />\n                            </IconButton>\n                        </TableCell>\n                        <TableCell align=\"left\">{row.title || '-'}</TableCell>\n                        <TableCell align=\"left\">{row.description || '-'}</TableCell>\n                        <TableCell align=\"left\">{row.video || '-'}</TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    )\n}\n\nexport default function HelpsManager () {\n    const classes = useStyles()\n    const { list, save, update, remove } = useHelps()\n    \n    const [showConfirmDialog, setShowConfirmDialog] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([])\n    const [record, setRecord] = useState({\n        title: '',\n        description: '',\n        video: ''\n    })\n\n    useEffect(() => {\n        async function fetchData () {\n            await loadHelps()\n        }\n        fetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const loadHelps = async () => {\n        setLoading(true)\n        try {\n            const helpList = await list()\n            setRecords(helpList)\n        } catch (e) {\n            toast.error('Não foi possível carregar a lista de registros')\n        }\n        setLoading(false)\n    }\n\n    const handleSubmit = async (data) => {\n        setLoading(true)\n        try {\n            if (data.id !== undefined) {\n                await update(data)\n            } else {\n                await save(data)\n            }\n            await loadHelps()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação. Verifique se já existe uma helpo com o mesmo nome ou se os campos foram preenchidos corretamente')\n        }\n        setLoading(false)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await remove(record.id)\n            await loadHelps()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação')\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDeleteDialog = () => {\n        setShowConfirmDialog(true)\n    }\n\n    const handleCancel = () => {\n        setRecord({\n            title: '',\n            description: '',\n            video: ''\n        })\n    }\n\n    const handleSelect = (data) => {\n        setRecord({\n            id: data.id,\n            title: data.title || '',\n            description: data.description || '',\n            video: data.video || ''\n        })\n    }\n\n    return (\n        <Paper className={classes.mainPaper} elevation={0}>\n            <Grid spacing={2} container>\n                <Grid xs={12} item>\n                    <HelpManagerForm \n                        initialValue={record} \n                        onDelete={handleOpenDeleteDialog} \n                        onSubmit={handleSubmit} \n                        onCancel={handleCancel} \n                        loading={loading}\n                    />\n                </Grid>\n                <Grid xs={12} item>\n                    <HelpsManagerGrid \n                        records={records}\n                        onSelect={handleSelect}\n                    />\n                </Grid>\n            </Grid>\n            <ConfirmationModal\n                title=\"Exclusão de Registro\"\n                open={showConfirmDialog}\n                onClose={() => setShowConfirmDialog(false)}\n                onConfirm={() => handleDelete()}\n            >\n                Deseja realmente excluir esse registro?\n            </ConfirmationModal>\n        </Paper>\n    )\n}","import api from \"../../services/api\";\n\nconst useSettings = () => {\n\n    const getAll = async (params) => {\n        const { data } = await api.request({\n            url: '/settings',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/settings/${data.key}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    return {\n\t\tgetAll,\n        update\n    }\n}\n\nexport default useSettings;","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../Title\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useSettings from \"../../hooks/useSettings\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport { Tabs, Tab } from \"@material-ui/core\";\n\n//import 'react-toastify/dist/ReactToastify.css';\n \nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 240,\n  },\n  tab: {\n    backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n    borderRadius: 4,\n    width: \"100%\",    \n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"center\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 12,\n    width: \"100%\",\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700],\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\",\n  },\n  alignRight: {\n    textAlign: \"right\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n}));\n\nexport default function Options(props) {\n  const { settings, scheduleTypeChanged } = props;\n  const classes = useStyles();\n  const [userRating, setUserRating] = useState(\"disabled\");\n  const [scheduleType, setScheduleType] = useState(\"disabled\");\n  const [callType, setCallType] = useState(\"enabled\");\n  const [chatbotType, setChatbotType] = useState(\"\");\n  const [CheckMsgIsGroup, setCheckMsgIsGroupType] = useState(\"enabled\");\n  const [outsideMessageType, setOutsideMessageType] = useState(\"disabled\");\n  const [loadingUserRating, setLoadingUserRating] = useState(false);\n  const [loadingScheduleType, setLoadingScheduleType] = useState(false);\n  const [loadingCallType, setLoadingCallType] = useState(false);\n  const [loadingChatbotType, setLoadingChatbotType] = useState(false);\n  const [loadingCheckMsgIsGroup, setCheckMsgIsGroup] = useState(false);\n\n  const [loadingOutsideMessageType, setLoadingOutsideMessageType] = useState(false);\n  const [loadingOutsideQueueType, setLoadingOutsideQueueType] = useState(false);\n\n\n  const [ipixcType, setIpIxcType] = useState(\"\");\n  const [loadingIpIxcType, setLoadingIpIxcType] = useState(false);\n  const [tokenixcType, setTokenIxcType] = useState(\"\");\n  const [loadingTokenIxcType, setLoadingTokenIxcType] = useState(false);\n\n  const [ipmkauthType, setIpMkauthType] = useState(\"\");\n  const [loadingIpMkauthType, setLoadingIpMkauthType] = useState(false);\n  const [clientidmkauthType, setClientIdMkauthType] = useState(\"\");\n  const [loadingClientIdMkauthType, setLoadingClientIdMkauthType] = useState(false);\n  const [clientsecretmkauthType, setClientSecrectMkauthType] = useState(\"\");\n  const [loadingClientSecrectMkauthType, setLoadingClientSecrectMkauthType] = useState(false);\n\n  const [asaasType, setAsaasType] = useState(\"\");\n  const [loadingAsaasType, setLoadingAsaasType] = useState(false);\n\n  const { update } = useSettings();\n\n  useEffect(() => {\n    if (Array.isArray(settings) && settings.length) {\n      const userRating = settings.find((s) => s.key === \"userRating\");\n      if (userRating) {\n        setUserRating(userRating.value);\n      }\n      const scheduleType = settings.find((s) => s.key === \"scheduleType\");\n      if (scheduleType) {\n        setScheduleType(scheduleType.value);\n      }\n      const callType = settings.find((s) => s.key === \"call\");\n      if (callType) {\n        setCallType(callType.value);\n      }\n      const CheckMsgIsGroup = settings.find((s) => s.key === \"CheckMsgIsGroup\");\n      if (CheckMsgIsGroup) {\n        setCheckMsgIsGroupType(CheckMsgIsGroup.value);\n      }\n      const chatbotType = settings.find((s) => s.key === \"chatBotType\");\n      if (chatbotType) {\n        setChatbotType(chatbotType.value);\n      }\n\n      const ipixcType = settings.find((s) => s.key === \"ipixc\");\n      if (ipixcType) {\n        setIpIxcType(ipixcType.value);\n      }\n\n      const tokenixcType = settings.find((s) => s.key === \"tokenixc\");\n      if (tokenixcType) {\n        setTokenIxcType(tokenixcType.value);\n      }\n\n      const ipmkauthType = settings.find((s) => s.key === \"ipmkauth\");\n      if (ipmkauthType) {\n        setIpMkauthType(ipmkauthType.value);\n      }\n\n      const clientidmkauthType = settings.find((s) => s.key === \"clientidmkauth\");\n      if (clientidmkauthType) {\n        setClientIdMkauthType(clientidmkauthType.value);\n      }\n\n      const clientsecretmkauthType = settings.find((s) => s.key === \"clientsecretmkauth\");\n      if (clientsecretmkauthType) {\n        setClientSecrectMkauthType(clientsecretmkauthType.value);\n      }\n\n      const asaasType = settings.find((s) => s.key === \"asaas\");\n      if (asaasType) {\n        setAsaasType(asaasType.value);\n      }\n    \n      const outsideMessageType = settings.find((s) => s.key === \"outsidemessage\");\n      if (outsideMessageType) {\n        setOutsideMessageType(outsideMessageType.value);\n      }\n    \n    \n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  async function handleChangeUserRating(value) {\n    setUserRating(value);\n    setLoadingUserRating(true);\n    await update({\n      key: \"userRating\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingUserRating(false);\n  }\n\n  async function handleScheduleType(value) {\n    setScheduleType(value);\n    setLoadingScheduleType(true);\n    await update({\n      key: \"scheduleType\",\n      value,\n    });\n    //toast.success(\"Oraçãpeo atualizada com sucesso.\");\n    toast.success('Operação atualizada com sucesso.', {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      theme: \"light\",\n      });\n    setLoadingScheduleType(false);\n    if (typeof scheduleTypeChanged === \"function\") {\n      scheduleTypeChanged(value);\n    }\n  }\n\n  async function handleCallType(value) {\n    setCallType(value);\n    setLoadingCallType(true);\n    await update({\n      key: \"call\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingCallType(false);\n  }\n\n  async function handleChatbotType(value) {\n    setChatbotType(value);\n    setLoadingChatbotType(true);\n    await update({\n      key: \"chatBotType\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingChatbotType(false);\n  }\n\n  async function handleGroupType(value) {\n    setCheckMsgIsGroupType(value);\n    setCheckMsgIsGroup(true);\n    await update({\n      key: \"CheckMsgIsGroup\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setCheckMsgIsGroup(false);\n    /*     if (typeof scheduleTypeChanged === \"function\") {\n          scheduleTypeChanged(value);\n        } */\n  }\n\n  async function handleChangeIPIxc(value) {\n    setIpIxcType(value);\n    setLoadingIpIxcType(true);\n    await update({\n      key: \"ipixc\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingIpIxcType(false);\n  }\n\n  async function handleChangeTokenIxc(value) {\n    setTokenIxcType(value);\n    setLoadingTokenIxcType(true);\n    await update({\n      key: \"tokenixc\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingTokenIxcType(false);\n  }\n\n  async function handleChangeIpMkauth(value) {\n    setIpMkauthType(value);\n    setLoadingIpMkauthType(true);\n    await update({\n      key: \"ipmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingIpMkauthType(false);\n  }\n\n  async function handleOutsideMessageType(value) {\n    setOutsideMessageType(value);\n    setLoadingOutsideMessageType(true);\n    await update({\n      key: \"outsidemessage\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingOutsideMessageType(false);\n  }\n\n  async function handleChangeClientIdMkauth(value) {\n    setClientIdMkauthType(value);\n    setLoadingClientIdMkauthType(true);\n    await update({\n      key: \"clientidmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingClientIdMkauthType(false);\n  }\n\n  async function handleChangeClientSecrectMkauth(value) {\n    setClientSecrectMkauthType(value);\n    setLoadingClientSecrectMkauthType(true);\n    await update({\n      key: \"clientsecretmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingClientSecrectMkauthType(false);\n  }\n\n  async function handleChangeAsaas(value) {\n    setAsaasType(value);\n    setLoadingAsaasType(true);\n    await update({\n      key: \"asaas\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingAsaasType(false);\n  }\n  return (\n    <>\n      <Grid spacing={3} container>\n        {/* <Grid xs={12} item>\n                    <Title>Configurações Gerais</Title>\n                </Grid> */}\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"ratings-label\">Avaliações</InputLabel>\n            <Select\n              labelId=\"ratings-label\"\n              value={userRating}\n              onChange={async (e) => {\n                handleChangeUserRating(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desabilitadas</MenuItem>\n              <MenuItem value={\"enabled\"}>Habilitadas</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingUserRating && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"schedule-type-label\">\n              Gerenciamento de Expediente\n            </InputLabel>\n            <Select\n              labelId=\"schedule-type-label\"\n              value={scheduleType}\n              onChange={async (e) => {\n                handleScheduleType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desabilitado</MenuItem>\n              <MenuItem value={\"queue\"}>Gerenciamento Por Fila</MenuItem>\n              <MenuItem value={\"company\"}>Gerenciamento Por Empresa</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingScheduleType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"group-type-label\">\n              Ignorar Mensagens de Grupos\n            </InputLabel>\n            <Select\n              labelId=\"group-type-label\"\n              value={CheckMsgIsGroup}\n              onChange={async (e) => {\n                handleGroupType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desativado</MenuItem>\n              <MenuItem value={\"enabled\"}>Ativado</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingScheduleType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"call-type-label\">\n              Aceitar Chamada\n            </InputLabel>\n            <Select\n              labelId=\"call-type-label\"\n              value={callType}\n              onChange={async (e) => {\n                handleCallType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Não Aceitar</MenuItem>\n              <MenuItem value={\"enabled\"}>Aceitar</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingCallType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"chatbot-type-label\">\n              Tipo Chatbot\n            </InputLabel>\n            <Select\n              labelId=\"chatbot-type-label\"\n              value={chatbotType}\n              onChange={async (e) => {\n                handleChatbotType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"text\"}>Texto</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingChatbotType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n\t\t\n\t\t<Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"outsidemessage-type-label\">\n              Abrir Tickets Fora do Expediente?\n            </InputLabel>\n            <Select\n              labelId=\"outsidemessage-type-label\"\n              value={outsideMessageType}\n              onChange={async (e) => {\n                handleOutsideMessageType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Não</MenuItem>\n              <MenuItem value={\"enabled\"}>Sim</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingOutsideMessageType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n\n\n\n      </Grid>\n      <Grid spacing={3} container>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n          style={{\n            marginBottom: 20,\n            marginTop: 20\n          }}\n        >\n          <Tab\n\n            label=\"INTEGRAÇÕES\" />\n\n        </Tabs>\n\n      </Grid>\n\n      {/*-----------------IXC-----------------*/}\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab\n\n            label=\"IXC\" />\n\n        </Tabs>\n        <Grid xs={12} sm={6} md={6} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"ipixc\"\n              name=\"ipixc\"\n              margin=\"dense\"\n              label=\"IP do IXC\"\n              variant=\"outlined\"\n              value={ipixcType}\n              onChange={async (e) => {\n                handleChangeIPIxc(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingIpIxcType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={6} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"tokenixc\"\n              name=\"tokenixc\"\n              margin=\"dense\"\n              label=\"Token do IXC\"\n              variant=\"outlined\"\n              value={tokenixcType}\n              onChange={async (e) => {\n                handleChangeTokenIxc(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingTokenIxcType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      {/*-----------------MK-AUTH-----------------*/}\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab label=\"MK-AUTH\" />\n\n        </Tabs>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"ipmkauth\"\n              name=\"ipmkauth\"\n              margin=\"dense\"\n              label=\"Ip Mk-Auth\"\n              variant=\"outlined\"\n              value={ipmkauthType}\n              onChange={async (e) => {\n                handleChangeIpMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingIpMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"clientidmkauth\"\n              name=\"clientidmkauth\"\n              margin=\"dense\"\n              label=\"Client Id\"\n              variant=\"outlined\"\n              value={clientidmkauthType}\n              onChange={async (e) => {\n                handleChangeClientIdMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingClientIdMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"clientsecretmkauth\"\n              name=\"clientsecretmkauth\"\n              margin=\"dense\"\n              label=\"Client Secret\"\n              variant=\"outlined\"\n              value={clientsecretmkauthType}\n              onChange={async (e) => {\n                handleChangeClientSecrectMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingClientSecrectMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      {/*-----------------ASAAS-----------------*/}\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab label=\"ASAAS\" />\n\n        </Tabs>\n        <Grid xs={12} sm={12} md={12} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"asaas\"\n              name=\"asaas\"\n              margin=\"dense\"\n              label=\"Token Asaas\"\n              variant=\"outlined\"\n              value={asaasType}\n              onChange={async (e) => {\n                handleChangeAsaas(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingAsaasType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n","const OnlyForSuperUser = ({ user, yes, no }) => user.super ? yes() : no();\n\nOnlyForSuperUser.defaultProps = {\n    user: {},\n\tyes: () => null,\n\tno: () => null,\n};\n\nexport default OnlyForSuperUser;","import React, { useState, useEffect } from \"react\";\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport { makeStyles, Paper, Tabs, Tab } from \"@material-ui/core\";\n\nimport TabPanel from \"../../components/TabPanel\";\n\nimport SchedulesForm from \"../../components/SchedulesForm\";\nimport CompaniesManager from \"../../components/CompaniesManager\";\nimport PlansManager from \"../../components/PlansManager\";\nimport HelpsManager from \"../../components/HelpsManager\";\nimport Options from \"../../components/Settings/Options\";\n\nimport { i18n } from \"../../translate/i18n.js\";\nimport { toast } from \"react-toastify\";\n\nimport useCompanies from \"../../hooks/useCompanies\";\nimport useAuth from \"../../hooks/useAuth.js\";\nimport useSettings from \"../../hooks/useSettings\";\n\nimport OnlyForSuperUser from \"../../components/OnlyForSuperUser\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  mainPaper: {\n    ...theme.scrollbarStyles,\n    overflowY: \"scroll\",\n    flex: 1,\n  },\n  tab: {\n    backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n    borderRadius: 4,\n  },\n  paper: {\n    ...theme.scrollbarStyles,\n    overflowY: \"scroll\",\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  container: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n  },\n  control: {\n    padding: theme.spacing(1),\n  },\n  textfield: {\n    width: \"100%\",\n  },\n}));\n\nconst SettingsCustom = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(\"options\");\n  const [schedules, setSchedules] = useState([]);\n  const [company, setCompany] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [settings, setSettings] = useState({});\n  const [schedulesEnabled, setSchedulesEnabled] = useState(false);\n\n  const { getCurrentUserInfo } = useAuth();\n  const { find, updateSchedules } = useCompanies();\n  const { getAll: getAllSettings } = useSettings();\n\n  useEffect(() => {\n    async function findData() {\n      setLoading(true);\n      try {\n        const companyId = localStorage.getItem(\"companyId\");\n        const company = await find(companyId);\n        const settingList = await getAllSettings();\n        setCompany(company);\n        setSchedules(company.schedules);\n        setSettings(settingList);\n\n        if (Array.isArray(settingList)) {\n          const scheduleType = settingList.find(\n            (d) => d.key === \"scheduleType\"\n          );\n          if (scheduleType) {\n            setSchedulesEnabled(scheduleType.value === \"company\");\n          }\n        }\n\n        const user = await getCurrentUserInfo();\n        setCurrentUser(user);\n      } catch (e) {\n        toast.error(e);\n      }\n      setLoading(false);\n    }\n    findData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleTabChange = (event, newValue) => {\n      async function findData() {\n        setLoading(true);\n        try {\n          const companyId = localStorage.getItem(\"companyId\");\n          const company = await find(companyId);\n          const settingList = await getAllSettings();\n          setCompany(company);\n          setSchedules(company.schedules);\n          setSettings(settingList);\n  \n          if (Array.isArray(settingList)) {\n            const scheduleType = settingList.find(\n              (d) => d.key === \"scheduleType\"\n            );\n            if (scheduleType) {\n              setSchedulesEnabled(scheduleType.value === \"company\");\n            }\n          }\n  \n          const user = await getCurrentUserInfo();\n          setCurrentUser(user);\n        } catch (e) {\n          toast.error(e);\n        }\n        setLoading(false);\n      }\n      findData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    setTab(newValue);\n  };\n\n  const handleSubmitSchedules = async (data) => {\n    setLoading(true);\n    try {\n      setSchedules(data);\n      await updateSchedules({ id: company.id, schedules: data });\n      toast.success(\"Horários atualizados com sucesso.\");\n    } catch (e) {\n      toast.error(e);\n    }\n    setLoading(false);\n  };\n\n  const isSuper = () => {\n    return currentUser.super;\n  };\n\n  return (\n    <MainContainer className={classes.root}>\n      <MainHeader>\n        <Title>{i18n.t(\"settings.title\")}</Title>\n      </MainHeader>\n      <Paper className={classes.mainPaper} elevation={1}>\n        <Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          onChange={handleTabChange}\n          className={classes.tab}\n        >\n          <Tab label=\"Opções\" value={\"options\"} />\n          {schedulesEnabled && <Tab label=\"Horários\" value={\"schedules\"} />}\n          {isSuper() ? <Tab label=\"Empresas\" value={\"companies\"} /> : null}\n          {isSuper() ? <Tab label=\"Planos\" value={\"plans\"} /> : null}\n          {isSuper() ? <Tab label=\"Ajuda\" value={\"helps\"} /> : null}\n        </Tabs>\n        <Paper className={classes.paper} elevation={0}>\n          <TabPanel\n            className={classes.container}\n            value={tab}\n            name={\"schedules\"}\n          >\n            <SchedulesForm\n              loading={loading}\n              onSubmit={handleSubmitSchedules}\n              initialValues={schedules}\n            />\n          </TabPanel>\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"companies\"}\n              >\n                <CompaniesManager />\n              </TabPanel>\n            )}\n          />\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"plans\"}\n              >\n                <PlansManager />\n              </TabPanel>\n            )}\n          />\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"helps\"}\n              >\n                <HelpsManager />\n              </TabPanel>\n            )}\n          />\n          <TabPanel className={classes.container} value={tab} name={\"options\"}>\n            <Options\n              settings={settings}\n              scheduleTypeChanged={(value) =>\n                setSchedulesEnabled(value === \"company\")\n              }\n            />\n          </TabPanel>\n        </Paper>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default SettingsCustom;\n","import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { TextField } from '@material-ui/core';\n\nexport default function InputField(props) {\n  const { errorText, ...rest } = props;\n  const [field, meta] = useField(props);\n\n  function _renderHelperText() {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return error;\n    }\n  }\n\n  return (\n    <TextField\n      type=\"text\"\n      error={meta.touched && meta.error && true}\n      helperText={_renderHelperText()}\n      {...field}\n      {...rest}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport {\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  FormHelperText\n} from '@material-ui/core';\n\nfunction SelectField(props) {\n  const { label, data, ...rest } = props;\n  const [field, meta] = useField(props);\n  const { value: selectedValue } = field;\n  const [touched, error] = at(meta, 'touched', 'error');\n  const isError = touched && error && true;\n  function _renderHelperText() {\n    if (isError) {\n      return <FormHelperText>{error}</FormHelperText>;\n    }\n  }\n\n  return (\n    <FormControl {...rest} error={isError}>\n      <InputLabel>{label}</InputLabel>\n      <Select {...field} value={selectedValue ? selectedValue : ''}>\n        {data.map((item, index) => (\n          <MenuItem key={index} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n      {_renderHelperText()}\n    </FormControl>\n  );\n}\n\nSelectField.defaultProps = {\n  data: []\n};\n\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default SelectField;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { InputField, SelectField } from \"../../FormFields\";\nimport { AuthContext } from \"../../../context/Auth/AuthContext\";\n\nconst countries = [\n  {\n    value: \"BR\",\n    label: \"Brasil\",\n  },\n  {\n    value: \"usa\",\n    label: \"United States\",\n  },\n];\n\nexport default function AddressForm(props) {\n\n  const { user } = useContext(AuthContext);\n  const [billingName, setBillingName] = useState(user.company.billingName);\n  const [addressZipCode, setAddressZipCode] = useState(user.company.addressZipCode);\n  const [addressStreet, setAddressStreet] = useState(user.company.addressStreet);\n  const [addressState, setAddressState] = useState(user.company.addressState);\n  const [addressCity, setAddressCity] = useState(user.company.addressCity);\n  const [addressDistrict, setAddressDistrict] = useState(user.company.addressDistrict);\n\n  const {\n    formField: {\n      firstName,\n      address1,\n      city,\n      state,\n      zipcode,\n      country,\n    },\n    setFieldValue\n  } = props;\n  useEffect(() => {\n    setFieldValue(\"firstName\", billingName)\n    setFieldValue(\"zipcode\", addressZipCode)\n    setFieldValue(\"address2\", addressStreet)\n    setFieldValue(\"state\", addressState)\n    setFieldValue(\"city\", addressCity)\n    setFieldValue(\"country\", addressDistrict)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Vamos precisar de algumas informações\n      </Typography>\n      <Grid container spacing={3}>\n\n        <Grid item xs={6} sm={6}>\n          <InputField name={firstName.name} label={firstName.label} fullWidth\n            value={billingName}\n            onChange={(e) => {\n              setBillingName(e.target.value)\n              setFieldValue(\"firstName\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <SelectField\n            name={country.name}\n            label={country.label}\n            data={countries}\n            fullWidth\n            value={addressDistrict}\n            onChange={(e) => {\n              setAddressDistrict(e.target.value)\n              setFieldValue(\"country\", e.target.value)\n            }\n            }\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={zipcode.name}\n            label={zipcode.label}\n            fullWidth\n            value={addressZipCode}\n            onChange={(e) => {\n              setAddressZipCode(e.target.value)\n              setFieldValue(\"zipcode\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={address1.name}\n            label={address1.label}\n            fullWidth\n            value={addressStreet}\n            onChange={(e) => {\n              setAddressStreet(e.target.value)\n              setFieldValue(\"address2\", e.target.value)\n\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={state.name}\n            label={state.label}\n            fullWidth\n            value={addressState}\n            onChange={(e) => {\n              setAddressState(e.target.value)\n              setFieldValue(\"state\", e.target.value)\n\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={city.name}\n            label={city.label}\n            fullWidth\n            value={addressCity}\n            onChange={(e) => {\n              setAddressCity(e.target.value)\n              setFieldValue(\"city\", e.target.value)\n            }}\n          />\n        </Grid>\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useReducer } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport usePlans from \"../../../hooks/usePlans\";\nimport useCompanies from \"../../../hooks/useCompanies\";\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n\n  customCard: {\n    display: \"flex\",\n    marginTop: \"16px\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  custom: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }\n}));\n\n\nexport default function Pricing(props) {\n  const {\n    setFieldValue,\n    setActiveStep,\n    activeStep,\n  } = props;\n\n \n\n  const { list, finder } = usePlans();\n  const { find } = useCompanies();\n\n  const classes = useStyles();\n  const [usersPlans, setUsersPlans] = React.useState(3);\n  const [companiesPlans, setCompaniesPlans] = useState(0);\n  const [connectionsPlans, setConnectionsPlans] = React.useState(3);\n  const [storagePlans, setStoragePlans] = React.useState([]);\n  const [customValuePlans, setCustomValuePlans] = React.useState(49.00);\n  const [loading, setLoading] = React.useState(false);\n  const companyId = localStorage.getItem(\"companyId\");\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadCompanies();\n    }\n    fetchData();\n  }, [])\n\n  const loadCompanies = async () => {\n    setLoading(true);\n    try {\n      const companiesList = await find(companyId);\n      setCompaniesPlans(companiesList.planId);\n      await loadPlans(companiesList.planId);\n    } catch (e) {\n      console.log(e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n  const loadPlans = async (companiesPlans) => {\n    setLoading(true);\n    try {\n      const plansCompanies = await finder(companiesPlans);\n      const plans = []\n\n      //plansCompanies.forEach((plan) => {\n      plans.push({\n        title: plansCompanies.name,\n        planId: plansCompanies.id,\n        price: plansCompanies.value,\n        description: [\n          `${plansCompanies.users} Usuários`,\n          `${plansCompanies.connections} Conexão`,\n          `${plansCompanies.queues} Filas`\n        ],\n        users: plansCompanies.users,\n        connections: plansCompanies.connections,\n        queues: plansCompanies.queues,\n        buttonText: 'SELECIONAR',\n        buttonVariant: 'outlined',\n      })\n\n      // setStoragePlans(data);\n      //});\n      setStoragePlans(plans);\n    } catch (e) {\n      console.log(e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n\n  const tiers = storagePlans\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {tiers.map((tier) => (\n          // Enterprise card is full width at sm breakpoint\n          <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 12} md={12}>\n            <Card>\n              <CardHeader\n                title={tier.title}\n                subheader={tier.subheader}\n                titleTypographyProps={{ align: 'center' }}\n                subheaderTypographyProps={{ align: 'center' }}\n                action={tier.title === 'Pro' ? <StarIcon /> : null}\n                className={classes.cardHeader}\n              />\n              <CardContent>\n                <div className={classes.cardPricing}>\n                  <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n                    {\n\n                      <React.Fragment>\n                        R${tier.price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}\n                      </React.Fragment>\n                    }\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    /mês\n                  </Typography>\n                </div>\n                <ul>\n                  {tier.description.map((line) => (\n                    <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                      {line}\n                    </Typography>\n                  ))}\n                </ul>\n              </CardContent>\n              <CardActions>\n                <Button\n                  fullWidth\n                  variant={tier.buttonVariant}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (tier.custom) {\n                      setFieldValue(\"plan\", JSON.stringify({\n                        users: usersPlans,\n                        connections: connectionsPlans,\n                        price: customValuePlans,\n                      }));\n                    } else {\n                      setFieldValue(\"plan\", JSON.stringify(tier));\n                    }\n                    setActiveStep(activeStep + 1);\n                  }\n                  }\n                >\n                  {tier.buttonText}\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: '700'\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport useStyles from './styles';\n\nfunction PaymentDetails(props) {\n  const { formValues } = props;\n  const classes = useStyles();\n  const { plan } = formValues;\n\n  const newPlan = JSON.parse(plan);\n  const { users, connections, price } = newPlan;\n  return (\n    <Grid item xs={12} sm={12}>\n      <Typography variant=\"h6\" gutterBottom className={classes.title}>\n        Detalhes do plano\n      </Typography>\n      <Typography gutterBottom>Usuários: {users}</Typography>\n      <Typography gutterBottom>Whatsapps: {connections}</Typography>\n      <Typography gutterBottom>Cobrança: Mensal</Typography>\n      <Typography gutterBottom>Total: R${price.toLocaleString('pt-br', {minimumFractionDigits: 2})}</Typography>\n    </Grid>\n  );\n}\n\nexport default PaymentDetails;\n","import ReviewOrder from './ReviewOrder';\nexport default ReviewOrder;\n","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { Typography, Grid } from '@material-ui/core';\nimport ShippingDetails from './ShippingDetails';\n\nexport default function ReviewOrder() {\n  const { values: formValues } = useFormikContext();\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Resumo da assinatura\n      </Typography>\n      <Grid container spacing={2}>\n        <ShippingDetails formValues={formValues} />\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n      .checkout-buttons {\n        display: flex;\n        flex-direction: column-reverse;\n        width: 100%;\n\n        button {\n          width: 100%;\n          margin-top: 16px;\n          margin-left: 0;\n        }\n      }\n    }\n\n    button {\n      margin-left: 16px;\n    }\n  }\n`;\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #333;\n    font-weight: bold;\n  }\n\n  strong {\n    color: #333;\n    font-size: 28px;\n    margin-left: 5px;\n  }\n\n  @media (max-width: 768px) {\n    min-width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nexport const SuccessContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > h2 {\n    text-align: center;\n  }\n\n  > svg {\n    margin-top: 16px;\n  }\n\n  > span {\n    margin-top: 24px;\n    text-align: center;\n  }\n\n  > p,\n  strong {\n    margin-top: 8px;\n    font-size: 9px;\n    color: #999;\n  }\n\n  .copy-button {\n    font-size: 14px;\n    cursor: pointer;\n    text-align: center;\n    user-select: none;\n    min-height: 56px;\n    display: inline-flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    background-color: #f9f9f9;\n    color: #000;\n    -webkit-appearance: none !important;\n    outline: none;\n    margin-top: 16px;\n    width: 256px;\n    font-weight: 600;\n    text-transform: uppercase;\n    border: none;\n\n    > span {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const CheckoutWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto 0;\n  max-width: 1110px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 50px 95px;\n  background: #fff;\n  @media (max-width: 768px) {\n    padding: 16px 24px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport QRCode from 'react-qr-code';\nimport { SuccessContent, Total } from './style';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { FaCopy, FaCheckCircle } from 'react-icons/fa';\nimport { socketConnection } from \"../../../services/socket\";\nimport { useDate } from \"../../../hooks/useDate\";\nimport { toast } from \"react-toastify\";\n\nfunction CheckoutSuccess(props) {\n\n  const { pix } = props;\n  const [pixString,] = useState(pix?.qrcode?.qrcode || '');\n  const [stripeURL,] = useState(pix.stripeURL);\n  const [asaasURL,] = useState(pix.asaasURL);\n  const [mercadopagoURL,] = useState(pix.mercadopagoURL);\n  const [valorext,] = useState(pix.valorext);\n  const [copied, setCopied] = useState(false);\n  const history = useHistory();\n\n  const { dateToClient } = useDate();\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n    socket.on(`company-${companyId}-payment`, (data) => {\n\n      if (data.action === \"CONCLUIDA\") {\n        toast.success(`Sua licença foi renovada até ${dateToClient(data.company.dueDate)}!`);\n        setTimeout(() => {\n          history.push(\"/\");\n        }, 4000);\n      }\n    });\n  }, [history]);\n\n  const handleCopyQR = () => {\n    setTimeout(() => {\n      setCopied(false);\n    }, 1 * 1000);\n    setCopied(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Total>\n        <p><span>TOTAL</span></p>\n        <strong>R$ {valorext.toLocaleString('pt-br', { minimumFractionDigits: 2 })}</strong>\n      </Total>\n\n\t\n\n    <SuccessContent>\n  \n  \t{pixString && (\n    <>\n  \n    <QRCode value={pixString} />\n    <CopyToClipboard text={pixString} onCopy={handleCopyQR}>\n      <button className=\"copy-button\" type=\"button\">\n        {copied ? (\n          <>\n            <span>Copiado</span>\n            <FaCheckCircle size={18} />\n          </>\n        ) : (\n          <>\n            <span>Copiar código QR PIX</span>\n            <FaCopy size={18} />\n          </>\n        )}\n      </button>\n    </CopyToClipboard>\n    <span>\n      Para finalizar, basta realizar o pagamento escaneando ou colando o\n      código Pix acima ou escolha Pagar com Cartão de Crédito abaixo.\n    </span>\n\t<span><p> </p></span>\n    \n    </>\n    )}\n    \n    {stripeURL && (\n    <>\n\t<button onClick={() => window.open(stripeURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com Cartão de Crédito\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    \n    {mercadopagoURL && (\n    <>\n    <button onClick={() => window.open(mercadopagoURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com MercadoPago\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    {asaasURL && (\n    <>\n    <button onClick={() => window.open(asaasURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com Asaas\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    \n</SuccessContent>\n    </React.Fragment>\n  );\n}\n\nexport default CheckoutSuccess;","import CheckoutSuccess from './CheckoutSuccess';\nexport default CheckoutSuccess;\n","export default {\n  formId: 'checkoutForm',\n  formField: {\n    firstName: {\n      name: 'firstName',\n      label: 'Nome completo*',\n      requiredErrorMsg: 'O nome completo é obrigatório'\n    },\n    lastName: {\n      name: 'lastName',\n      label: 'Last name*',\n      requiredErrorMsg: 'Last name is required'\n    },\n    address1: {\n      name: 'address2',\n      label: 'Endereço*',\n      requiredErrorMsg: 'O Endereço é obrigatório'\n    },\n\n    city: {\n      name: 'city',\n      label: 'Cidade*',\n      requiredErrorMsg: 'Cidade é obrigatória'\n    },\n    state: {\n      name: 'state',\n      label: 'Estado*',\n      requiredErrorMsg: 'Cidade é obrigatória'\n    },\n    zipcode: {\n      name: 'zipcode',\n      label: 'CEP*',\n      requiredErrorMsg: 'CEP é obrigatório',\n      invalidErrorMsg: 'Formato de CEP inválido'\n    },\n    country: {\n      name: 'country',\n      label: 'País*',\n      requiredErrorMsg: 'País é obrigatório'\n    },\n    useAddressForPaymentDetails: {\n      name: 'useAddressForPaymentDetails',\n      label: 'Use this address for payment details'\n    },\n    invoiceId: {\n      name: 'invoiceId',\n      label: 'Use this invoiceId'\n    },\n    nameOnCard: {\n      name: 'nameOnCard',\n      label: 'Name on card*',\n      requiredErrorMsg: 'Name on card is required'\n    },\n    cardNumber: {\n      name: 'cardNumber',\n      label: 'Card number*',\n      requiredErrorMsg: 'Card number is required',\n      invalidErrorMsg: 'Card number is not valid (e.g. 4111111111111)'\n    },\n    expiryDate: {\n      name: 'expiryDate',\n      label: 'Expiry date*',\n      requiredErrorMsg: 'Expiry date is required',\n      invalidErrorMsg: 'Expiry date is not valid'\n    },\n    cvv: {\n      name: 'cvv',\n      label: 'CVV*',\n      requiredErrorMsg: 'CVV is required',\n      invalidErrorMsg: 'CVV is invalid (e.g. 357)'\n    }\n  }\n};\n","import * as Yup from 'yup';\nimport checkoutFormModel from './checkoutFormModel';\nconst {\n  formField: {\n    firstName,\n    address1,\n    city,\n    zipcode,\n    country,\n  }\n} = checkoutFormModel;\n\n\nexport default [\n  Yup.object().shape({\n    [firstName.name]: Yup.string().required(`${firstName.requiredErrorMsg}`),\n    [address1.name]: Yup.string().required(`${address1.requiredErrorMsg}`),\n    [city.name]: Yup.string()\n      .nullable()\n      .required(`${city.requiredErrorMsg}`),\n    [zipcode.name]: Yup.string()\n      .required(`${zipcode.requiredErrorMsg}`),\n\n    [country.name]: Yup.string()\n      .nullable()\n      .required(`${country.requiredErrorMsg}`)\n  }),\n\n];\n","import checkoutFormModel from './checkoutFormModel';\nconst {\n  formField: {\n    firstName,\n    lastName,\n    address1,\n    city,\n    state,\n    zipcode,\n    country,\n    useAddressForPaymentDetails,\n    nameOnCard,\n    cardNumber,\n    invoiceId,\n    cvv\n  }\n} = checkoutFormModel;\n\nexport default {\n  [firstName.name]: '',\n  [lastName.name]: '',\n  [address1.name]: '',\n  [city.name]: '',\n  [state.name]: '',\n  [zipcode.name]: '',\n  [country.name]: '',\n  [useAddressForPaymentDetails.name]: false,\n  [nameOnCard.name]: '',\n  [cardNumber.name]: '',\n  [invoiceId.name]: '',\n  [cvv.name]: ''\n};\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles(theme => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n}));\n","import CheckoutPage from './CheckoutPage';\nexport default CheckoutPage;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\n\nimport AddressForm from \"./Forms/AddressForm\";\nimport PaymentForm from \"./Forms/PaymentForm\";\nimport ReviewOrder from \"./ReviewOrder\";\nimport CheckoutSuccess from \"./CheckoutSuccess\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n\nimport validationSchema from \"./FormModel/validationSchema\";\nimport checkoutFormModel from \"./FormModel/checkoutFormModel\";\nimport formInitialValues from \"./FormModel/formInitialValues\";\n\nimport useStyles from \"./styles\";\n\n\nexport default function CheckoutPage(props) {\n  const steps = [\"Dados\", \"Personalizar\", \"Revisar\"];\n  const { formId, formField } = checkoutFormModel;\n  \n  \n  \n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(1);\n  const [datePayment, setDatePayment] = useState(null);\n  const [invoiceId, ] = useState(props.Invoice.id);\n  const currentValidationSchema = validationSchema[activeStep];\n  const isLastStep = activeStep === steps.length - 1;\n  const { user } = useContext(AuthContext);\n\nfunction _renderStepContent(step, setFieldValue, setActiveStep, values ) {\n\n  switch (step) {\n    case 0:\n      return <AddressForm formField={formField} values={values} setFieldValue={setFieldValue}  />;\n    case 1:\n      return <PaymentForm \n      formField={formField} \n      setFieldValue={setFieldValue} \n      setActiveStep={setActiveStep} \n      activeStep={step} \n      invoiceId={invoiceId}\n      values={values}\n      />;\n    case 2:\n      return <ReviewOrder />;\n    default:\n      return <div>Not Found</div>;\n  }\n}\n\n\n  async function _submitForm(values, actions) {\n    try {\n      const plan = JSON.parse(values.plan);\n      const newValues = {\n        firstName: values.firstName,\n        lastName: values.lastName,\n        address2: values.address2,\n        city: values.city,\n        state: values.state,\n        zipcode: values.zipcode,\n        country: values.country,\n        useAddressForPaymentDetails: values.useAddressForPaymentDetails,\n        nameOnCard: values.nameOnCard,\n        cardNumber: values.cardNumber,\n        cvv: values.cvv,\n        plan: values.plan,\n        price: plan.price,\n        users: plan.users,\n        connections: plan.connections,\n        invoiceId: invoiceId\n      }\n\n      const { data } = await api.post(\"/subscription\", newValues);\n      setDatePayment(data)\n      actions.setSubmitting(true);\n      setActiveStep(activeStep + 1);\n      toast.success(\"Assinatura realizada com sucesso!, aguardando a realização do pagamento\");\n    } catch (err) {\n      actions.setSubmitting(false);\n     \n      toastError(err);\n    }\n  }\n\n  function _handleSubmit(values, actions) {\n    if (isLastStep) {\n      _submitForm(values, actions);\n    } else {\n      setActiveStep(activeStep + 1);\n      actions.setTouched({});\n      actions.setSubmitting(false);\n    }\n  }\n\n  function _handleBack() {\n    setActiveStep(activeStep - 1);\n  }\n\n  return (\n    <React.Fragment>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Falta pouco!\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        {activeStep === steps.length ? (\n          <CheckoutSuccess pix={datePayment} />\n        ) : (\n          <Formik\n            initialValues={{\n              ...user, \n              ...formInitialValues\n            }}\n            validationSchema={currentValidationSchema}\n            onSubmit={_handleSubmit}\n          >\n            {({ isSubmitting, setFieldValue, values }) => (\n              <Form id={formId}>\n                {_renderStepContent(activeStep, setFieldValue, setActiveStep, values)}\n\n                <div className={classes.buttons}>\n                  {activeStep !== 1 && (\n                    <Button onClick={_handleBack} className={classes.button}>\n                      VOLTAR\n                    </Button>\n                  )}\n                  <div className={classes.wrapper}>\n                    {activeStep !== 1 && (\n                      <Button\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        {isLastStep ? \"PAGAR\" : \"PRÓXIMO\"}\n                      </Button>\n                    )}\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CheckoutPage from \"../CheckoutPage/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\n\nconst ContactModal = ({ open, onClose, Invoice, contactId, initialValues, onSave }) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog open={open} onClose={handleClose} maxWidth=\"md\" scroll=\"paper\">\n        <DialogContent dividers>\n          <CheckoutPage\n            Invoice={Invoice}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactModal;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport SubscriptionModal from \"../../components/SubscriptionModal\";\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\n\nimport toastError from \"../../errors/toastError\";\n\nimport moment from \"moment\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_INVOICES\") {\n    const invoices = action.payload;\n    const newUsers = [];\n\n    invoices.forEach((user) => {\n      const userIndex = state.findIndex((u) => u.id === user.id);\n      if (userIndex !== -1) {\n        state[userIndex] = user;\n      } else {\n        newUsers.push(user);\n      }\n    });\n\n    return [...state, ...newUsers];\n  }\n\n  if (action.type === \"UPDATE_USERS\") {\n    const user = action.payload;\n    const userIndex = state.findIndex((u) => u.id === user.id);\n\n    if (userIndex !== -1) {\n      state[userIndex] = user;\n      return [...state];\n    } else {\n      return [user, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_USER\") {\n    const userId = action.payload;\n\n    const userIndex = state.findIndex((u) => u.id === userId);\n    if (userIndex !== -1) {\n      state.splice(userIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Invoices = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam, ] = useState(\"\");\n  const [invoices, dispatch] = useReducer(reducer, []);\n  const [storagePlans, setStoragePlans] = React.useState([]);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n\n\n   // trava para nao acessar pagina que não pode  \n   useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const handleOpenContactModal = (invoices) => {\n    setStoragePlans(invoices);\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n\n\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchInvoices = async () => {\n        try {\n          const { data } = await api.get(\"/invoices/all\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_INVOICES\", payload: data });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchInvoices();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n  const rowStyle = (record) => {\n    const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n    const vencimento = moment(record.dueDate).format(\"DD/MM/yyyy\");\n    var diff = moment(vencimento, \"DD/MM/yyyy\").diff(moment(hoje, \"DD/MM/yyyy\"));\n    var dias = moment.duration(diff).asDays();    \n    if (dias < 0 && record.status !== \"paid\") {\n      return { backgroundColor: \"#ffbcbc9c\" };\n    }\n  };\n\n  const rowStatus = (record) => {\n    const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n    const vencimento = moment(record.dueDate).format(\"DD/MM/yyyy\");\n    var diff = moment(vencimento, \"DD/MM/yyyy\").diff(moment(hoje, \"DD/MM/yyyy\"));\n    var dias = moment.duration(diff).asDays();    \n    const status = record.status;\n    if (status === \"paid\") {\n      return \"Pago\";\n    }\n    if (dias < 0) {\n      return \"Vencido\";\n    } else {\n      return \"Em Aberto\"\n    }\n\n  }\n\n  return (\n    <MainContainer>\n      <SubscriptionModal\n        open={contactModalOpen}\n        onClose={handleCloseContactModal}\n        aria-labelledby=\"form-dialog-title\"\n        Invoice={storagePlans}\n        contactId={selectedContactId}\n\n      ></SubscriptionModal>\n      <MainHeader>\n        <Title>Faturas</Title>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Id</TableCell>\n              <TableCell align=\"center\">Detalhes</TableCell>\n              <TableCell align=\"center\">Valor</TableCell>\n              <TableCell align=\"center\">Data Venc.</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">Ação</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {invoices.map((invoices) => (\n                <TableRow style={rowStyle(invoices)} key={invoices.id}>\n                  <TableCell align=\"center\">{invoices.id}</TableCell>\n                  <TableCell align=\"center\">{invoices.detail}</TableCell>\n                  <TableCell style={{ fontWeight: 'bold' }} align=\"center\">{invoices.value.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</TableCell>\n                  <TableCell align=\"center\">{moment(invoices.dueDate).format(\"DD/MM/YYYY\")}</TableCell>\n                  <TableCell style={{ fontWeight: 'bold' }} align=\"center\">{rowStatus(invoices)}</TableCell>\n                  <TableCell align=\"center\">\n                    {rowStatus(invoices) !== \"Pago\" ?\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => handleOpenContactModal(invoices)}\n                      >\n                        PAGAR\n                      </Button> :\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\" \n                        /* color=\"secondary\"\n                        disabled */\n                      >\n                        PAGO \n                      </Button>}\n\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Invoices;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport UserModal from \"../../components/UserModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_USERS\") {\n    const users = action.payload;\n    const newUsers = [];\n\n    users.forEach((user) => {\n      const userIndex = state.findIndex((u) => u.id === user.id);\n      if (userIndex !== -1) {\n        state[userIndex] = user;\n      } else {\n        newUsers.push(user);\n      }\n    });\n\n    return [...state, ...newUsers];\n  }\n\n  if (action.type === \"UPDATE_USERS\") {\n    const user = action.payload;\n    const userIndex = state.findIndex((u) => u.id === user.id);\n\n    if (userIndex !== -1) {\n      state[userIndex] = user;\n      return [...state];\n    } else {\n      return [user, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_USER\") {\n    const userId = action.payload;\n\n    const userIndex = state.findIndex((u) => u.id === userId);\n    if (userIndex !== -1) {\n      state.splice(userIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Users = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [deletingUser, setDeletingUser] = useState(null);\n  const [userModalOpen, setUserModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [users, dispatch] = useReducer(reducer, []);\n\n\n  // trava para nao acessar pagina que não pode  \nuseEffect(() => {\n  async function fetchData() {\n    if (user.profile !== \"admin\") {\n      toast.error(\"Acesso não permitido\");\n      setTimeout(() => {\n        history.push(`/`)\n      }, 100);\n    }\n  }\n  fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchUsers = async () => {\n        try {\n          const { data } = await api.get(\"/users/\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_USERS\", payload: data.users });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchUsers();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-user`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_USERS\", payload: data.user });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.userId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenUserModal = () => {\n    setSelectedUser(null);\n    setUserModalOpen(true);\n  };\n\n  const handleCloseUserModal = () => {\n    setSelectedUser(null);\n    setUserModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user);\n    setUserModalOpen(true);\n  };\n\n  const handleDeleteUser = async (userId) => {\n    try {\n      await api.delete(`/users/${userId}`);\n      toast.success(i18n.t(\"users.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingUser(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingUser &&\n          `${i18n.t(\"users.confirmationModal.deleteTitle\")} ${\n            deletingUser.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteUser(deletingUser.id)}\n      >\n        {i18n.t(\"users.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <UserModal\n        open={userModalOpen}\n        onClose={handleCloseUserModal}\n        aria-labelledby=\"form-dialog-title\"\n        userId={selectedUser && selectedUser.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"users.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenUserModal}\n          >\n            {i18n.t(\"users.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">{i18n.t(\"users.table.name\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.email\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.profile\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {users.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell align=\"center\">{user.name}</TableCell>\n                  <TableCell align=\"center\">{user.email}</TableCell>\n                  <TableCell align=\"center\">{user.profile}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditUser(user)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingUser(user);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Users;\n","import React, {\n    useState,\n    useEffect,\n    useReducer,\n    useContext,\n    useRef,\n} from \"react\";\n\nimport { socketConnection } from \"../../services/socket\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Archive from \"@material-ui/icons/Archive\"\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\n\nimport {\n    ArrowDropDown,\n    Backup,\n    CloudDownload,\n    ContactPhone,\n} from \"@material-ui/icons\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n\nconst reducer = (state, action) => {\n    if (action.type === \"LOAD_CONTACTS\") {\n        const contacts = action.payload;\n        const newContacts = [];\n\n        contacts.forEach((contact) => {\n            const contactIndex = state.findIndex((c) => c.id === contact.id);\n            if (contactIndex !== -1) {\n                state[contactIndex] = contact;\n            } else {\n                newContacts.push(contact);\n            }\n        });\n\n        return [...state, ...newContacts];\n    }\n\n    if (action.type === \"UPDATE_CONTACTS\") {\n        const contact = action.payload;\n        const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n        if (contactIndex !== -1) {\n            state[contactIndex] = contact;\n            return [...state];\n        } else {\n            return [contact, ...state];\n        }\n    }\n\n    if (action.type === \"DELETE_CONTACT\") {\n        const contactId = action.payload;\n\n        const contactIndex = state.findIndex((c) => c.id === contactId);\n        if (contactIndex !== -1) {\n            state.splice(contactIndex, 1);\n        }\n        return [...state];\n    }\n\n    if (action.type === \"RESET\") {\n        return [];\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mainPaper: {\n        flex: 1,\n        padding: theme.spacing(1),\n        overflowY: \"scroll\",\n        ...theme.scrollbarStyles,\n    },\n}));\n\nconst Contacts = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const { user } = useContext(AuthContext);\n\n    const [loading, setLoading] = useState(false);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [searchParam, setSearchParam] = useState(\"\");\n    const [contacts, dispatch] = useReducer(reducer, []);\n    const [selectedContactId, setSelectedContactId] = useState(null);\n    const [contactModalOpen, setContactModalOpen] = useState(false);\n    const [deletingContact, setDeletingContact] = useState(null);\n    const [ImportContacts, setImportContacts] = useState(null);\n    const [blockingContact, setBlockingContact] = useState(null);\n    const [unBlockingContact, setUnBlockingContact] = useState(null);\n    const [confirmOpen, setConfirmOpen] = useState(false);\n    const [confirmChatsOpen, setConfirmChatsOpen] = useState(false);\n    const [hasMore, setHasMore] = useState(false);\n    const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n    const [contactTicket, setContactTicket] = useState({});\n    const fileUploadRef = useRef(null);\n\n    const handleImportExcel = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", fileUploadRef.current.files[0]);\n            await api.request({\n                url: `/contacts/upload`,\n                method: \"POST\",\n                data: formData,\n            });\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const handleExportExcel = async () => {\n        try {\n            const { data } = await api.post(\"/contacts/export\", {});\n\n            const url = `${process.env.REACT_APP_BACKEND_URL}/public/${data}`;\n\n            window.open(url, \"_blank\");\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const teste = async () => {\n        return <CSVLink\n            className={classes.csvbtn}\n            separator=\";\"\n            filename={'contacts.csv'}\n            data={\n                contacts.map((contact) => ({\n                    name: contact.name,\n                    number: contact.number,\n                    email: contact.email\n                }))\n            }>\n            <Button\n                variant=\"contained\"\n                color=\"primary\">\n                <Archive />\n                &nbsp; {i18n.t(\"contacts.buttons.export\")}\n            </Button>\n        </CSVLink>\n    }\n\n    useEffect(() => {\n        dispatch({ type: \"RESET\" });\n        setPageNumber(1);\n    }, [searchParam]);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchContacts = async () => {\n                try {\n                    const { data } = await api.get(\"/contacts/\", {\n                        params: { searchParam, pageNumber },\n                    });\n                    dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n                    setHasMore(data.hasMore);\n                    setLoading(false);\n                } catch (err) {\n                    toastError(err);\n                }\n            };\n            fetchContacts();\n        }, 500);\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchParam, pageNumber]);\n\n    useEffect(() => {\n        const companyId = localStorage.getItem(\"companyId\");\n        const socket = socketConnection({ companyId });\n\n        socket.on(`company-${companyId}-contact`, (data) => {\n            if (data.action === \"update\" || data.action === \"create\") {\n                dispatch({ type: \"UPDATE_CONTACTS\", payload: data.contact });\n            }\n\n            if (data.action === \"delete\") {\n                dispatch({ type: \"DELETE_CONTACT\", payload: +data.contactId });\n            }\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    const handleCloseOrOpenTicket = (ticket) => {\n        setNewTicketModalOpen(false);\n        if (ticket !== undefined && ticket.uuid !== undefined) {\n            history.push(`/tickets/${ticket.uuid}`);\n        }\n    };\n\n    const handleSearch = (event) => {\n        setSearchParam(event.target.value.toLowerCase());\n    };\n\n    const handleOpenContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(true);\n    };\n\n    const handleCloseContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(false);\n    };\n\n    const handleSaveTicket = async (contactId) => {\n        if (!contactId) return;\n        setLoading(true);\n        try {\n            const { data: ticket } = await api.post(\"/tickets\", {\n                contactId: contactId,\n                userId: user?.id,\n                status: \"open\",\n            });\n            history.push(`/tickets/${ticket.uuid}`);\n        } catch (err) {\n            toastError(err);\n        }\n        setLoading(false);\n    };\n\n    const hadleEditContact = (contactId) => {\n        setSelectedContactId(contactId);\n        setContactModalOpen(true);\n    };\n\n    const handleDeleteContact = async (contactId) => {\n        try {\n            await api.delete(`/contacts/${contactId}`);\n            toast.success(i18n.t(\"contacts.toasts.deleted\"));\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: false });\n            toast.success(\"Contato bloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleUnBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: true });\n            toast.success(\"Contato desbloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleimportContact = async () => {\n        try {\n            await api.post(\"/contacts/import\");\n            history.go(0);\n            setImportContacts(false);\n        } catch (err) {\n            toastError(err);\n            setImportContacts(false);\n        }\n    };\n\n    const handleimportChats = async () => {\n        try {\n            await api.post(\"/contacts/import/chats\");\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const loadMore = () => {\n        setPageNumber((prevState) => prevState + 1);\n    };\n\n    const handleScroll = (e) => {\n        if (!hasMore || loading) return;\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\n            loadMore();\n        }\n    };\n\n    function getDateLastMessage(contact) {\n        if (!contact) return null;\n        if (!contact.tickets) return null;\n\n        if (contact.tickets.length > 0) {\n            const date = new Date(\n                contact.tickets[contact.tickets.length - 1].updatedAt\n            );\n\n            const day =\n                date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n            const month = date.getMonth() + 1;\n            const year = date.getFullYear();\n\n            const hours = date.getHours();\n            const minutes = date.getMinutes();\n\n            return `${day}/${month}/${year} ${hours}:${minutes}`;\n        }\n\n        return null;\n    }\n\n    return (\n        <MainContainer className={classes.mainContainer}>\n            <NewTicketModal\n                modalOpen={newTicketModalOpen}\n                initialContact={contactTicket}\n                onClose={(ticket) => {\n                    handleCloseOrOpenTicket(ticket);\n                }}\n            />\n            <ContactModal\n                open={contactModalOpen}\n                onClose={handleCloseContactModal}\n                aria-labelledby=\"form-dialog-title\"\n                contactId={selectedContactId}\n            ></ContactModal>\n            <ConfirmationModal\n                title={\n                    deletingContact\n                        ? `${i18n.t(\n                            \"contacts.confirmationModal.deleteTitle\"\n                        )} ${deletingContact.name}?`\n                        : blockingContact\n                            ? `Bloquear Contato ${blockingContact.name}?`\n                            : unBlockingContact\n                                ? `Desbloquear Contato ${unBlockingContact.name}?`\n                                : ImportContacts\n                                    ? `${i18n.t(\"contacts.confirmationModal.importTitlte\")}`\n                                    : `${i18n.t(\n                                        \"contactListItems.confirmationModal.importTitlte\"\n                                    )}`\n                }\n                open={confirmOpen}\n                onClose={setConfirmOpen}\n                onConfirm={(e) =>\n                    deletingContact\n                        ? handleDeleteContact(deletingContact.id)\n                        : blockingContact\n                            ? handleBlockContact(blockingContact.id)\n                            : unBlockingContact\n                                ? handleUnBlockContact(unBlockingContact.id)\n                                : ImportContacts\n                                    ? handleimportContact()\n                                    : handleImportExcel()\n                }\n            >\n                {deletingContact\n                    ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}`\n                    : blockingContact\n                        ? `Tem certeza que deseja bloquear este contato?`\n                        : unBlockingContact\n                            ? `Tem certeza que deseja desbloquear este contato?`\n                            : ImportContacts\n                                ? `${i18n.t(\"contacts.confirmationModal.importMessage\")}`\n                                : `${i18n.t(\n                                    \"contactListItems.confirmationModal.importMessage\"\n                                )}`}\n            </ConfirmationModal>\n            <ConfirmationModal\n                title={\"Importar Conversas\"}\n                open={confirmChatsOpen}\n                onClose={setConfirmChatsOpen}\n                onConfirm={(e) => handleimportChats()}\n            >\n                Deseja importar todas as conversas do telefone?\n            </ConfirmationModal>\n            <MainHeader>\n                <Title>{i18n.t(\"contacts.title\")} ({contacts.length})</Title>\n                <MainHeaderButtonsWrapper>\n                    <TextField\n                        placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                        type=\"search\"\n                        value={searchParam}\n                        onChange={handleSearch}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon color=\"secondary\" />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    {...bindTrigger(popupState)}\n                                >\n                                    Importar / Exportar\n                                    <ArrowDropDown />\n                                </Button>\n                                <Menu {...bindMenu(popupState)}>\n                                    <MenuItem\n                                        onClick={() => {\n                                            setConfirmOpen(true);\n                                            setImportContacts(true);\n                                            popupState.close();\n                                        }}\n                                    >\n                                        <ContactPhone\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Importar Agenda\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => {\n                                            fileUploadRef.current.value = null;\n                                            fileUploadRef.current.click();\n                                        }}\n                                    >\n                                        <Backup\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Importar Excel\n                                    </MenuItem>\n                                    {/* <MenuItem\n                                        onClick={() => {\n                                            <>\n                                                <CSVLink\n                                                    className={classes.csvbtn}\n                                                    separator=\";\"\n                                                    filename={'contacts.xlsx'}\n                                                    data={\n                                                        contacts.map((contact) => ({\n                                                            name: contact.name,\n                                                            number: contact.number,\n                                                            email: contact.email\n                                                        }))\n                                                    }>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\">\n                                                        <Archive />\n                                                        &nbsp; {i18n.t(\"contacts.buttons.export\")}\n                                                    </Button>\n                                                </CSVLink>\n                                            </>\n\n                                            // handleExportExcel();\n                                            // popupState.close();\n                                        }}\n                                    >\n                                        <CloudDownload\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Exportar Excel\n                                    </MenuItem> */}\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOpenContactModal}\n                    >\n                        {i18n.t(\"contacts.buttons.add\")}\n                    </Button>\n                </MainHeaderButtonsWrapper>\n            </MainHeader>\n            <Paper\n                className={classes.mainPaper}\n                variant=\"outlined\"\n                onScroll={handleScroll}\n            >\n                <>\n                    <input\n                        style={{ display: \"none\" }}\n                        id=\"upload\"\n                        name=\"file\"\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={() => {\n                            setConfirmOpen(true);\n                        }}\n                        ref={fileUploadRef}\n                    />\n                </>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\" />\n                            <TableCell>\n                                {i18n.t(\"contacts.table.name\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.email\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {\"Ultima mensagem\"}\n                            </TableCell>\n                            <TableCell align=\"center\">{\"Status\"}</TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.actions\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <>\n                            {contacts.map((contact) => (\n                                <TableRow key={contact.id}>\n                                    <TableCell style={{ paddingRight: 0 }}>\n                                        {<Avatar src={contact.profilePicUrl} />}\n                                    </TableCell>\n                                    <TableCell>{contact.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.number}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.email}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {getDateLastMessage(contact)}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.active ? (\n                                            <CheckCircleIcon\n                                                style={{ color: \"green\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        ) : (\n                                            <CancelIcon\n                                                style={{ color: \"red\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => {\n                                                setContactTicket(contact);\n                                                setNewTicketModalOpen(true);\n                                                // handleSaveTicket(contact.id);\n                                            }}\n                                        >\n                                            <WhatsAppIcon color=\"secondary\" />\n                                        </IconButton>\n\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                hadleEditContact(contact.id)\n                                            }\n                                        >\n                                            <EditIcon color=\"secondary\" />\n                                        </IconButton>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={\n                                                contact.active\n                                                    ? () => {\n                                                        setConfirmOpen(true);\n                                                        setBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                                    : () => {\n                                                        setConfirmOpen(true);\n                                                        setUnBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                            }\n                                        >\n                                            {contact.active ? (\n                                                <BlockIcon color=\"secondary\" />\n                                            ) : (\n                                                <CheckCircleIcon color=\"secondary\" />\n                                            )}\n                                        </IconButton>\n                                        <Can\n                                            role={user.profile}\n                                            perform=\"contacts-page:deleteContact\"\n                                            yes={() => (\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={(e) => {\n                                                        setConfirmOpen(true);\n                                                        setDeletingContact(\n                                                            contact\n                                                        );\n                                                    }}\n                                                >\n                                                    <DeleteOutlineIcon color=\"secondary\" />\n                                                </IconButton>\n                                            )}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {loading && <TableRowSkeleton avatar columns={3} />}\n                        </>\n                    </TableBody>\n                </Table>\n            </Paper>\n        </MainContainer >\n    );\n};\n\nexport default Contacts;","import { Dialog } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nimport { BlockPicker } from \"react-color\";\n\nconst ColorPicker = ({ onChange, currentColor, handleClose, open }) => {\n\tconst [selectedColor, setSelectedColor] = useState(currentColor);\n\n\tconst handleChange = color => {\n\t\tsetSelectedColor(color.hex);\n\t\thandleClose();\n\t};\n\n\tconst colors = [\n\t\t\"#B80000\",\n\t\t\"#DB3E00\",\n\t\t\"#FCCB00\",\n\t\t\"#008B02\",\n\t\t\"#006B76\",\n\t\t\"#1273DE\",\n\t\t\"#004DCF\",\n\t\t\"#5300EB\",\n\t\t\"#EB9694\",\n\t\t\"#FAD0C3\",\n\t\t\"#FEF3BD\",\n\t\t\"#C1E1C5\",\n\t\t\"#BEDADC\",\n\t\t\"#C4DEF6\",\n\t\t\"#BED3F3\",\n\t\t\"#D4C4FB\",\n\t\t\"#4D4D4D\",\n\t\t\"#999999\",\n\t\t\"#F44E3B\",\n\t\t\"#FE9200\",\n\t\t\"#FCDC00\",\n\t\t\"#DBDF00\",\n\t\t\"#A4DD00\",\n\t\t\"#68CCCA\",\n\t\t\"#73D8FF\",\n\t\t\"#AEA1FF\",\n\t\t\"#FDA1FF\",\n\t\t\"#333333\",\n\t\t\"#808080\",\n\t\t\"#cccccc\",\n\t\t\"#D33115\",\n\t\t\"#E27300\",\n\t\t\"#FCC400\",\n\t\t\"#B0BC00\",\n\t\t\"#68BC00\",\n\t\t\"#16A5A5\",\n\t\t\"#009CE0\",\n\t\t\"#7B64FF\",\n\t\t\"#FA28FF\",\n\t\t\"#666666\",\n\t\t\"#B3B3B3\",\n\t\t\"#9F0500\",\n\t\t\"#C45100\",\n\t\t\"#FB9E00\",\n\t\t\"#808900\",\n\t\t\"#194D33\",\n\t\t\"#0C797D\",\n\t\t\"#0062B1\",\n\t\t\"#653294\",\n\t\t\"#AB149E\",\n\t];\n\n\treturn (\n\t\t<Dialog\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"simple-dialog-title\"\n\t\t\topen={open}\n\t\t>\n\t\t\t<BlockPicker\n\t\t\t\twidth={\"100%\"}\n\t\t\t\ttriangle=\"hide\"\n\t\t\t\tcolor={selectedColor}\n\t\t\t\tcolors={colors}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonChangeComplete={color => onChange(color.hex)}\n\t\t\t/>\n\t\t</Dialog>\n\t);\n};\n\nexport default ColorPicker;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, IconButton, StepContent, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\",\n    },\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function QueueOptionStepper({ queueId, options, updateOptions }) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n\n  const handleOption = (index) => async () => {\n    setActiveOption(index);\n    const option = options[index];\n\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const { data } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: { queueId, parentId: option.id },\n        });\n        const optionList = data.map((option) => {\n          return {\n            ...option,\n            children: [],\n            edition: false,\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n\n  const handleSave = async (option) => {\n    try {\n      if (option.id) {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"PUT\",\n          data: option,\n        });\n      } else {\n        const { data } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: option,\n        });\n        option.id = data.id;\n      }\n      option.edition = false;\n      updateOptions();\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  const handleEdition = (index) => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n\n  const handleDeleteOption = async (index) => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\",\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n\n  const renderTitle = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            value={option.title}\n            onChange={(event) => handleOptionChangeTitle(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder=\"Título da opção\"\n          />\n          {option.edition && (\n            <>\n              <IconButton\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleSave(option)}\n              >\n                <SaveIcon />\n              </IconButton>\n              <IconButton\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleDeleteOption(index)}\n              >\n                <DeleteOutlineIcon />\n              </IconButton>\n            </>\n          )}\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography>\n          {option.title !== \"\" ? option.title : \"Título não definido\"}\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => handleEdition(index)}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n      </>\n    );\n  };\n\n  const renderMessage = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            style={{ width: \"100%\" }}\n            multiline\n            value={option.message}\n            onChange={(event) => handleOptionChangeMessage(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder=\"Digite o texto da opção\"\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography onClick={() => handleEdition(index)}>\n          {option.message}\n        </Typography>\n      </>\n    );\n  };\n\n  const handleAddOption = (index) => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: [],\n    });\n    updateOptions();\n  };\n\n  const renderStep = (option, index) => {\n    return (\n      <Step key={index}>\n        <StepLabel style={{ cursor: \"pointer\" }} onClick={handleOption(index)}>\n          {renderTitle(index)}\n        </StepLabel>\n        <StepContent>\n          {renderMessage(index)}\n\n          {option.id !== undefined && (\n            <>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => handleAddOption(index)}\n                startIcon={<AddIcon />}\n                variant=\"outlined\"\n                className={classes.addButton}\n              >\n                Adicionar\n              </Button>\n            </>\n          )}\n          <QueueOptionStepper\n            queueId={queueId}\n            options={option.children}\n            updateOptions={updateOptions}\n          />\n        </StepContent>\n      </Step>\n    );\n  };\n\n  const renderStepper = () => {\n    return (\n      <Stepper\n        style={{ marginBottom: 0, paddingBottom: 0 }}\n        nonLinear\n        activeStep={activeOption}\n        orientation=\"vertical\"\n      >\n        {options.map((option, index) => renderStep(option, index))}\n      </Stepper>\n    );\n  };\n\n  return renderStepper();\n}\n\nexport function QueueOptions({ queueId }) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const { data } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: { queueId, parentId: -1 },\n          });\n          const optionList = data.map((option) => {\n            return {\n              ...option,\n              children: [],\n              edition: false,\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return (\n        <QueueOptionStepper\n          queueId={queueId}\n          updateOptions={updateOptions}\n          options={options}\n        />\n      );\n    }\n  };\n\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: [],\n    };\n    setOptions([...options, newOption]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Typography>\n        Opções\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          onClick={addOption}\n          startIcon={<AddIcon />}\n          style={{ marginLeft: 10 }}\n          variant=\"outlined\"\n        >\n          Adicionar\n        </Button>\n      </Typography>\n      {renderStepper()}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport ColorPicker from \"../ColorPicker\";\nimport {\n  IconButton,\n  InputAdornment,\n  Paper,\n  Tab,\n  Tabs,\n  FormControlLabel,\n  Select,\n  Switch,\n  MenuItem\n} from \"@material-ui/core\";\nimport { Colorize } from \"@material-ui/icons\";\nimport { QueueOptions } from \"../QueueOptions\";\nimport SchedulesForm from \"../SchedulesForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst QueueSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  color: Yup.string().min(3, \"Too Short!\").max(9, \"Too Long!\").required(),\n  greetingMessage: Yup.string(),\n});\n\nconst QueueModal = ({ open, onClose, queueId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n    color: \"\",\n    greetingMessage: \"\",\n    outOfHoursMessage: \"\",\n    tempoRoteador: \"\",\n    ativarRoteador: false,\n  };\n\n  const [colorPickerModalOpen, setColorPickerModalOpen] = useState(false);\n  const [queue, setQueue] = useState(initialState);\n  const [tab, setTab] = useState(0);\n  const [schedulesEnabled, setSchedulesEnabled] = useState(false);\n  const greetingRef = useRef();\n\n  const [schedules, setSchedules] = useState([\n    { weekday: \"Segunda-feira\",weekdayEn: \"monday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Terça-feira\",weekdayEn: \"tuesday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Quarta-feira\",weekdayEn: \"wednesday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Quinta-feira\",weekdayEn: \"thursday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Sexta-feira\", weekdayEn: \"friday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Sábado\", weekdayEn: \"saturday\",startTime: \"08:00\",endTime: \"12:00\",},\n    { weekday: \"Domingo\", weekdayEn: \"sunday\",startTime: \"00:00\",endTime: \"00:00\",},\n  ]);\n\n  useEffect(() => {\n    api.get(`/settings`).then(({ data }) => {\n      if (Array.isArray(data)) {\n        const scheduleType = data.find((d) => d.key === \"scheduleType\");\n        if (scheduleType) {\n          setSchedulesEnabled(scheduleType.value === \"queue\");\n        }\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!queueId) return;\n      try {\n        const { data } = await api.get(`/queue/${queueId}`);\n        setQueue((prevState) => {\n          return { ...prevState, ...data };\n        });\n        setSchedules(data.schedules);\n      } catch (err) {\n        toastError(err);\n      }\n    })();\n\n    return () => {\n      setQueue({\n        name: \"\",\n        color: \"\",\n        greetingMessage: \"\",\n        tempoRoteador: \"\",\n        ativarRoteador: false\n      });\n    };\n  }, [queueId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setQueue(initialState);\n  };\n\n  const handleSaveQueue = async (values) => {\n    try {\n      if (queueId) {\n        await api.put(`/queue/${queueId}`, { ...values, schedules });\n      } else {\n        await api.post(\"/queue\", { ...values, schedules });\n      }\n      toast.success(\"Queue saved successfully\");\n      handleClose();\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleSaveSchedules = async (values) => {\n    toast.success(\"Clique em salvar para registar as alterações\");\n    setSchedules(values);\n    setTab(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        maxWidth=\"md\"\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n      >\n        <DialogTitle>\n          {queueId\n            ? `${i18n.t(\"queueModal.title.edit\")}`\n            : `${i18n.t(\"queueModal.title.add\")}`}\n        </DialogTitle>\n        <Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={(_, v) => setTab(v)}\n          aria-label=\"disabled tabs example\"\n        >\n          <Tab label=\"Dados da Fila\" />\n          {schedulesEnabled && <Tab label=\"Horários de Atendimento\" />}\n        </Tabs>\n        {tab === 0 && (\n          <Paper>\n            <Formik\n              initialValues={queue}\n              enableReinitialize={true}\n              validationSchema={QueueSchema}\n              onSubmit={(values, actions) => {\n                setTimeout(() => {\n                  handleSaveQueue(values);\n                  actions.setSubmitting(false);\n                }, 400);\n              }}\n            >\n              {({ touched, errors, isSubmitting, values }) => (\n                <Form>\n                  <DialogContent dividers>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"queueModal.form.name\")}\n                      autoFocus\n                      name=\"name\"\n                      error={touched.name && Boolean(errors.name)}\n                      helperText={touched.name && errors.name}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                    />\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"queueModal.form.color\")}\n                      name=\"color\"\n                      id=\"color\"\n                      onFocus={() => {\n                        setColorPickerModalOpen(true);\n                        greetingRef.current.focus();\n                      }}\n                      error={touched.color && Boolean(errors.color)}\n                      helperText={touched.color && errors.color}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <div\n                              style={{ backgroundColor: values.color }}\n                              className={classes.colorAdorment}\n                            ></div>\n                          </InputAdornment>\n                        ),\n                        endAdornment: (\n                          <IconButton\n                            size=\"small\"\n                            color=\"default\"\n                            onClick={() => setColorPickerModalOpen(true)}\n                          >\n                            <Colorize />\n                          </IconButton>\n                        ),\n                      }}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                    />\n                    <ColorPicker\n                      open={colorPickerModalOpen}\n                      handleClose={() => setColorPickerModalOpen(false)}\n                      onChange={(color) => {\n                        values.color = color;\n                        setQueue(() => {\n                          return { ...values, color };\n                        });\n                      }}\n                    />\n                    <FormControlLabel \n                      control={\n                        <Field\n                          as={Switch}\n                          color=\"primary\"\n                          name=\"ativarRoteador\"\n                          checked={values.ativarRoteador}\n                        />\n                      }\n                      label=\"Rodízio\"\n                    />\n                    <Field\n  \t\t\t\t\t\tas={Select}\n  \t\t\t\t\t\tlabel=\"Tempo de Rodízio\"\n  \t\t\t\t\t\tname=\"tempoRoteador\"\n  \t\t\t\t\t\terror={touched.tempoRoteador && Boolean(errors.tempoRoteador)}\n  \t\t\t\t\t\thelperText={touched.tempoRoteador && errors.tempoRoteador}\n  \t\t\t\t\t\tvariant=\"outlined\"\n  \t\t\t\t\t\tmargin=\"dense\"\n  \t\t\t\t\t\tclassName={classes.selectField}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value=\"0\" selected disabled>Tempo de Rodízio</MenuItem>\n                        <MenuItem value=\"2\">2 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"5\">5 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"10\">10 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"15\">15 minutos</MenuItem>\n                        <MenuItem value=\"30\">30 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"45\">45 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"60\">60 minutos</MenuItem>\n\t\t\t\t    </Field>\n                    <div style={{ marginTop: 5 }}>\n                          <Field\n                            as={TextField}\n                            label={i18n.t(\"queueModal.form.greetingMessage\")}\n                            type=\"greetingMessage\"\n                            multiline\n                            inputRef={greetingRef}\n                            rows={5}\n                            fullWidth\n                            name=\"greetingMessage\"\n                            error={\n                              touched.greetingMessage &&\n                              Boolean(errors.greetingMessage)\n                            }\n                            helperText={\n                              touched.greetingMessage && errors.greetingMessage\n                            }\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                          />\n                        {schedulesEnabled && (\n                            <Field\n                              as={TextField}\n                              label={i18n.t(\"queueModal.form.outOfHoursMessage\")}\n                              type=\"outOfHoursMessage\"\n                              multiline\n                              rows={5}\n                              fullWidth\n                              name=\"outOfHoursMessage\"\n                              error={\n                                touched.outOfHoursMessage &&\n                                Boolean(errors.outOfHoursMessage)\n                              }\n                              helperText={\n                                touched.outOfHoursMessage && errors.outOfHoursMessage\n                              }\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                            />\n                        )}\n                    </div>\n                    <QueueOptions queueId={queueId} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={handleClose}\n                      color=\"secondary\"\n                      disabled={isSubmitting}\n                      variant=\"outlined\"\n                    >\n                      {i18n.t(\"queueModal.buttons.cancel\")}\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      variant=\"contained\"\n                      className={classes.btnWrapper}\n                    >\n                      {queueId\n                        ? `${i18n.t(\"queueModal.buttons.okEdit\")}`\n                        : `${i18n.t(\"queueModal.buttons.okAdd\")}`}\n                      {isSubmitting && (\n                        <CircularProgress\n                          size={24}\n                          className={classes.buttonProgress}\n                        />\n                      )}\n                    </Button>\n                  </DialogActions>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        )}\n        {tab === 1 && (\n          <Paper style={{ padding: 20 }}>\n            <SchedulesForm\n              loading={false}\n              onSubmit={handleSaveSchedules}\n              initialValues={schedules}\n              labelSaveButton=\"Adicionar\"\n            />\n          </Paper>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QueueModal;\n","import React, { useEffect, useReducer, useState, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  Button,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { DeleteOutline, Edit } from \"@material-ui/icons\";\nimport QueueModal from \"../../components/QueueModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_QUEUES\") {\n    const queues = action.payload;\n    const newQueues = [];\n\n    queues.forEach((queue) => {\n      const queueIndex = state.findIndex((q) => q.id === queue.id);\n      if (queueIndex !== -1) {\n        state[queueIndex] = queue;\n      } else {\n        newQueues.push(queue);\n      }\n    });\n\n    return [...state, ...newQueues];\n  }\n\n  if (action.type === \"UPDATE_QUEUES\") {\n    const queue = action.payload;\n    const queueIndex = state.findIndex((u) => u.id === queue.id);\n\n    if (queueIndex !== -1) {\n      state[queueIndex] = queue;\n      return [...state];\n    } else {\n      return [queue, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_QUEUE\") {\n    const queueId = action.payload;\n    const queueIndex = state.findIndex((q) => q.id === queueId);\n    if (queueIndex !== -1) {\n      state.splice(queueIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst Queues = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [queues, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(false);\n\n  const [queueModalOpen, setQueueModalOpen] = useState(false);\n  const [selectedQueue, setSelectedQueue] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n\n\n// trava para nao acessar pagina que não pode  \nuseEffect(() => {\n  async function fetchData() {\n    if (user.profile !== \"admin\") {\n      toast.error(\"Acesso não permitido\");\n      setTimeout(() => {\n        history.push(`/`)\n      }, 100);\n    }\n  }\n  fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { data } = await api.get(\"/queue\");\n        dispatch({ type: \"LOAD_QUEUES\", payload: data });\n\n        setLoading(false);\n      } catch (err) {\n        toastError(err);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-queue`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_QUEUES\", payload: data.queue });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_QUEUE\", payload: data.queueId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenQueueModal = () => {\n    setQueueModalOpen(true);\n    setSelectedQueue(null);\n  };\n\n  const handleCloseQueueModal = () => {\n    setQueueModalOpen(false);\n    setSelectedQueue(null);\n  };\n\n  const handleEditQueue = (queue) => {\n    setSelectedQueue(queue);\n    setQueueModalOpen(true);\n  };\n\n  const handleCloseConfirmationModal = () => {\n    setConfirmModalOpen(false);\n    setSelectedQueue(null);\n  };\n\n  const handleDeleteQueue = async (queueId) => {\n    try {\n      await api.delete(`/queue/${queueId}`);\n      toast.success(i18n.t(\"Queue deleted successfully!\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setSelectedQueue(null);\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          selectedQueue &&\n          `${i18n.t(\"queues.confirmationModal.deleteTitle\")} ${\n            selectedQueue.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={handleCloseConfirmationModal}\n        onConfirm={() => handleDeleteQueue(selectedQueue.id)}\n      >\n        {i18n.t(\"queues.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <QueueModal\n        open={queueModalOpen}\n        onClose={handleCloseQueueModal}\n        queueId={selectedQueue?.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"queues.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenQueueModal}\n          >\n            {i18n.t(\"queues.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.color\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.greeting\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {queues.map((queue) => (\n                <TableRow key={queue.id}>\n                  <TableCell align=\"center\">{queue.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <div className={classes.customTableCell}>\n                      <span\n                        style={{\n                          backgroundColor: queue.color,\n                          width: 60,\n                          height: 20,\n                          alignSelf: \"center\",\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div className={classes.customTableCell}>\n                      <Typography\n                        style={{ width: 300, align: \"center\" }}\n                        noWrap\n                        variant=\"body2\"\n                      >\n                        {queue.greetingMessage}\n                      </Typography>\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditQueue(queue)}\n                    >\n                      <Edit />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => {\n                        setSelectedQueue(queue);\n                        setConfirmModalOpen(true);\n                      }}\n                    >\n                      <DeleteOutline />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Queues;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Colorize } from \"@material-ui/icons\";\nimport { ColorBox } from 'material-ui-color';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { IconButton, InputAdornment, FormControl } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n\tcolorAdorment: {\n\t\twidth: 20,\n\t\theight: 20,\n\t},\n    multFieldLine: {\n    \tdisplay: 'flex',\n    \tflexDirection: 'row',\n    \talignItems: 'center',\n  \t},\n}));\n\nconst TagSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(3, \"Mensagem muito curta\")\n\t\t.required(\"Obrigatório\")\n});\n\nconst TagModal = ({ open, onClose, tagId, reload }) => {\n\tconst classes = useStyles();\n\tconst { user } = useContext(AuthContext);\n\tconst [colorPickerModalOpen, setColorPickerModalOpen] = useState(false);\n    //console.log(user);\n\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\tcolor: \"\",\n        kanban: 0\n\t};\n\n\tconst [tag, setTag] = useState(initialState);\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\t(async () => {\n\t\t\t\tif (!tagId) return;\n\n\t\t\t\tconst { data } = await api.get(`/tags/${tagId}`);\n                //console.log(data);\n\t\t\t\tsetTag(prevState => {\n\t\t\t\t\treturn { ...prevState, ...data };\n\t\t\t\t});\n\t\t\t})()\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t}, [tagId, open]);\n\n\tconst handleClose = () => {\n\t\tsetTag(initialState);\n\t\tsetColorPickerModalOpen(false);\n\t\tonClose();\n\t};\n\n\tconst handleSaveTag = async values => {\n\t\tconst tagData = { ...values, userId: user.id };\n\t\ttry {\n\t\t\tif (tagId) {\n\t\t\t\tawait api.put(`/tags/${tagId}`, tagData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/tags\", tagData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"tagModal.success\"));\n\t\t\tif (typeof reload == 'function') {\n\t\t\t\treload();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\thandleClose();\n\t};\n\n\nconst handleKanbanChange = (e) => {\n    const kanbanValue = e.target.checked ? 1 : 0;\n    setTag((prev) => ({\n      ...prev,\n      kanban: kanbanValue,\n    }));\n  };\n\treturn (\n    \t\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{ (tagId ? `${i18n.t(\"tagModal.title.edit\")}` : `${i18n.t(\"tagModal.title.add\")}`) }\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={tag}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={TagSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveTag(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting, values }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"tagModal.form.name\")}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTag(prev => ({ ...prev, name: e.target.value }))}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"tagModal.form.color\")}\n\t\t\t\t\t\t\t\t\t\tname=\"color\"\n\t\t\t\t\t\t\t\t\t\tid=\"color\"\n\t\t\t\t\t\t\t\t\t\terror={touched.color && Boolean(errors.color)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.color && errors.color}\n\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: values.color }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.colorAdorment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorPickerModalOpen(!colorPickerModalOpen)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Colorize />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n                                {(user.profile === \"admin\" || user.profile === \"supervisor\") && (\n                                <>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n        \t\t\t\t\t\t\t<FormControlLabel\n          \t\t\t\t\t\t\t\tcontrol={\n            \t\t\t\t\t\t\t\t<Checkbox\n             \t\t\t\t\t\t\t\t\tchecked={tag.kanban === 1}\n             \t\t\t\t\t\t\t\t\tonChange={handleKanbanChange}\n              \t\t\t\t\t\t\t\t\tname=\"kanban\"\n              \t\t\t\t\t\t\t\t\tcolor=\"primary\"\n            \t\t\t\t\t\t\t\t/>\n          \t\t\t\t\t\t\t\t}\n          \t\t\t\t\t\t\t\tlabel=\"Kanban\"\n          \t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n        \t\t\t\t\t\t\t/>\n      \t\t\t\t\t\t\t</div>\n      \t\t\t\t\t\t\t<br />\n                                </>\n\t\t\t\t\t\t\t\t)}\n                                \n\t\t\t\t\t\t\t\t{ colorPickerModalOpen && (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<ColorBox\n\t\t\t\t\t\t\t\t\t\t\tdisableAlpha={true}\n\t\t\t\t\t\t\t\t\t\t\thslGradient={false}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{margin: '20px auto 0'}}\n\t\t\t\t\t\t\t\t\t\t\tvalue={tag.color}\n\t\t\t\t\t\t\t\t\t\t\tonChange={val => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetTag(prev => ({ ...prev, color: `#${val.hex}` }));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"tagModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{tagId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"tagModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"tagModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n        \n\t);\n};\n\nexport default TagModal;","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport FlagIcon from '@material-ui/icons/Flag';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport TagModal from \"../../components/TagModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Chip } from \"@material-ui/core\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TAGS\") {\n    const tags = action.payload;\n    const newTags = [];\n\n    tags.forEach((tag) => {\n      const tagIndex = state.findIndex((s) => s.id === tag.id);\n      if (tagIndex !== -1) {\n        state[tagIndex] = tag;\n      } else {\n        newTags.push(tag);\n      }\n    });\n\n    return [...state, ...newTags];\n  }\n\n  if (action.type === \"UPDATE_TAGS\") {\n    const tag = action.payload;\n    const tagIndex = state.findIndex((s) => s.id === tag.id);\n\n    if (tagIndex !== -1) {\n      state[tagIndex] = tag;\n      return [...state];\n    } else {\n      return [tag, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_TAG\") {\n    const tagId = action.payload;\n\n    const tagIndex = state.findIndex((s) => s.id === tagId);\n    if (tagIndex !== -1) {\n      state.splice(tagIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Tags = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n  const { id, profile, name } = user;\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [deletingTag, setDeletingTag] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [tags, dispatch] = useReducer(reducer, []);\n  const [tagModalOpen, setTagModalOpen] = useState(false);\n\n  const fetchTags = useCallback(async () => {\n    try {\n      const { data } = await api.get(\"/tags/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_TAGS\", payload: data.tags });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchTags();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber, fetchTags]);\n\n  useEffect(() => {\n    const socket = socketConnection({ companyId: user.companyId });\n\n    socket.on(\"user\", (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_TAGS\", payload: data.tags });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.tagId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [user]);\n\n  const handleOpenTagModal = () => {\n    setSelectedTag(null);\n    setTagModalOpen(true);\n  };\n\n  const handleCloseTagModal = () => {\n    setSelectedTag(null);\n    setTagModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditTag = (tag) => {\n    setSelectedTag(tag);\n    setTagModalOpen(true);\n  };\n\n  const handleDeleteTag = async (tagId) => {\n    try {\n      await api.delete(`/tags/${tagId}`);\n      toast.success(i18n.t(\"tags.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingTag(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n    await fetchTags();\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={deletingTag && `${i18n.t(\"tags.confirmationModal.deleteTitle\")}`}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteTag(deletingTag.id)}\n      >\n        {i18n.t(\"tags.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <TagModal\n        open={tagModalOpen}\n        onClose={handleCloseTagModal}\n        reload={fetchTags}\n        aria-labelledby=\"form-dialog-title\"\n        tagId={selectedTag && selectedTag.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"tags.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenTagModal}\n          >\n            {i18n.t(\"tags.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\"ID\"</TableCell>\n              <TableCell align=\"center\">{i18n.t(\"tags.table.name\")}</TableCell>\n              <TableCell align=\"center\">\"Kanban\"</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"tags.table.tickets\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"tags.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {tags\n    \t\t\t.sort((a, b) => b.id - a.id) // Sort the tags array in descending order based on the id\n    \t\t\t.map((tag) => (\n                <TableRow key={tag.id}>\n                  <TableCell align=\"center\">{tag.id}</TableCell>\n                  <TableCell align=\"center\">\n                    <Chip\n                      variant=\"outlined\"\n                      style={{\n                        backgroundColor: tag.color,\n                        textShadow: \"1px 1px 1px #000\",\n                        color: \"white\",\n                      }}\n                      label={tag.name}\n                      size=\"small\"\n                    />\n                  </TableCell>\n\t\t\t\t  <TableCell align=\"center\">\n  \t\t\t\t\t{tag.kanban === 1 ? (\n    \t\t\t\t\t<CheckCircleIcon style={{ color: 'green' }} />\n  \t\t\t\t\t\t) : (\n    \t\t\t\t\t''\n  \t\t\t\t\t\t)}\n\t\t\t\t  </TableCell>\n\t\t\t\t  <TableCell align=\"center\">{tag.ticketsCount}</TableCell>\n                  <TableCell align=\"center\">\n                  <>\n                  {((user.profile === \"admin\" || user.profile === \"supervisor\")) && (\n                    <IconButton size=\"small\" onClick={() => handleEditTag(tag)}>\n                      <EditIcon />\n                    </IconButton>\n                    \n                  )}\n          \n                    \n                  {((user.profile === \"admin\" || user.profile === \"supervisor\")) && (\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingTag(tag);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                    \n                    )}\n                    \n                 </>\n                 \n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Tags;","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\n\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { Button, CircularProgress, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(2),\n    paddingBottom: 100\n  },\n  mainHeader: {\n    marginTop: theme.spacing(1),\n  },\n  elementMargin: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    maxWidth: 500,\n  },\n  textRight: {\n    textAlign: \"right\"\n  }\n}));\n\nconst MessagesAPI = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [formMessageTextData,] = useState({ token: '',number: '', body: '' })\n  const [formMessageMediaData,] = useState({ token: '', number: '', medias: '' })\n  const [file, setFile] = useState({})\n\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getEndpoint = () => {\n    return process.env.REACT_APP_BACKEND_URL + '/api/messages/send'\n  }\n\n  const handleSendTextMessage = async (values) => {\n    const { number, body } = values;\n    const data = { number, body };\n    var options = {\n      method: 'POST',\n      url: `${process.env.REACT_APP_BACKEND_URL}/api/messages/send`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${values.token}`\n      },\n      data\n    };\n    \n    axios.request(options).then(function (response) {\n      toast.success('Mensagem enviada com sucesso');\n    }).catch(function (error) {\n      toastError(error);\n    });    \n  }\n\n  const handleSendMediaMessage = async (values) => { \n    try {\n      const firstFile =  file[0];\n      const data = new FormData();\n      data.append('number', values.number);\n      data.append('body', firstFile.name);\n      data.append('medias', firstFile);\n      var options = {\n        method: 'POST',\n        url: `${process.env.REACT_APP_BACKEND_URL}/api/messages/send`,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${values.token}`\n        },\n        data\n      };\n      \n      axios.request(options).then(function (response) {\n        toast.success('Mensagem enviada com sucesso');\n      }).catch(function (error) {\n        toastError(error);\n      });      \n    } catch (err) {\n      toastError(err);\n    }\n  }\n\n  const renderFormMessageText = () => {\n    return (\n      <Formik\n        initialValues={formMessageTextData}\n        enableReinitialize={true}\n        onSubmit={(values, actions) => {\n          setTimeout(async () => {\n            await handleSendTextMessage(values);\n            actions.setSubmitting(false);\n            actions.resetForm()\n          }, 400);\n        }}\n        className={classes.elementMargin}\n      >\n        {({ isSubmitting }) => (\n          <Form className={classes.formContainer}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.token\")}\n                  name=\"token\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.number\")}\n                  name=\"number\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.body\")}\n                  name=\"body\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.textRight}>\n                <Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : 'Enviar'}\n\t\t\t\t\t\t\t\t</Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\n  const renderFormMessageMedia = () => {\n    return (\n      <Formik\n        initialValues={formMessageMediaData}\n        enableReinitialize={true}\n        onSubmit={(values, actions) => {\n          setTimeout(async () => {\n            console.log(values, file)\n            await handleSendMediaMessage(values);\n            actions.setSubmitting(false);\n            actions.resetForm()\n            document.getElementById('medias').files = null\n            document.getElementById('medias').value = null\n          }, 400);\n        }}\n        className={classes.elementMargin}\n      >\n        {({ isSubmitting }) => (\n          <Form className={classes.formContainer}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.mediaMessage.token\")}\n                  name=\"token\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.mediaMessage.number\")}\n                  name=\"number\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <input type=\"file\" name=\"medias\" id=\"medias\" required onChange={(e) => setFile(e.target.files)} />\n              </Grid>\n              <Grid item xs={12} className={classes.textRight}>\n                <Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : 'Enviar'}\n\t\t\t\t\t\t\t\t</Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\n  return (\n    <Paper\n      className={classes.mainPaper}\n      variant=\"outlined\"\n    >\n      <Typography variant=\"h5\">\n        Documentação para envio de mensagens\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        Métodos de Envio\n      </Typography>\n      <Typography component=\"div\">\n        <ol>\n          <li>Mensagens de Texto</li>\n          <li>Mensagens de Media</li>\n        </ol>\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        Instruções\n      </Typography>\n      <Typography className={classes.elementMargin} component=\"div\">\n        <b>Observações importantes</b><br />\n        <ul>\n          <li>Antes de enviar mensagens, é necessário o cadastro do token vinculado à conexão que enviará as mensagens. <br/>Para realizar o cadastro acesse o menu \"Conexões\", clique no botão editar da conexão e insira o token no devido campo.</li>\n          <li>\n            O número para envio não deve ter mascara ou caracteres especiais e deve ser composto por:\n              <ul>\n                <li>Código do país</li>\n                <li>DDD</li>\n                <li>Número</li>\n              </ul>\n          </li>\n        </ul>\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        1. Mensagens de Texto\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin} component=\"div\">\n            <p>Seguem abaixo a lista de informações necessárias para envio das mensagens de texto:</p>\n            <b>Endpoint: </b> {getEndpoint()} <br />\n            <b>Método: </b> POST <br />\n            <b>Headers: </b> X_TOKEN (token cadastrado) e Content-Type (application/json) <br />\n            <b>Body: </b> {\"{ \\\"number\\\": \\\"558599999999\\\", \\\"body\\\": \\\"Sua mensagem\\\" }\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin}>\n            <b>Teste de Envio</b>\n          </Typography>\n          {renderFormMessageText()}\n        </Grid>\n      </Grid>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        2. Mensagens de Media\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin} component=\"div\">\n            <p>Seguem abaixo a lista de informações necessárias para envio das mensagens de texto:</p>\n            <b>Endpoint: </b> {getEndpoint()} <br />\n            <b>Método: </b> POST <br />\n            <b>Headers: </b> X_TOKEN (token cadastrado) e Content-Type (multipart/form-data) <br />\n            <b>FormData: </b> <br />\n            <ul>\n              <li>\n                <b>number: </b> 558599999999\n              </li>\n              <li>\n                <b>medias: </b> arquivo\n              </li>\n            </ul>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin}>\n            <b>Teste de Envio</b>\n          </Typography>\n          {renderFormMessageMedia()}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default MessagesAPI;","import React, { useState, useEffect, } from \"react\";\n\n\nimport {\n\tmakeStyles,\n\tPaper\n} from \"@material-ui/core\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport useHelps from \"../../hooks/useHelps\";\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n\tmainPaper: {\n\t\twidth: '100%',\n\t\tminHeight: '200px',\n\t\toverflowY: \"scroll\",\n\t\t...theme.scrollbarStyles,\n\t},\n\theading: {\n\t  fontSize: theme.typography.pxToRem(15),\n\t  flexBasis: '33.33%',\n\t  flexShrink: 0,\n\t},\n\tsecondaryHeading: {\n\t  fontSize: theme.typography.pxToRem(15),\n\t  color: theme.palette.text.secondary,\n\t}\n}));\n\nconst Helps = () => {\n\tconst classes = useStyles();\n\n\tconst [records, setRecords] = useState([]);\n\tconst { list } = useHelps()\n\n\n\t\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst helps = await list()\n\t\t\tsetRecords(helps)\n\t\t}\n\t\tfetchData()\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tconst renderVideo = (record) => {\n\t\tconst url = `https://www.youtube.com/embed/${record.video}`;\n\t\treturn (\n\t\t\t<iframe style={{ width: 700, height: 500 }} src={url} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\t\t)\n\t\t\t\n\t}\n\n\tconst renderHelps = () => {\n\t\treturn <>\n\t\t\t{ records.length ? records.map((record, key) => (\n\t\t\t\t<Accordion key={key}>\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\taria-controls=\"panel1a-content\"\n\t\t\t\t\t\tid=\"panel1a-header\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography className={classes.heading}>{ record.title }</Typography>\n          \t\t\t\t<Typography className={classes.secondaryHeading}>{ record.description }</Typography>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t<Typography>{ renderVideo(record) }</Typography>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t)) : null }\n\t\t</>\n\t}\n\n\treturn (\n\t\t<MainContainer>\n\t\t\t<MainHeader>\n\t\t\t\t<Title>{i18n.t(\"helps.title\")}</Title>\n\t\t\t\t<MainHeaderButtonsWrapper>\n\t\t\t\t</MainHeaderButtonsWrapper>\n\t\t\t</MainHeader>\n\t\t\t<Paper className={classes.mainPaper} variant=\"outlined\">\n\t\t\t\t{ renderHelps() }\n\t\t\t</Paper>\n\t\t</MainContainer>\n\t);\n};\n\n\n\nexport default Helps;\n","import React, { useState, useEffect } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst ContactListSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst ContactListModal = ({ open, onClose, contactListId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n  };\n\n  const [contactList, setContactList] = useState(initialState);\n\n  useEffect(() => {\n    const fetchContactList = async () => {\n      if (!contactListId) return;\n      try {\n        const { data } = await api.get(`/contact-lists/${contactListId}`);\n        setContactList((prevState) => {\n          return { ...prevState, ...data };\n        });\n      } catch (err) {\n        toastError(err);\n      }\n    };\n\n    fetchContactList();\n  }, [contactListId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setContactList(initialState);\n  };\n\n  const handleSaveContactList = async (values) => {\n    const contactListData = { ...values };\n    try {\n      if (contactListId) {\n        await api.put(`/contact-lists/${contactListId}`, contactListData);\n      } else {\n        await api.post(\"/contact-lists\", contactListData);\n      }\n      toast.success(i18n.t(\"contactList.dialog\"));\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {contactListId\n            ? `${i18n.t(\"contactLists.dialog.edit\")}`\n            : `${i18n.t(\"contactLists.dialog.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={contactList}\n          enableReinitialize={true}\n          validationSchema={ContactListSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveContactList(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"contactLists.dialog.name\")}\n                    autoFocus\n                    name=\"name\"\n                    error={touched.name && Boolean(errors.name)}\n                    helperText={touched.name && errors.name}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                </div>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"contactLists.dialog.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {contactListId\n                    ? `${i18n.t(\"contactLists.dialog.okEdit\")}`\n                    : `${i18n.t(\"contactLists.dialog.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactListModal;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactListDialog from \"../../components/ContactListDialog\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\n\nimport planilhaExemplo from \"../../assets/planilha.xlsx\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTLISTS\") {\n    const contactLists = action.payload;\n    const newContactLists = [];\n\n    contactLists.forEach((contactList) => {\n      const contactListIndex = state.findIndex((u) => u.id === contactList.id);\n      if (contactListIndex !== -1) {\n        state[contactListIndex] = contactList;\n      } else {\n        newContactLists.push(contactList);\n      }\n    });\n\n    return [...state, ...newContactLists];\n  }\n\n  if (action.type === \"UPDATE_CONTACTLIST\") {\n    const contactList = action.payload;\n    const contactListIndex = state.findIndex((u) => u.id === contactList.id);\n\n    if (contactListIndex !== -1) {\n      state[contactListIndex] = contactList;\n      return [...state];\n    } else {\n      return [contactList, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CONTACTLIST\") {\n    const contactListId = action.payload;\n\n    const contactListIndex = state.findIndex((u) => u.id === contactListId);\n    if (contactListIndex !== -1) {\n      state.splice(contactListIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst ContactLists = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedContactList, setSelectedContactList] = useState(null);\n  const [deletingContactList, setDeletingContactList] = useState(null);\n  const [contactListModalOpen, setContactListModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contactLists, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContactLists = async () => {\n        try {\n          const { data } = await api.get(\"/contact-lists/\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_CONTACTLISTS\", payload: data.records });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContactLists();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-ContactList`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CONTACTLIST\", payload: data.record });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CONTACTLIST\", payload: +data.id });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenContactListModal = () => {\n    setSelectedContactList(null);\n    setContactListModalOpen(true);\n  };\n\n  const handleCloseContactListModal = () => {\n    setSelectedContactList(null);\n    setContactListModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditContactList = (contactList) => {\n    setSelectedContactList(contactList);\n    setContactListModalOpen(true);\n  };\n\n  const handleDeleteContactList = async (contactListId) => {\n    try {\n      await api.delete(`/contact-lists/${contactListId}`);\n      toast.success(i18n.t(\"contactLists.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContactList(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const goToContacts = (id) => {\n    history.push(`/contact-lists/${id}/contacts`);\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingContactList &&\n          `${i18n.t(\"contactLists.confirmationModal.deleteTitle\")} ${\n            deletingContactList.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteContactList(deletingContactList.id)}\n      >\n        {i18n.t(\"contactLists.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <ContactListDialog\n        open={contactListModalOpen}\n        onClose={handleCloseContactListModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactListId={selectedContactList && selectedContactList.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"contactLists.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={7} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={5} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpenContactListModal}\n                >\n                  {i18n.t(\"contactLists.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.contacts\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {contactLists.map((contactList) => (\n                <TableRow key={contactList.id}>\n                  <TableCell align=\"center\">{contactList.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {contactList.contactsCount || 0}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <a href={planilhaExemplo} download=\"planilha.xlsx\">\n                      <IconButton size=\"small\" title=\"Baixar Planilha Exemplo\">\n                        <DownloadIcon />\n                      </IconButton>\n                    </a>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => goToContacts(contactList.id)}\n                    >\n                      <PeopleIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditContactList(contactList)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingContactList(contactList);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={3} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default ContactLists;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  number: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n  email: Yup.string().email(\"Invalid email\"),\n});\n\nconst ContactListItemModal = ({\n  open,\n  onClose,\n  contactId,\n  initialValues,\n  onSave,\n}) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n\n  const {\n    user: { companyId },\n  } = useContext(AuthContext);\n  const { contactListId } = useParams();\n\n  const initialState = {\n    name: \"\",\n    number: \"\",\n    email: \"\",\n  };\n\n  const [contact, setContact] = useState(initialState);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchContact = async () => {\n      if (initialValues) {\n        setContact((prevState) => {\n          return { ...prevState, ...initialValues };\n        });\n      }\n\n      if (!contactId) return;\n\n      try {\n        const { data } = await api.get(`/contact-list-items/${contactId}`);\n        if (isMounted.current) {\n          setContact(data);\n        }\n      } catch (err) {\n        toastError(err);\n      }\n    };\n\n    fetchContact();\n  }, [contactId, open, initialValues]);\n\n  const handleClose = () => {\n    onClose();\n    setContact(initialState);\n  };\n\n  const handleSaveContact = async (values) => {\n    try {\n      if (contactId) {\n        await api.put(`/contact-list-items/${contactId}`, {\n          ...values,\n          companyId,\n          contactListId,\n        });\n        handleClose();\n      } else {\n        const { data } = await api.post(\"/contact-list-items\", {\n          ...values,\n          companyId,\n          contactListId,\n        });\n        if (onSave) {\n          onSave(data);\n        }\n        handleClose();\n      }\n      toast.success(i18n.t(\"contactModal.success\"));\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n        <DialogTitle id=\"form-dialog-title\">\n          {contactId\n            ? `${i18n.t(\"contactModal.title.edit\")}`\n            : `${i18n.t(\"contactModal.title.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={contact}\n          enableReinitialize={true}\n          validationSchema={ContactSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveContact(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {i18n.t(\"contactModal.form.mainInfo\")}\n                </Typography>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"contactModal.form.name\")}\n                  name=\"name\"\n                  autoFocus\n                  error={touched.name && Boolean(errors.name)}\n                  helperText={touched.name && errors.name}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  className={classes.textField}\n                />\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"contactModal.form.number\")}\n                  name=\"number\"\n                  error={touched.number && Boolean(errors.number)}\n                  helperText={touched.number && errors.number}\n                  placeholder=\"5513912344321\"\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                />\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"contactModal.form.email\")}\n                    name=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={touched.email && errors.email}\n                    placeholder=\"Email address\"\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                  />\n                </div>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"contactModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {contactId\n                    ? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n                    : `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactListItemModal;\n","import api from \"../../services/api\";\n\nconst useContactLists = () => {\n  const save = async (data) => {\n    const { data: responseData } = await api.request({\n      url: \"/contact-lists\",\n      method: \"POST\",\n      data,\n    });\n    return responseData;\n  };\n\n  const update = async (data) => {\n    const { data: responseData } = await api.request({\n      url: `/contact-lists/${data.id}`,\n      method: \"PUT\",\n      data,\n    });\n    return responseData;\n  };\n\n  const deleteRecord = async (id) => {\n    const { data } = await api.request({\n      url: `/contact-lists/${id}`,\n      method: \"DELETE\",\n    });\n    return data;\n  };\n\n  const findById = async (id) => {\n    const { data } = await api.request({\n      url: `/contact-lists/${id}`,\n      method: \"GET\",\n    });\n    return data;\n  };\n\n  const list = async (params) => {\n    const { data } = await api.request({\n      url: \"/contact-lists/list\",\n      method: \"GET\",\n      params,\n    });\n    return data;\n  };\n\n  return {\n    findById,\n    save,\n    update,\n    deleteRecord,\n    list,\n  };\n};\n\nexport default useContactLists;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactListItemModal from \"../../components/ContactListItemModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport useContactLists from \"../../hooks/useContactLists\";\nimport { Grid } from \"@material-ui/core\";\n\nimport planilhaExemplo from \"../../assets/planilha.xlsx\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTS\") {\n    const contacts = action.payload;\n    const newContacts = [];\n\n    contacts.forEach((contact) => {\n      const contactIndex = state.findIndex((c) => c.id === contact.id);\n      if (contactIndex !== -1) {\n        state[contactIndex] = contact;\n      } else {\n        newContacts.push(contact);\n      }\n    });\n\n    return [...state, ...newContacts];\n  }\n\n  if (action.type === \"UPDATE_CONTACTS\") {\n    const contact = action.payload;\n    const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n    if (contactIndex !== -1) {\n      state[contactIndex] = contact;\n      return [...state];\n    } else {\n      return [contact, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CONTACT\") {\n    const contactId = action.payload;\n\n    const contactIndex = state.findIndex((c) => c.id === contactId);\n    if (contactIndex !== -1) {\n      state.splice(contactIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst ContactListItems = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n  const { contactListId } = useParams();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contacts, dispatch] = useReducer(reducer, []);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactListItemModalOpen, setContactListItemModalOpen] =\n    useState(false);\n  const [deletingContact, setDeletingContact] = useState(null);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [contactList, setContactList] = useState({});\n  const fileUploadRef = useRef(null);\n\n  const { findById: findContactList } = useContactLists();\n\n  useEffect(() => {\n    findContactList(contactListId).then((data) => {\n      setContactList(data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contactListId]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(`contact-list-items`, {\n            params: { searchParam, pageNumber, contactListId },\n          });\n          dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber, contactListId]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-ContactListItem`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CONTACTS\", payload: data.record });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CONTACT\", payload: +data.id });\n      }\n\n      if (data.action === \"reload\") {\n        dispatch({ type: \"LOAD_CONTACTS\", payload: data.records });\n      }\n    });\n\n    socket.on(\n      `company-${companyId}-ContactListItem-${contactListId}`,\n      (data) => {\n        if (data.action === \"reload\") {\n          dispatch({ type: \"LOAD_CONTACTS\", payload: data.records });\n        }\n      }\n    );\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [contactListId]);\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleOpenContactListItemModal = () => {\n    setSelectedContactId(null);\n    setContactListItemModalOpen(true);\n  };\n\n  const handleCloseContactListItemModal = () => {\n    setSelectedContactId(null);\n    setContactListItemModalOpen(false);\n  };\n\n  const hadleEditContact = (contactId) => {\n    setSelectedContactId(contactId);\n    setContactListItemModalOpen(true);\n  };\n\n  const handleDeleteContact = async (contactId) => {\n    try {\n      await api.delete(`/contact-list-items/${contactId}`);\n      toast.success(i18n.t(\"contacts.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContact(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const handleImportContacts = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", fileUploadRef.current.files[0]);\n      await api.request({\n        url: `contact-lists/${contactListId}/upload`,\n        method: \"POST\",\n        data: formData,\n      });\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const goToContactLists = () => {\n    history.push(\"/contact-lists\");\n  };\n\n  return (\n    <MainContainer className={classes.mainContainer}>\n      <ContactListItemModal\n        open={contactListItemModalOpen}\n        onClose={handleCloseContactListItemModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactId={selectedContactId}\n      ></ContactListItemModal>\n      <ConfirmationModal\n        title={\n          deletingContact\n            ? `${i18n.t(\"contactListItems.confirmationModal.deleteTitle\")} ${\n                deletingContact.name\n              }?`\n            : `${i18n.t(\"contactListItems.confirmationModal.importTitlte\")}`\n        }\n        open={confirmOpen}\n        onClose={setConfirmOpen}\n        onConfirm={() =>\n          deletingContact\n            ? handleDeleteContact(deletingContact.id)\n            : handleImportContacts()\n        }\n      >\n        {deletingContact ? (\n          `${i18n.t(\"contactListItems.confirmationModal.deleteMessage\")}`\n        ) : (\n          <>\n            {i18n.t(\"contactListItems.confirmationModal.importMessage\")}\n            <a href={planilhaExemplo} download=\"planilha.xlsx\">\n              Clique aqui para baixar planilha exemplo.\n            </a>\n          </>\n        )}\n      </ConfirmationModal>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={5} item>\n            <Title>{contactList.name}</Title>\n          </Grid>\n          <Grid xs={12} sm={7} item>\n            <Grid spacing={2} container>\n              <Grid xs={12} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"contactListItems.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={goToContactLists}\n                >\n                  {i18n.t(\"contactListItems.buttons.lists\")}\n                </Button>\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    fileUploadRef.current.value = null;\n                    fileUploadRef.current.click();\n                  }}\n                >\n                  {i18n.t(\"contactListItems.buttons.import\")}\n                </Button>\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpenContactListItemModal}\n                >\n                  {i18n.t(\"contactListItems.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <>\n          <input\n            style={{ display: \"none\" }}\n            id=\"upload\"\n            name=\"file\"\n            type=\"file\"\n            accept=\".xls,.xlsx\"\n            onChange={() => {\n              setConfirmOpen(true);\n            }}\n            ref={fileUploadRef}\n          />\n        </>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" style={{ width: \"0%\" }}>\n                #\n              </TableCell>\n              <TableCell>{i18n.t(\"contactListItems.table.name\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.number\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.email\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {contacts.map((contact) => (\n                <TableRow key={contact.id}>\n                  <TableCell align=\"center\" style={{ width: \"0%\" }}>\n                    <IconButton>\n                      {contact.isWhatsappValid ? (\n                        <CheckCircleIcon\n                          titleAccess=\"Whatsapp Válido\"\n                          htmlColor=\"green\"\n                        />\n                      ) : (\n                        <BlockIcon\n                          titleAccess=\"Whatsapp Inválido\"\n                          htmlColor=\"grey\"\n                        />\n                      )}\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>{contact.name}</TableCell>\n                  <TableCell align=\"center\">{contact.number}</TableCell>\n                  <TableCell align=\"center\">{contact.email}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => hadleEditContact(contact.id)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <Can\n                      role={user.profile}\n                      perform=\"contacts-page:deleteContact\"\n                      yes={() => (\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => {\n                            setConfirmOpen(true);\n                            setDeletingContact(contact);\n                          }}\n                        >\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      )}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default ContactListItems;\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { i18n } from \"../../translate/i18n\";\nimport { head } from \"lodash\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst QuickeMessageSchema = Yup.object().shape({\n  shortcode: Yup.string().required(\"Obrigatório\"),\n  message: Yup.string().required(\"Obrigatório\"),\n});\n\nconst QuickMessageDialog = ({ open, onClose, quickemessageId, reload }) => {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n  const initialState = {\n    shortcode: \"\",\n    message: \"\",\n    geral: false,\n    status: true,\n  };\n\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [quickemessage, setQuickemessage] = useState(initialState);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n\n  \n\n  useEffect(() => {\n    try {\n      (async () => {\n        if (!quickemessageId) return;\n\n        const { data } = await api.get(`/quick-messages/${quickemessageId}`);\n        setQuickemessage((prevState) => {\n          return { ...prevState, ...data };\n        });\n      })();\n    } catch (err) {\n      toastError(err);\n    }\n  }, [quickemessageId, open]);\n\n  const handleClose = () => {\n    setQuickemessage(initialState);\n    setAttachment(null);\n    onClose();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveQuickeMessage = async (values) => {\n    const quickemessageData = { ...values };\n    try {\n      if (quickemessageId) {\n        await api.put(`/quick-messages/${quickemessageId}`, quickemessageData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(\n            `/quick-messages/${quickemessageId}/media-upload`,\n            formData\n          );\n        }\n      } else {\n        const { data } = await api.post(\"/quick-messages\", quickemessageData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/quick-messages/${data.id}/media-upload`, formData);\n        }\n      }\n      toast.success(i18n.t(\"quickemessage.toasts.success\"));\n      if (typeof reload == \"function\") {\n        console.log(reload);\n        console.log(\"0\");\n        reload();\n      }\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (quickemessage.mediaPath) {\n      await api.delete(`/quick-messages/${quickemessage.id}/media-upload`);\n      setQuickemessage((prev) => ({\n        ...prev,\n        mediaPath: null,\n      }));\n      toast.success(i18n.t(\"quickemessage.toasts.deleted\"));\n      if (typeof reload == \"function\") {\n        console.log(reload);\n        console.log(\"1\");\n        reload();\n      }\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"quickemessage.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"quickemessage.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {quickemessageId\n            ? `${i18n.t(\"quickemessage.dialog.edit\")}`\n            : `${i18n.t(\"quickemessage.dialog.add\")}`}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={quickemessage}\n          enableReinitialize={true}\n          validationSchema={QuickeMessageSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveQuickeMessage(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting, values }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"quickemessage.dialog.form.shortcode\")}\n                      name=\"shortcode\"\n                      error={touched.shortcode && Boolean(errors.shortcode)}\n                      helperText={touched.shortcode && errors.shortcode}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"quickemessage.dialog.form.message\")}\n                      name=\"message\"\n                      error={touched.message && Boolean(errors.message)}\n                      helperText={touched.message && errors.message}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      multiline={true}\n                      rows={7}\n                      fullWidth\n                      disabled={quickemessage.mediaPath || attachment ? true : false}\n                    />\n                  </Grid>\n                  {(profile === \"admin\" || profile === \"supervisor\") && (\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"geral-selection-label\">\n                        {i18n.t(\"quickemessage.dialog.form.geral\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"quickemessage.dialog.form.geral\")}\n                        placeholder={i18n.t(\"quickemessage.dialog.form.geral\")}\n                        labelId=\"geral-selection-label\"\n                        id=\"geral\"\n                        name=\"geral\"\n                        error={touched.geral && Boolean(errors.geral)}\n                      >\n                        <MenuItem value={true}>Ativo</MenuItem>\n                        <MenuItem value={false}>Inativo</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  )}\n                  {(quickemessage.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment ? attachment.name : quickemessage.mediaName}\n                      </Button>\n                      <IconButton\n                        onClick={() => setConfirmationOpen(true)}\n                        color=\"secondary\"\n                      >\n                        <DeleteOutlineIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {!attachment && !quickemessage.mediaPath && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"quickemessage.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"quickemessage.dialog.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {quickemessageId\n                    ? `${i18n.t(\"quickemessage.dialog.buttons.edit\")}`\n                    : `${i18n.t(\"quickemessage.dialog.buttons.add\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QuickMessageDialog;","import React, { useState, useEffect, useReducer, useContext, useCallback  } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport QuickMessageDialog from \"../../components/QuickMessageDialog\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_QUICKMESSAGES\") {\n    //console.log(\"aqui\");\n    //console.log(action);\n    //console.log(action.payload);\n    const quickmessages = action.payload;\n    const newQuickmessages = [];\n    //console.log(newQuickmessages);\n\n    if (isArray(quickmessages)) {\n      quickmessages.forEach((quickemessage) => {\n        const quickemessageIndex = state.findIndex(\n          (u) => u.id === quickemessage.id\n        );\n        if (quickemessageIndex !== -1) {\n          state[quickemessageIndex] = quickemessage;\n        } else {\n          newQuickmessages.push(quickemessage);\n        }\n      });\n    }\n\n    return [...state, ...newQuickmessages];\n  }\n\n  if (action.type === \"UPDATE_QUICKMESSAGES\") {\n    const quickemessage = action.payload;\n    const quickemessageIndex = state.findIndex((u) => u.id === quickemessage.id);\n\n    if (quickemessageIndex !== -1) {\n      state[quickemessageIndex] = quickemessage;\n      return [...state];\n    } else {\n      return [quickemessage, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_QUICKMESSAGE\") {\n    const quickemessageId = action.payload;\n\n    const quickemessageIndex = state.findIndex((u) => u.id === quickemessageId);\n    if (quickemessageIndex !== -1) {\n      state.splice(quickemessageIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Quickemessages = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedQuickemessage, setSelectedQuickemessage] = useState(null);\n  const [deletingQuickemessage, setDeletingQuickemessage] = useState(null);\n  const [quickemessageModalOpen, setQuickMessageDialogOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [quickemessages, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchQuickemessages();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-quickemessage`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_QUICKMESSAGES\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_QUICKMESSAGE\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchQuickemessages = async () => {\n    try {\n      const companyId = localStorage.getItem(\"companyId\");\n      //const searchParam = ({ companyId, userId: user.id });\n      const { data } = await api.get(\"/quick-messages/list\", {\n        params: { companyId, userId: user.id },\n      });\n      //console.log(data);\n      dispatch({ type: \"LOAD_QUICKMESSAGES\", payload: data });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenQuickMessageDialog = () => {\n    setSelectedQuickemessage(null);\n    setQuickMessageDialogOpen(true);\n  };\n\n  const handleCloseQuickMessageDialog = () => {\n    setSelectedQuickemessage(null);\n    setQuickMessageDialogOpen(false);\n  \t//window.location.reload();\n    fetchQuickemessages();\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditQuickemessage = (quickemessage) => {\n    //console.log(quickemessage);\n    setSelectedQuickemessage(quickemessage);\n    setQuickMessageDialogOpen(true);\n  };\n\n  const handleDeleteQuickemessage = async (quickemessageId) => {\n    try {\n      await api.delete(`/quick-messages/${quickemessageId}`);\n      toast.success(i18n.t(\"quickemessages.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingQuickemessage(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n    fetchQuickemessages();\n    dispatch({ type: \"RESET\" });\n        \n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={deletingQuickemessage && `${i18n.t(\"quickemessages.confirmationModal.deleteTitle\")} ${deletingQuickemessage.shortcode}?`}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteQuickemessage(deletingQuickemessage.id)}\n      >\n        {i18n.t(\"quickemessages.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <QuickMessageDialog\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchQuickemessages();\n        }}\n        open={quickemessageModalOpen}\n        onClose={handleCloseQuickMessageDialog}\n        aria-labelledby=\"form-dialog-title\"\n        quickemessageId={selectedQuickemessage && selectedQuickemessage.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"quickemessages.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"quickemessages.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenQuickMessageDialog}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"quickemessages.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.shortcode\")}\n              </TableCell>\n              \n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.mediaName\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {quickemessages.map((quickemessage) => (\n                <TableRow key={quickemessage.id}>\n                  <TableCell align=\"center\">{quickemessage.shortcode}</TableCell>\n                  \n                  <TableCell align=\"center\">\n                    {quickemessage.mediaName ?? \"Sem anexo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n  \t\t\t\t\t{quickemessage.geral === true ? (\n    \t\t\t\t\t<CheckCircleIcon style={{ color: 'green' }} />\n  \t\t\t\t\t\t) : (\n    \t\t\t\t\t''\n  \t\t\t\t\t\t)}\n\t\t\t\t  </TableCell>\n                  <TableCell align=\"center\">\n{(profile === \"admin\" || profile === \"supervisor\" ||\n  (profile === \"user\" && !quickemessage.geral)) && (\n  <IconButton\n    size=\"small\"\n    onClick={() => handleEditQuickemessage(quickemessage)}\n  >\n    <EditIcon />\n  </IconButton>\n)}\n\n{(profile === \"admin\" || profile === \"supervisor\" ||\n  (profile === \"user\" && !quickemessage.geral)) && (\n  <IconButton\n    size=\"small\"\n    onClick={(e) => {\n      setConfirmModalOpen(true);\n      setDeletingQuickemessage(quickemessage);\n    }}\n  >\n    <DeleteOutlineIcon />\n  </IconButton>\n)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={5} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Quickemessages;","import React, { useContext } from \"react\";\nimport { Route as RouterRoute, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/Auth/AuthContext\";\nimport BackdropLoading from \"../components/BackdropLoading\";\n\nconst Route = ({ component: Component, isPrivate = false, ...rest }) => {\n\tconst { isAuth, loading } = useContext(AuthContext);\n\n\tif (!isAuth && isPrivate) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{loading && <BackdropLoading />}\n\t\t\t\t<Redirect to={{ pathname: \"/login\", state: { from: rest.location } }} />\n\t\t\t</>\n\t\t);\n\t}\n\n\tif (isAuth && !isPrivate) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{loading && <BackdropLoading />}\n\t\t\t\t<Redirect to={{ pathname: \"/\", state: { from: rest.location } }} />;\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <BackdropLoading />}\n\t\t\t<RouterRoute {...rest} component={Component} />\n\t\t</>\n\t);\n};\n\nexport default Route;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ScheduleModal from \"../../components/ScheduleModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport moment from \"moment\";\nimport { capitalize } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nconst getUrlParam = (param) => {\n  return new URLSearchParams(window.location.search).get(param);\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_SCHEDULES\") {\n    const schedules = action.payload;\n    const newSchedules = [];\n\n    schedules.forEach((schedule) => {\n      const scheduleIndex = state.findIndex((s) => s.id === schedule.id);\n      if (scheduleIndex !== -1) {\n        state[scheduleIndex] = schedule;\n      } else {\n        newSchedules.push(schedule);\n      }\n    });\n\n    return [...state, ...newSchedules];\n  }\n\n  if (action.type === \"UPDATE_SCHEDULES\") {\n    const schedule = action.payload;\n    const scheduleIndex = state.findIndex((s) => s.id === schedule.id);\n\n    if (scheduleIndex !== -1) {\n      state[scheduleIndex] = schedule;\n      return [...state];\n    } else {\n      return [schedule, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_SCHEDULE\") {\n    const scheduleId = action.payload;\n\n    const scheduleIndex = state.findIndex((s) => s.id === scheduleId);\n    if (scheduleIndex !== -1) {\n      state.splice(scheduleIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Schedules = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedSchedule, setSelectedSchedule] = useState(null);\n  const [deletingSchedule, setDeletingSchedule] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [schedules, dispatch] = useReducer(reducer, []);\n  const [scheduleModalOpen, setScheduleModalOpen] = useState(false);\n  const [contactId, setContactId] = useState(+getUrlParam(\"contactId\"));\n\n  const fetchSchedules = useCallback(async () => {\n    try {\n      const { data } = await api.get(\"/schedules/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_SCHEDULES\", payload: data.schedules });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  }, [searchParam, pageNumber]);\n\n  const handleOpenScheduleModalFromContactId = useCallback(() => {\n    if (contactId) {\n      handleOpenScheduleModal();\n    }\n  }, [contactId]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchSchedules();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [\n    searchParam,\n    pageNumber,\n    contactId,\n    fetchSchedules,\n    handleOpenScheduleModalFromContactId,\n  ]);\n\n  useEffect(() => {\n    handleOpenScheduleModalFromContactId();\n    const socket = socketConnection({ companyId: user.companyId });\n\n    socket.on(\"user\", (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_SCHEDULES\", payload: data.schedules });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.scheduleId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [handleOpenScheduleModalFromContactId, user]);\n\n  const cleanContact = () => {\n    setContactId(\"\");\n  };\n\n  const handleOpenScheduleModal = () => {\n    setSelectedSchedule(null);\n    setScheduleModalOpen(true);\n  };\n\n  const handleCloseScheduleModal = () => {\n    setSelectedSchedule(null);\n    setScheduleModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditSchedule = (schedule) => {\n    setSelectedSchedule(schedule);\n    setScheduleModalOpen(true);\n  };\n\n  const handleDeleteSchedule = async (scheduleId) => {\n    try {\n      await api.delete(`/schedules/${scheduleId}`);\n      toast.success(i18n.t(\"schedules.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingSchedule(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n    await fetchSchedules();\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const truncate = (str, len) => {\n    if (str.length > len) {\n      return str.substring(0, len) + \"...\";\n    }\n    return str;\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingSchedule &&\n          `${i18n.t(\"schedules.confirmationModal.deleteTitle\")}`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteSchedule(deletingSchedule.id)}\n      >\n        {i18n.t(\"schedules.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <ScheduleModal\n        open={scheduleModalOpen}\n        onClose={handleCloseScheduleModal}\n        reload={fetchSchedules}\n        aria-labelledby=\"form-dialog-title\"\n        scheduleId={selectedSchedule && selectedSchedule.id}\n        contactId={contactId}\n        cleanContact={cleanContact}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"schedules.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenScheduleModal}\n          >\n            {i18n.t(\"schedules.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.contact\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.body\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.sendAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {schedules.map((schedule) => (\n                <TableRow key={schedule.id}>\n                  <TableCell align=\"center\">{schedule.contact.name}</TableCell>\n                  <TableCell align=\"center\" title={schedule.body}>\n                    {truncate(schedule.body, 25)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {moment(schedule.sendAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {capitalize(schedule.status)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditSchedule(schedule)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingSchedule(schedule);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Schedules;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { head } from \"lodash\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport Chip from '@material-ui/core/Chip';\n\nimport { i18n } from \"../../translate/i18n\";\nimport moment from \"moment\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport {\n  Box,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst CampaignSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst CampaignModal = ({\n  open,\n  onClose,\n  campaignId,\n  initialValues,\n  onSave,\n  resetPagination,\n}) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n  const { user } = useContext(AuthContext);\n  const { companyId } = user;\n\n  const initialState = {\n    name: \"\",\n    message1: \"\",\n    message2: \"\",\n    message3: \"\",\n    message4: \"\",\n    message5: \"\",\n    confirmationMessage1: \"\",\n    confirmationMessage2: \"\",\n    confirmationMessage3: \"\",\n    confirmationMessage4: \"\",\n    confirmationMessage5: \"\",\n    status: \"INATIVA\", // INATIVA, PROGRAMADA, EM_ANDAMENTO, CANCELADA, FINALIZADA,\n    confirmation: false,\n    scheduledAt: \"\",\n    //whatsappId: \"\",\n    contactListId: \"\",\n    tagListId: \"Nenhuma\",\n    companyId,\n  };\n\n  const [campaign, setCampaign] = useState(initialState);\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [selectedWhatsapps, setSelectedWhatsapps] = useState([]);\n  const [contactLists, setContactLists] = useState([]);\n  const [tagLists, setTagLists] = useState([]);\n  const [messageTab, setMessageTab] = useState(0);\n  const [attachment, setAttachment] = useState(null);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [campaignEditable, setCampaignEditable] = useState(true);\n  const attachmentFile = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      if (initialValues) {\n        setCampaign((prevState) => {\n          return { ...prevState, ...initialValues };\n        });\n      }\n\n      api\n        .get(`/contact-lists/list`, { params: { companyId } })\n        .then(({ data }) => setContactLists(data));\n\n      api\n  \t\t.get(`/whatsapp`, { params: { companyId, session: 0 } })\n  \t\t.then(({ data }) => {\n    \t\t// Mapear os dados recebidos da API para adicionar a propriedade 'selected'\n    \t\tconst mappedWhatsapps = data.map((whatsapp) => ({\n      \t\t...whatsapp,\n      \t\tselected: false,\n    \t}));\n\n        setWhatsapps(mappedWhatsapps);\n      });\n\n      api.get(`/tags`, { params: { companyId } })\n      .then(({ data }) => {\n        const fetchedTags = data.tags;\n        // Perform any necessary data transformation here\n        const formattedTagLists = fetchedTags.map((tag) => ({\n          id: tag.id,\n          name: tag.name,\n        }));\n        setTagLists(formattedTagLists);\n      })\n      .catch((error) => {\n        console.error(\"Error retrieving tags:\", error);\n      });\n      \n      if (!campaignId) return;\n\n      api.get(`/campaigns/${campaignId}`).then(({ data }) => {\n        setCampaign((prev) => {\n          let prevCampaignData = Object.assign({}, prev);\n\n          Object.entries(data).forEach(([key, value]) => {\n            if (key === \"scheduledAt\" && value !== \"\" && value !== null) {\n              prevCampaignData[key] = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n            } else {\n              prevCampaignData[key] = value === null ? \"\" : value;\n            }\n          });\n\n          return prevCampaignData;\n        });\n      });\n    }\n  }, [campaignId, open, initialValues, companyId]);\n\n  \n\n  useEffect(() => {\n    const now = moment();\n    const scheduledAt = moment(campaign.scheduledAt);\n    const moreThenAnHour =\n      !Number.isNaN(scheduledAt.diff(now)) && scheduledAt.diff(now, \"hour\") > 1;\n    const isEditable =\n      campaign.status === \"INATIVA\" ||\n      (campaign.status === \"PROGRAMADA\" && moreThenAnHour);\n\n    setCampaignEditable(isEditable);\n  }, [campaign.status, campaign.scheduledAt]);\n\n  const handleClose = () => {\n    onClose();\n    setCampaign(initialState);\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveCampaign = async (values) => {\n    try {\n      const dataValues = {\n        ...values,  // Merge the existing values object\n        whatsappId: selectedWhatsapps.join(\",\"),\n      };\n    \n      //console.log(values);\n      //console.log(selectedWhatsapps);\n    \n      Object.entries(values).forEach(([key, value]) => {\n        if (key === \"scheduledAt\" && value !== \"\" && value !== null) {\n          dataValues[key] = moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\n        } else {\n          dataValues[key] = value === \"\" ? null : value;\n        }\n      });\n\n      if (campaignId) {\n        await api.put(`/campaigns/${campaignId}`, dataValues);\n\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/campaigns/${campaignId}/media-upload`, formData);\n        }\n        handleClose();\n      } else {\n        const { data } = await api.post(\"/campaigns\", dataValues);\n\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/campaigns/${data.id}/media-upload`, formData);\n        }\n        if (onSave) {\n          onSave(data);\n        }\n        handleClose();\n      }\n      toast.success(i18n.t(\"campaigns.toasts.success\"));\n    } catch (err) {\n      console.log(err);\n      toastError(err);\n    }\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (campaign.mediaPath) {\n      await api.delete(`/campaigns/${campaign.id}/media-upload`);\n      setCampaign((prev) => ({ ...prev, mediaPath: null, mediaName: null }));\n      toast.success(i18n.t(\"campaigns.toasts.deleted\"));\n    }\n  };\n\n  const renderMessageField = (identifier) => {\n    return (\n      <Field\n        as={TextField}\n        id={identifier}\n        name={identifier}\n        fullWidth\n        rows={5}\n        label={i18n.t(`campaigns.dialog.form.${identifier}`)}\n        placeholder={i18n.t(\"campaigns.dialog.form.messagePlaceholder\")}\n        multiline={true}\n        variant=\"outlined\"\n        helperText=\"Utilize variáveis como {nome}, {numero}, {email} ou defina variáveis personalizadas.\"\n        disabled={!campaignEditable && campaign.status !== \"CANCELADA\"}\n      />\n    );\n  };\n\n  const renderConfirmationMessageField = (identifier) => {\n    return (\n      <Field\n        as={TextField}\n        id={identifier}\n        name={identifier}\n        fullWidth\n        rows={5}\n        label={i18n.t(`campaigns.dialog.form.${identifier}`)}\n        placeholder={i18n.t(\"campaigns.dialog.form.messagePlaceholder\")}\n        multiline={true}\n        variant=\"outlined\"\n        disabled={!campaignEditable && campaign.status !== \"CANCELADA\"}\n      />\n    );\n  };\n\n  const cancelCampaign = async () => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/cancel`);\n      toast.success(i18n.t(\"campaigns.toasts.cancel\"));\n      setCampaign((prev) => ({ ...prev, status: \"CANCELADA\" }));\n      resetPagination();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  const restartCampaign = async () => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/restart`);\n      toast.success(i18n.t(\"campaigns.toasts.restart\"));\n      setCampaign((prev) => ({ ...prev, status: \"EM_ANDAMENTO\" }));\n      resetPagination();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"campaigns.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"md\"\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {campaignEditable ? (\n            <>\n              {campaignId\n                ? `${i18n.t(\"campaigns.dialog.update\")}`\n                : `${i18n.t(\"campaigns.dialog.new\")}`}\n            </>\n          ) : (\n            <>{`${i18n.t(\"campaigns.dialog.readonly\")}`}</>\n          )}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={campaign}\n          enableReinitialize={true}\n          validationSchema={CampaignSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveCampaign(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} md={4} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"campaigns.dialog.form.name\")}\n                      name=\"name\"\n                      error={touched.name && Boolean(errors.name)}\n                      helperText={touched.name && errors.name}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.textField}\n                      disabled={!campaignEditable}\n                    />\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                    <FormControl\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.formControl}\n                    >\n                      <InputLabel id=\"confirmation-selection-label\">\n                        {i18n.t(\"campaigns.dialog.form.confirmation\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"campaigns.dialog.form.confirmation\")}\n                        placeholder={i18n.t(\n                          \"campaigns.dialog.form.confirmation\"\n                        )}\n                        labelId=\"confirmation-selection-label\"\n                        id=\"confirmation\"\n                        name=\"confirmation\"\n                        error={\n                          touched.confirmation && Boolean(errors.confirmation)\n                        }\n                        disabled={!campaignEditable}\n                      >\n                        <MenuItem value={false}>Desabilitada</MenuItem>\n                        <MenuItem value={true}>Habilitada</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                    <FormControl\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.formControl}\n                    >\n                      <InputLabel id=\"contactList-selection-label\">\n                        {i18n.t(\"campaigns.dialog.form.contactList\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"campaigns.dialog.form.contactList\")}\n                        placeholder={i18n.t(\n                          \"campaigns.dialog.form.contactList\"\n                        )}\n                        labelId=\"contactList-selection-label\"\n                        id=\"contactListId\"\n                        name=\"contactListId\"\n                        error={\n                          touched.contactListId && Boolean(errors.contactListId)\n                        }\n                        disabled={!campaignEditable}\n                      >\n                        <MenuItem value=\"\">Nenhuma</MenuItem>\n                        {contactLists &&\n                          contactLists.map((contactList) => (\n                            <MenuItem\n                              key={contactList.id}\n                              value={contactList.id}\n                            >\n                              {contactList.name}\n                            </MenuItem>\n                          ))}\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                  <FormControl\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    className={classes.formControl}\n                  >\n                    <InputLabel id=\"tagList-selection-label\">\n                      {i18n.t(\"campaigns.dialog.form.tagList\")}\n                    </InputLabel>\n                    <Field\n                      as={Select}\n                      label={i18n.t(\"campaigns.dialog.form.tagList\")}\n                      placeholder={i18n.t(\"campaigns.dialog.form.tagList\")}\n                      labelId=\"tagList-selection-label\"\n                      id=\"tagListId\"\n                      name=\"tagListId\"\n                      error={touched.tagListId && Boolean(errors.tagListId)}\n                      disabled={!campaignEditable}\n                    >\n                      <MenuItem value=\"\">Nenhuma</MenuItem>\n                      {Array.isArray(tagLists) &&\n                        tagLists.map((tagList) => (\n                          <MenuItem key={tagList.id} value={tagList.id}>\n                            {tagList.name}\n                          </MenuItem>\n                        ))}\n                    </Field>\n                  </FormControl>\n                </Grid>\n\n<Grid xs={12} md={4} item>\n  <FormControl\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    className={classes.formControl}\n  >\n    <InputLabel id=\"whatsapp-selection-label\">\n      {i18n.t(\"campaigns.dialog.form.whatsapp\")}\n    </InputLabel>\n    <Field\n      as={Select}\n      multiple \n      label={i18n.t(\"campaigns.dialog.form.whatsapp\")}\n      placeholder={i18n.t(\"campaigns.dialog.form.whatsapp\")}\n      labelId=\"whatsapp-selection-label\"\n      id=\"whatsappIds\"\n      name=\"whatsappIds\"\n      error={touched.whatsappId && Boolean(errors.whatsappId)}\n      disabled={!campaignEditable}\n      value={selectedWhatsapps}  \n      onChange={(event) => setSelectedWhatsapps(event.target.value)} \n      renderValue={(selected) => (\n        <div>\n          {selected.map((value) => (\n            <Chip key={value} label={whatsapps.find((whatsapp) => whatsapp.id === value).name} />\n          ))}\n        </div>\n      )}\n    >\n      {whatsapps &&\n        whatsapps.map((whatsapp) => (\n          <MenuItem key={whatsapp.id} value={whatsapp.id}>\n            {whatsapp.name}\n          </MenuItem>\n        ))}\n    </Field>\n  </FormControl>\n</Grid>\n\n                  <Grid xs={12} md={4} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"campaigns.dialog.form.scheduledAt\")}\n                      name=\"scheduledAt\"\n                      error={touched.scheduledAt && Boolean(errors.scheduledAt)}\n                      helperText={touched.scheduledAt && errors.scheduledAt}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      type=\"datetime-local\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      className={classes.textField}\n                      disabled={!campaignEditable}\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Tabs\n                      value={messageTab}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\"\n                      onChange={(e, v) => setMessageTab(v)}\n                      variant=\"fullWidth\"\n                      centered\n                      style={{\n                        background: \"#f2f2f2\",\n                        border: \"1px solid #e6e6e6\",\n                        borderRadius: 2,\n                      }}\n                    >\n                      <Tab label=\"Msg. 1\" index={0} />\n                      <Tab label=\"Msg. 2\" index={1} />\n                      <Tab label=\"Msg. 3\" index={2} />\n                      <Tab label=\"Msg. 4\" index={3} />\n                      <Tab label=\"Msg. 5\" index={4} />\n                    </Tabs>\n                    <Box style={{ paddingTop: 20, border: \"none\" }}>\n                      {messageTab === 0 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message1\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage1\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message1\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 1 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message2\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage2\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message2\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 2 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message3\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage3\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message3\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 3 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message4\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage4\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message4\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 4 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message5\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage5\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message5\")}</>\n                          )}\n                        </>\n                      )}\n                    </Box>\n                  </Grid>\n                  {(campaign.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment != null\n                          ? attachment.name\n                          : campaign.mediaName}\n                      </Button>\n                      {campaignEditable && (\n                        <IconButton\n                          onClick={() => setConfirmationOpen(true)}\n                          color=\"primary\"\n                        >\n                          <DeleteOutlineIcon color=\"secondary\" />\n                        </IconButton>\n                      )}\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {campaign.status === \"CANCELADA\" && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => restartCampaign()}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.restart\")}\n                  </Button>\n                )}\n                {campaign.status === \"EM_ANDAMENTO\" && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => cancelCampaign()}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.cancel\")}\n                  </Button>\n                )}\n                {!attachment && !campaign.mediaPath && campaignEditable && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"campaigns.dialog.buttons.close\")}\n                </Button>\n                {(campaignEditable || campaign.status === \"CANCELADA\") && (\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    variant=\"contained\"\n                    className={classes.btnWrapper}\n                  >\n                    {campaignId\n                      ? `${i18n.t(\"campaigns.dialog.buttons.edit\")}`\n                      : `${i18n.t(\"campaigns.dialog.buttons.add\")}`}\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </Button>\n                )}\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CampaignModal;","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport TimerOffIcon from \"@material-ui/icons/TimerOff\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport CampaignModal from \"../../components/CampaignModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { useDate } from \"../../hooks/useDate\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CAMPAIGNS\") {\n    const campaigns = action.payload;\n    const newCampaigns = [];\n\n    if (isArray(campaigns)) {\n      campaigns.forEach((campaign) => {\n        const campaignIndex = state.findIndex((u) => u.id === campaign.id);\n        if (campaignIndex !== -1) {\n          state[campaignIndex] = campaign;\n        } else {\n          newCampaigns.push(campaign);\n        }\n      });\n    }\n\n    return [...state, ...newCampaigns];\n  }\n\n  if (action.type === \"UPDATE_CAMPAIGNS\") {\n    const campaign = action.payload;\n    const campaignIndex = state.findIndex((u) => u.id === campaign.id);\n\n    if (campaignIndex !== -1) {\n      state[campaignIndex] = campaign;\n      return [...state];\n    } else {\n      return [campaign, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CAMPAIGN\") {\n    const campaignId = action.payload;\n\n    const campaignIndex = state.findIndex((u) => u.id === campaignId);\n    if (campaignIndex !== -1) {\n      state.splice(campaignIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Campaigns = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [deletingCampaign, setDeletingCampaign] = useState(null);\n  const [campaignModalOpen, setCampaignModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [campaigns, dispatch] = useReducer(reducer, []);\n\n  const { datetimeToClient } = useDate();\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchCampaigns();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-campaign`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CAMPAIGNS\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CAMPAIGN\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchCampaigns = async () => {\n    try {\n      const { data } = await api.get(\"/campaigns/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_CAMPAIGNS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenCampaignModal = () => {\n    setSelectedCampaign(null);\n    setCampaignModalOpen(true);\n  };\n\n  const handleCloseCampaignModal = () => {\n    setSelectedCampaign(null);\n    setCampaignModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditCampaign = (campaign) => {\n    setSelectedCampaign(campaign);\n    setCampaignModalOpen(true);\n  };\n\n  const handleDeleteCampaign = async (campaignId) => {\n    try {\n      await api.delete(`/campaigns/${campaignId}`);\n      toast.success(i18n.t(\"campaigns.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingCampaign(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const formatStatus = (val) => {\n    switch (val) {\n      case \"INATIVA\":\n        return \"Inativa\";\n      case \"PROGRAMADA\":\n        return \"Programada\";\n      case \"EM_ANDAMENTO\":\n        return \"Em Andamento\";\n      case \"CANCELADA\":\n        return \"Cancelada\";\n      case \"FINALIZADA\":\n        return \"Finalizada\";\n      default:\n        return val;\n    }\n  };\n\n  const cancelCampaign = async (campaign) => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/cancel`);\n      toast.success(i18n.t(\"campaigns.toasts.cancel\"));\n      setPageNumber(1);\n      fetchCampaigns();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  const restartCampaign = async (campaign) => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/restart`);\n      toast.success(i18n.t(\"campaigns.toasts.restart\"));\n      setPageNumber(1);\n      fetchCampaigns();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingCampaign &&\n          `${i18n.t(\"campaigns.confirmationModal.deleteTitle\")} ${\n            deletingCampaign.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteCampaign(deletingCampaign.id)}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <CampaignModal\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchCampaigns();\n        }}\n        open={campaignModalOpen}\n        onClose={handleCloseCampaignModal}\n        aria-labelledby=\"form-dialog-title\"\n        campaignId={selectedCampaign && selectedCampaign.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"campaigns.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"campaigns.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenCampaignModal}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"campaigns.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.contactList\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.whatsapp\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.scheduledAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.completedAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.confirmation\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {campaigns.map((campaign) => (\n                <TableRow key={campaign.id}>\n                  <TableCell align=\"center\">{campaign.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {formatStatus(campaign.status)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.contactListId\n                      ? campaign.contactList.name\n                      : \"Não definida\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.whatsappId\n                      ? campaign.whatsapp.name\n                      : \"Não definido\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.scheduledAt\n                      ? datetimeToClient(campaign.scheduledAt)\n                      : \"Sem agendamento\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.completedAt\n                      ? datetimeToClient(campaign.completedAt)\n                      : \"Não concluída\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.confirmation ? \"Habilitada\" : \"Desabilitada\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.status === \"EM_ANDAMENTO\" && (\n                      <IconButton\n                        onClick={() => cancelCampaign(campaign)}\n                        title=\"Parar Campanha\"\n                        size=\"small\"\n                      >\n                        <PauseCircleOutlineIcon />\n                      </IconButton>\n                    )}\n                    {campaign.status === \"CANCELADA\" && (\n                      <IconButton\n                        onClick={() => restartCampaign(campaign)}\n                        title=\"Parar Campanha\"\n                        size=\"small\"\n                      >\n                        <PlayCircleOutlineIcon />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      onClick={() =>\n                        history.push(`/campaign/${campaign.id}/report`)\n                      }\n                      size=\"small\"\n                    >\n                      <DescriptionIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditCampaign(campaign)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingCampaign(campaign);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={8} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Campaigns;\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from \"react-toastify\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport api from \"../../services/api\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  tabPanelsContainer: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst initialSettings = {\n  messageInterval: 20,\n  longerIntervalAfter: 20,\n  greaterInterval: 60,\n  variables: [],\n};\n\nconst CampaignsConfig = () => {\n  const classes = useStyles();\n\n  const [settings, setSettings] = useState(initialSettings);\n  const [showVariablesForm, setShowVariablesForm] = useState(false);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(null);\n  const [variable, setVariable] = useState({ key: \"\", value: \"\" });\n\n  useEffect(() => {\n    api.get(\"/campaign-settings\").then(({ data }) => {\n      const settingsList = [];\n      if (Array.isArray(data) && data.length > 0) {\n        data.forEach((item) => {\n          settingsList.push([item.key, JSON.parse(item.value)]);\n        });\n        setSettings(Object.fromEntries(settingsList));\n      }\n    });\n  }, []);\n\n  const handleOnChangeVariable = (e) => {\n    if (e.target.value !== null) {\n      const changedProp = {};\n      changedProp[e.target.name] = e.target.value;\n      setVariable((prev) => ({ ...prev, ...changedProp }));\n    }\n  };\n\n  const handleOnChangeSettings = (e) => {\n    const changedProp = {};\n    changedProp[e.target.name] = e.target.value;\n    setSettings((prev) => ({ ...prev, ...changedProp }));\n  };\n\n  const addVariable = () => {\n    setSettings((prev) => {\n      const variablesExists = settings.variables.filter(\n        (v) => v.key === variable.key\n      );\n      const variables = prev.variables;\n      if (variablesExists.length === 0) {\n        variables.push(Object.assign({}, variable));\n        setVariable({ key: \"\", value: \"\" });\n      }\n      return { ...prev, variables };\n    });\n  };\n\n  const removeVariable = () => {\n    const newList = settings.variables.filter((v) => v.key !== selectedKey);\n    setSettings((prev) => ({ ...prev, variables: newList }));\n    setSelectedKey(null);\n  };\n\n  const saveSettings = async () => {\n    await api.post(\"/campaign-settings\", { settings });\n    toast.success(\"Configurações salvas\");\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={i18n.t(\"campaigns.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={removeVariable}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} item>\n            <Title>{i18n.t(\"campaignsConfig.title\")}</Title>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Box className={classes.tabPanelsContainer}>\n          <Grid spacing={2} container>\n            <Grid xs={12} item>\n              <Typography component={\"h3\"}>Intervalos</Typography>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"messageInterval-label\">\n                  Intervalo Randômico de Disparo\n                </InputLabel>\n                <Select\n                  name=\"messageInterval\"\n                  id=\"messageInterval\"\n                  labelId=\"messageInterval-label\"\n                  label=\"Intervalo Randômico de Disparo\"\n                  value={settings.messageInterval}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Sem Intervalo</MenuItem>\n                  <MenuItem value={5}>5 segundos</MenuItem>\n                  <MenuItem value={10}>10 segundos</MenuItem>\n                  <MenuItem value={15}>15 segundos</MenuItem>\n                  <MenuItem value={20}>20 segundos</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"longerIntervalAfter-label\">\n                  Intervalo Maior Após\n                </InputLabel>\n                <Select\n                  name=\"longerIntervalAfter\"\n                  id=\"longerIntervalAfter\"\n                  labelId=\"longerIntervalAfter-label\"\n                  label=\"Intervalo Maior Após\"\n                  value={settings.longerIntervalAfter}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Não definido</MenuItem>\n                  <MenuItem value={5}>5 mensagens</MenuItem>\n                  <MenuItem value={10}>10 mensagens</MenuItem>\n                  <MenuItem value={15}>15 mensagens</MenuItem>\n                  <MenuItem value={20}>20 mensagens</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"greaterInterval-label\">\n                  Intervalo de Disparo Maior\n                </InputLabel>\n                <Select\n                  name=\"greaterInterval\"\n                  id=\"greaterInterval\"\n                  labelId=\"greaterInterval-label\"\n                  label=\"Intervalo de Disparo Maior\"\n                  value={settings.greaterInterval}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Sem Intervalo</MenuItem>\n                  <MenuItem value={20}>20 segundos</MenuItem>\n                  <MenuItem value={30}>30 segundos</MenuItem>\n                  <MenuItem value={40}>40 segundos</MenuItem>\n                  <MenuItem value={50}>50 segundos</MenuItem>\n                  <MenuItem value={60}>60 segundos</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} className={classes.textRight} item>\n              <Button\n                onClick={() => setShowVariablesForm(!showVariablesForm)}\n                color=\"primary\"\n                style={{ marginRight: 10 }}\n              >\n                Adicionar Variável\n              </Button>\n              <Button\n                onClick={saveSettings}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Salvar Configurações\n              </Button>\n            </Grid>\n            {showVariablesForm && (\n              <>\n                <Grid xs={12} md={6} item>\n                  <TextField\n                    label=\"Atalho\"\n                    variant=\"outlined\"\n                    value={variable.key}\n                    name=\"key\"\n                    onChange={handleOnChangeVariable}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid xs={12} md={6} item>\n                  <TextField\n                    label=\"Conteúdo\"\n                    variant=\"outlined\"\n                    value={variable.value}\n                    name=\"value\"\n                    onChange={handleOnChangeVariable}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid xs={12} className={classes.textRight} item>\n                  <Button\n                    onClick={() => setShowVariablesForm(!showVariablesForm)}\n                    color=\"primary\"\n                    style={{ marginRight: 10 }}\n                  >\n                    Fechar\n                  </Button>\n                  <Button\n                    onClick={addVariable}\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Adicionar\n                  </Button>\n                </Grid>\n              </>\n            )}\n            {settings.variables.length > 0 && (\n              <Grid xs={12} className={classes.textRight} item>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell style={{ width: \"1%\" }}></TableCell>\n                      <TableCell>Atalho</TableCell>\n                      <TableCell>Conteúdo</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Array.isArray(settings.variables) &&\n                      settings.variables.map((v, k) => (\n                        <TableRow key={k}>\n                          <TableCell>\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => {\n                                setSelectedKey(v.key);\n                                setConfirmationOpen(true);\n                              }}\n                            >\n                              <DeleteOutlineIcon />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell>{\"{\" + v.key + \"}\"}</TableCell>\n                          <TableCell>{v.value}</TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </Grid>\n            )}\n          </Grid>\n        </Box>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default CampaignsConfig;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport { Grid, LinearProgress, Typography } from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { has, get, isNull } from \"lodash\";\nimport CardCounter from \"../../components/Dashboard/CardCounter\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { useDate } from \"../../hooks/useDate\";\n\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(2),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  tabPanelsContainer: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst CampaignReport = () => {\n  const classes = useStyles();\n\n  const { campaignId } = useParams();\n\n  const [campaign, setCampaign] = useState({});\n  const [validContacts, setValidContacts] = useState(0);\n  const [delivered, setDelivered] = useState(0);\n  const [confirmationRequested, setConfirmationRequested] = useState(0);\n  const [confirmed, setConfirmed] = useState(0);\n  const [percent, setPercent] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const mounted = useRef(true);\n\n  const { datetimeToClient } = useDate();\n\n  useEffect(() => {\n    if (mounted.current) {\n      findCampaign();\n    }\n\n    return () => {\n      mounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (mounted.current && has(campaign, \"shipping\")) {\n      if (has(campaign, \"contactList\")) {\n        const contactList = get(campaign, \"contactList\");\n        const valids = contactList.contacts.filter((c) => c.isWhatsappValid);\n        setValidContacts(valids.length);\n      }\n\n      if (has(campaign, \"shipping\")) {\n        const contacts = get(campaign, \"shipping\");\n        const delivered = contacts.filter((c) => !isNull(c.deliveredAt));\n        const confirmationRequested = contacts.filter(\n          (c) => !isNull(c.confirmationRequestedAt)\n        );\n        const confirmed = contacts.filter(\n          (c) => !isNull(c.deliveredAt) && !isNull(c.confirmationRequestedAt)\n        );\n        setDelivered(delivered.length);\n        setConfirmationRequested(confirmationRequested.length);\n        setConfirmed(confirmed.length);\n        setDelivered(delivered.length);\n      }\n    }\n  }, [campaign]);\n\n  useEffect(() => {\n    setPercent((delivered / validContacts) * 100);\n  }, [delivered, validContacts]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-campaign`, (data) => {\n      console.log(data);\n      if (data.record.id === +campaignId) {\n        setCampaign(data.record);\n\n        if (data.record.status === \"FINALIZADA\") {\n          setTimeout(() => {\n            findCampaign();\n          }, 5000);\n        }\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [campaignId]);\n\n  const findCampaign = async () => {\n    setLoading(true);\n    const { data } = await api.get(`/campaigns/${campaignId}`);\n    setCampaign(data);\n    setLoading(false);\n  };\n\n  const formatStatus = (val) => {\n    switch (val) {\n      case \"INATIVA\":\n        return \"Inativa\";\n      case \"PROGRAMADA\":\n        return \"Programada\";\n      case \"EM_ANDAMENTO\":\n        return \"Em Andamento\";\n      case \"CANCELADA\":\n        return \"Cancelada\";\n      case \"FINALIZADA\":\n        return \"Finalizada\";\n      default:\n        return val;\n    }\n  };\n\n  return (\n    <MainContainer>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} item>\n            <Title>Relatório da {campaign.name || \"Campanha\"}</Title>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Typography variant=\"h6\" component=\"h2\">\n          Status: {formatStatus(campaign.status)} {delivered} de {validContacts}\n        </Typography>\n        <Grid spacing={2} container>\n          <Grid xs={12} item>\n            <LinearProgress\n              variant=\"determinate\"\n              style={{ height: 15, borderRadius: 3, margin: \"20px 0\" }}\n              value={percent}\n            />\n          </Grid>\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<GroupIcon fontSize=\"inherit\" />}\n              title=\"Contatos Válidos\"\n              value={validContacts}\n              loading={loading}\n            />\n          </Grid>\n          {campaign.confirmation && (\n            <>\n              <Grid xs={12} md={4} item>\n                <CardCounter\n                  icon={<DoneIcon fontSize=\"inherit\" />}\n                  title=\"Confirmações Solicitadas\"\n                  value={confirmationRequested}\n                  loading={loading}\n                />\n              </Grid>\n              <Grid xs={12} md={4} item>\n                <CardCounter\n                  icon={<DoneAllIcon fontSize=\"inherit\" />}\n                  title=\"Confirmações\"\n                  value={confirmed}\n                  loading={loading}\n                />\n              </Grid>\n            </>\n          )}\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<CheckCircleIcon fontSize=\"inherit\" />}\n              title=\"Entregues\"\n              value={delivered}\n              loading={loading}\n            />\n          </Grid>\n          {campaign.whatsappId && (\n            <Grid xs={12} md={4} item>\n              <CardCounter\n                icon={<WhatsAppIcon fontSize=\"inherit\" />}\n                title=\"Conexão\"\n                value={campaign.whatsapp.name}\n                loading={loading}\n              />\n            </Grid>\n          )}\n          {campaign.contactListId && (\n            <Grid xs={12} md={4} item>\n              <CardCounter\n                icon={<ListAltIcon fontSize=\"inherit\" />}\n                title=\"Lista de Contatos\"\n                value={campaign.contactList.name}\n                loading={loading}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<ScheduleIcon fontSize=\"inherit\" />}\n              title=\"Agendamento\"\n              value={datetimeToClient(campaign.scheduledAt)}\n              loading={loading}\n            />\n          </Grid>\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<EventAvailableIcon fontSize=\"inherit\" />}\n              title=\"Conclusão\"\n              value={datetimeToClient(campaign.completedAt)}\n              loading={loading}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default CampaignReport;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { head } from \"lodash\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst AnnouncementSchema = Yup.object().shape({\n  title: Yup.string().required(\"Obrigatório\"),\n  text: Yup.string().required(\"Obrigatório\"),\n});\n\nconst AnnouncementModal = ({ open, onClose, announcementId, reload }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    title: \"\",\n    text: \"\",\n    priority: 3,\n    status: true,\n  };\n\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [announcement, setAnnouncement] = useState(initialState);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n\n  useEffect(() => {\n    try {\n      (async () => {\n        if (!announcementId) return;\n\n        const { data } = await api.get(`/announcements/${announcementId}`);\n        setAnnouncement((prevState) => {\n          return { ...prevState, ...data };\n        });\n      })();\n    } catch (err) {\n      toastError(err);\n    }\n  }, [announcementId, open]);\n\n  const handleClose = () => {\n    setAnnouncement(initialState);\n    setAttachment(null);\n    onClose();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveAnnouncement = async (values) => {\n    const announcementData = { ...values };\n    try {\n      if (announcementId) {\n        await api.put(`/announcements/${announcementId}`, announcementData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(\n            `/announcements/${announcementId}/media-upload`,\n            formData\n          );\n        }\n      } else {\n        const { data } = await api.post(\"/announcements\", announcementData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/announcements/${data.id}/media-upload`, formData);\n        }\n      }\n      toast.success(i18n.t(\"announcements.toasts.success\"));\n      if (typeof reload == \"function\") {\n        reload();\n      }\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (announcement.mediaPath) {\n      await api.delete(`/announcements/${announcement.id}/media-upload`);\n      setAnnouncement((prev) => ({\n        ...prev,\n        mediaPath: null,\n      }));\n      toast.success(i18n.t(\"announcements.toasts.deleted\"));\n      if (typeof reload == \"function\") {\n        reload();\n      }\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"announcements.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"announcements.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {announcementId\n            ? `${i18n.t(\"announcements.dialog.edit\")}`\n            : `${i18n.t(\"announcements.dialog.add\")}`}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={announcement}\n          enableReinitialize={true}\n          validationSchema={AnnouncementSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveAnnouncement(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting, values }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"announcements.dialog.form.title\")}\n                      name=\"title\"\n                      error={touched.title && Boolean(errors.title)}\n                      helperText={touched.title && errors.title}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"announcements.dialog.form.text\")}\n                      name=\"text\"\n                      error={touched.text && Boolean(errors.text)}\n                      helperText={touched.text && errors.text}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      multiline={true}\n                      rows={7}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"status-selection-label\">\n                        {i18n.t(\"announcements.dialog.form.status\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"announcements.dialog.form.status\")}\n                        placeholder={i18n.t(\"announcements.dialog.form.status\")}\n                        labelId=\"status-selection-label\"\n                        id=\"status\"\n                        name=\"status\"\n                        error={touched.status && Boolean(errors.status)}\n                      >\n                        <MenuItem value={true}>Ativo</MenuItem>\n                        <MenuItem value={false}>Inativo</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"priority-selection-label\">\n                        {i18n.t(\"announcements.dialog.form.priority\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"announcements.dialog.form.priority\")}\n                        placeholder={i18n.t(\n                          \"announcements.dialog.form.priority\"\n                        )}\n                        labelId=\"priority-selection-label\"\n                        id=\"priority\"\n                        name=\"priority\"\n                        error={touched.priority && Boolean(errors.priority)}\n                      >\n                        <MenuItem value={1}>Alta</MenuItem>\n                        <MenuItem value={2}>Média</MenuItem>\n                        <MenuItem value={3}>Baixa</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  {(announcement.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment ? attachment.name : announcement.mediaName}\n                      </Button>\n                      <IconButton\n                        onClick={() => setConfirmationOpen(true)}\n                        color=\"secondary\"\n                      >\n                        <DeleteOutlineIcon />\n                      </IconButton>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {!attachment && !announcement.mediaPath && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"announcements.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"announcements.dialog.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {announcementId\n                    ? `${i18n.t(\"announcements.dialog.buttons.add\")}`\n                    : `${i18n.t(\"announcements.dialog.buttons.edit\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AnnouncementModal;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport AnnouncementModal from \"../../components/AnnouncementModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\n\n\n\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_ANNOUNCEMENTS\") {\n    const announcements = action.payload;\n    const newAnnouncements = [];\n\n    if (isArray(announcements)) {\n      announcements.forEach((announcement) => {\n        const announcementIndex = state.findIndex(\n          (u) => u.id === announcement.id\n        );\n        if (announcementIndex !== -1) {\n          state[announcementIndex] = announcement;\n        } else {\n          newAnnouncements.push(announcement);\n        }\n      });\n    }\n\n    return [...state, ...newAnnouncements];\n  }\n\n  if (action.type === \"UPDATE_ANNOUNCEMENTS\") {\n    const announcement = action.payload;\n    const announcementIndex = state.findIndex((u) => u.id === announcement.id);\n\n    if (announcementIndex !== -1) {\n      state[announcementIndex] = announcement;\n      return [...state];\n    } else {\n      return [announcement, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_ANNOUNCEMENT\") {\n    const announcementId = action.payload;\n\n    const announcementIndex = state.findIndex((u) => u.id === announcementId);\n    if (announcementIndex !== -1) {\n      state.splice(announcementIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Announcements = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedAnnouncement, setSelectedAnnouncement] = useState(null);\n  const [deletingAnnouncement, setDeletingAnnouncement] = useState(null);\n  const [announcementModalOpen, setAnnouncementModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [announcements, dispatch] = useReducer(reducer, []);\n\n\n  // trava para nao acessar pagina que não pode  \nuseEffect(() => {\n  async function fetchData() {\n    if (!user.super) {\n      toast.error(\"Esta empresa não possui permissão para acessar essa página! Estamos lhe redirecionando.\");\n      setTimeout(() => {\n        history.push(`/`)\n      }, 1000);\n    }\n  }\n  fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n\n\n\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchAnnouncements();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-announcement`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_ANNOUNCEMENTS\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_ANNOUNCEMENT\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchAnnouncements = async () => {\n    try {\n      const { data } = await api.get(\"/announcements/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_ANNOUNCEMENTS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenAnnouncementModal = () => {\n    setSelectedAnnouncement(null);\n    setAnnouncementModalOpen(true);\n  };\n\n  const handleCloseAnnouncementModal = () => {\n    setSelectedAnnouncement(null);\n    setAnnouncementModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditAnnouncement = (announcement) => {\n    setSelectedAnnouncement(announcement);\n    setAnnouncementModalOpen(true);\n  };\n\n  const handleDeleteAnnouncement = async (announcementId) => {\n    try {\n      await api.delete(`/announcements/${announcementId}`);\n      toast.success(i18n.t(\"announcements.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingAnnouncement(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const translatePriority = (val) => {\n    if (val === 1) {\n      return \"Alta\";\n    }\n    if (val === 2) {\n      return \"Média\";\n    }\n    if (val === 3) {\n      return \"Baixa\";\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingAnnouncement &&\n          `${i18n.t(\"announcements.confirmationModal.deleteTitle\")} ${\n            deletingAnnouncement.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteAnnouncement(deletingAnnouncement.id)}\n      >\n        {i18n.t(\"announcements.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <AnnouncementModal\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchAnnouncements();\n        }}\n        open={announcementModalOpen}\n        onClose={handleCloseAnnouncementModal}\n        aria-labelledby=\"form-dialog-title\"\n        announcementId={selectedAnnouncement && selectedAnnouncement.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"announcements.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"announcements.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenAnnouncementModal}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"announcements.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.title\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.priority\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.mediaName\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {announcements.map((announcement) => (\n                <TableRow key={announcement.id}>\n                  <TableCell align=\"center\">{announcement.title}</TableCell>\n                  <TableCell align=\"center\">\n                    {translatePriority(announcement.priority)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {announcement.mediaName ?? \"Sem anexo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {announcement.status ? \"ativo\" : \"inativo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditAnnouncement(announcement)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingAnnouncement(announcement);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={5} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\n\n\n\n\nexport default Announcements;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useDate } from \"../../hooks/useDate\";\nimport Typography from '@material-ui/core/Typography';\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    height: \"calc(100% - 58px)\",\n    overflow: \"hidden\",\n    borderRadius: 0,\n  },\n  chatList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  inline: {\n    color: \"white\"\n  }\n}));\n\nexport default function ChatList({\n  chats,\n  handleSelectChat,\n  handleDeleteChat,\n  handleEditChat,\n  pageInfo,\n  loading,\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n  const { datetimeToClient } = useDate();\n\n  const [confirmationModal, setConfirmModalOpen] = useState(false);\n  const [selectedChat, setSelectedChat] = useState({});\n\n  const { id } = useParams();\n\n  const goToMessages = async (chat) => {\n    if (unreadMessages(chat) > 0) {\n      try {\n        await api.post(`/chats/${chat.id}/read`, { userId: user.id });\n      } catch (err) { }\n    }\n\n    if (id !== chat.uuid) {\n      history.push(`/chats/${chat.uuid}`);\n      handleSelectChat(chat);\n    }\n  };\n\n  const handleDelete = () => {\n    handleDeleteChat(selectedChat);\n  };\n\n  const unreadMessages = (chat) => {\n    const currentUser = chat.users.find((u) => u.userId === user.id);\n    return currentUser.unreads;\n  };\n\n  const getPrimaryText = (chat) => {\n    const mainText = chat.title;\n    const unreads = unreadMessages(chat);\n    return (\n      <>\n        {mainText}\n        {unreads > 0 && (\n          <Chip\n            size=\"small\"\n            style={{ marginLeft: 5 }}\n            label={unreads}\n            color=\"secondary\"\n          />\n        )}\n      </>\n    );\n  };\n\n  const getSecondaryText = (chat) => {\n    return chat.lastMessage !== \"\"\n      ? `${datetimeToClient(chat.updatedAt)}: ${chat.lastMessage}`\n      : \"\";\n  };\n\n  const getItemStyle = (chat) => {\n    return {\n      borderLeft: chat.uuid === id ? \"6px solid #002d6e\" : null,\n      backgroundColor: chat.uuid === id ? \"#7f7f7f\" : null,\n    };\n  };\n\n  return (\n    <>\n      <ConfirmationModal\n        title={\"Excluir Conversa\"}\n        open={confirmationModal}\n        onClose={setConfirmModalOpen}\n        onConfirm={handleDelete}\n      >\n        Esta ação não pode ser revertida, confirmar?\n      </ConfirmationModal>\n      <div className={classes.mainContainer}>\n        <div className={classes.chatList}>\n          <List>\n            {Array.isArray(chats) &&\n              chats.length > 0 &&\n              chats.map((chat, key) => (\n                <ListItem\n                  onClick={() => goToMessages(chat)}\n                  key={key}\n                  className={classes.listItem}\n                  style={getItemStyle(chat)}\n                  button\n                >\n                  <ListItemText\n                    primary={\n                      <>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          {getPrimaryText(chat)}\n                        </Typography>\n                      </>\n                    }\n                    secondary={\n                      <>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          {getSecondaryText(chat)}\n                        </Typography>\n                      </>\n                    }\n                  />\n\n                  {chat.ownerId === user.id && (\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={() => {\n                          goToMessages(chat).then(() => {\n                            handleEditChat(chat);\n                          });\n                        }}\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        style={{ marginRight: 5, color: \"white\" }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          setSelectedChat(chat);\n                          setConfirmModalOpen(true);\n                        }}\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        style={{ color: \"white\" }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  )}\n                </ListItem>\n              ))}\n          </List>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useDate } from \"../../hooks/useDate\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    overflow: \"hidden\",\n    borderRadius: 0,\n    height: \"100%\",\n    borderLeft: \"1px solid rgba(0, 0, 0, 0.12)\",\n    // backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n  },\n  messageList: {\n    position: \"relative\",\n    overflowY: \"auto\",\n    height: \"100%\",\n    ...theme.scrollbarStyles,\n    background: theme.palette.total,\n  },\n  inputArea: {\n    position: \"relative\",\n    height: \"auto\",\n  },\n  input: {\n    padding: \"20px\",\n  },\n  buttonSend: {\n    margin: theme.spacing(1),\n  },\n  boxLeft: {\n    padding: \"10px 10px 5px\",\n    margin: \"10px\",\n    position: \"relative\",\n    backgroundColor: \"white\",\n    color: \"#7f7f7f\",\n    maxWidth: 300,\n    borderRadius: 10,\n    borderBottomLeftRadius: 0,\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  boxRight: {\n    padding: \"10px 10px 5px\",\n    margin: \"10px 10px 10px auto\",\n    position: \"relative\",\n    backgroundColor: \"#E3F3F9\",\n    color: \"#7f7f7f\",\n    textAlign: \"right\",\n    maxWidth: 300,\n    borderRadius: 10,\n    borderBottomRightRadius: 0,\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n}));\n\nexport default function ChatMessages({\n  chat,\n  messages,\n  handleSendMessage,\n  handleLoadMore,\n  scrollToBottomRef,\n  pageInfo,\n  loading,\n}) {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const { datetimeToClient } = useDate();\n  const baseRef = useRef();\n\n  const [contentMessage, setContentMessage] = useState(\"\");\n\n  const scrollToBottom = () => {\n    if (baseRef.current) {\n      baseRef.current.scrollIntoView({});\n    }\n  };\n\n  const unreadMessages = (chat) => {\n    if (chat !== undefined) {\n      const currentUser = chat.users.find((u) => u.userId === user.id);\n      return currentUser.unreads > 0;\n    }\n    return 0;\n  };\n\n  useEffect(() => {\n    if (unreadMessages(chat) > 0) {\n      try {\n        api.post(`/chats/${chat.id}/read`, { userId: user.id });\n      } catch (err) {}\n    }\n    scrollToBottomRef.current = scrollToBottom;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleScroll = (e) => {\n    const { scrollTop } = e.currentTarget;\n    if (!pageInfo.hasMore || loading) return;\n    if (scrollTop < 600) {\n      handleLoadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.mainContainer}>\n      <div onScroll={handleScroll} className={classes.messageList}>\n        {Array.isArray(messages) &&\n          messages.map((item, key) => {\n            if (item.senderId === user.id) {\n              return (\n                <Box key={key} className={classes.boxRight}>\n                  <Typography variant=\"subtitle2\">\n                    {item.sender.name}\n                  </Typography>\n                  {item.message}\n                  <Typography variant=\"caption\" display=\"block\">\n                    {datetimeToClient(item.createdAt)}\n                  </Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box key={key} className={classes.boxLeft}>\n                  <Typography variant=\"subtitle2\">\n                    {item.sender.name}\n                  </Typography>\n                  {item.message}\n                  <Typography variant=\"caption\" display=\"block\">\n                    {datetimeToClient(item.createdAt)}\n                  </Typography>\n                </Box>\n              );\n            }\n          })}\n        <div ref={baseRef}></div>\n      </div>\n      <div className={classes.inputArea}>\n        <FormControl variant=\"outlined\" fullWidth>\n          <Input\n            multiline\n            value={contentMessage}\n            onKeyUp={(e) => {\n              if (e.key === \"Enter\" && contentMessage.trim() !== \"\") {\n                handleSendMessage(contentMessage);\n                setContentMessage(\"\");\n              }\n            }}\n            onChange={(e) => setContentMessage(e.target.value)}\n            className={classes.input}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    if (contentMessage.trim() !== \"\") {\n                      handleSendMessage(contentMessage);\n                      setContentMessage(\"\");\n                    }\n                  }}\n                  className={classes.buttonSend}\n                >\n                  <SendIcon />\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  Paper,\n  Tab,\n  Tabs,\n  TextField,\n} from \"@material-ui/core\";\nimport ChatList from \"./ChatList\";\nimport ChatMessages from \"./ChatMessages\";\nimport { UsersFilter } from \"../../components/UsersFilter\";\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nimport { has, isObject } from \"lodash\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    padding: theme.spacing(2),\n    height: `calc(100% - 48px)`,\n    overflowY: \"hidden\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  gridContainer: {\n    flex: 1,\n    height: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    background: theme.palette.total,\n  },\n  gridItem: {\n    height: \"100%\",\n  },\n  gridItemTab: {\n    height: \"92%\",\n    width: \"100%\",\n  },\n  btnContainer: {\n    textAlign: \"right\",\n    padding: 10,\n  },\n}));\n\nexport function ChatModal({\n  open,\n  chat,\n  type,\n  handleClose,\n  handleLoadNewChat,\n}) {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    setTitle(\"\");\n    setUsers([]);\n    if (type === \"edit\") {\n      const userList = chat.users.map((u) => ({\n        id: u.user.id,\n        name: u.user.name,\n      }));\n      setUsers(userList);\n      setTitle(chat.title);\n    }\n  }, [chat, open, type]);\n\n  const handleSave = async () => {\n    try {\n      if (type === \"edit\") {\n        await api.put(`/chats/${chat.id}`, {\n          users,\n          title,\n        });\n      } else {\n        const { data } = await api.post(\"/chats\", {\n          users,\n          title,\n        });\n        handleLoadNewChat(data);\n      }\n      handleClose();\n    } catch (err) {}\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Conversa</DialogTitle>\n      <DialogContent>\n        <Grid spacing={2} container>\n          <Grid xs={12} style={{ padding: 18 }} item>\n            <TextField\n              label=\"Título\"\n              placeholder=\"Título\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid xs={12} item>\n            <UsersFilter\n              onFiltered={(users) => setUsers(users)}\n              initialUsers={users}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n        <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n          Salvar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Chat(props) {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"new\");\n  const [currentChat, setCurrentChat] = useState({});\n  const [chats, setChats] = useState([]);\n  const [chatsPageInfo, setChatsPageInfo] = useState({ hasMore: false });\n  const [messages, setMessages] = useState([]);\n  const [messagesPageInfo, setMessagesPageInfo] = useState({ hasMore: false });\n  const [messagesPage, setMessagesPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState(0);\n  const isMounted = useRef(true);\n  const scrollToBottomRef = useRef();\n  const { id } = useParams();\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      findChats().then((data) => {\n        const { records } = data;\n        if (records.length > 0) {\n          setChats(records);\n          setChatsPageInfo(data);\n\n          if (id && records.length) {\n            const chat = records.find((r) => r.uuid === id);\n            selectChat(chat);\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      findMessages(currentChat.id).then(() => {\n        if (typeof scrollToBottomRef.current === \"function\") {\n          setTimeout(() => {\n            scrollToBottomRef.current();\n          }, 300);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-chat-user-${user.id}`, (data) => {\n      if (data.action === \"create\") {\n        setChats((prev) => [data.record, ...prev]);\n      }\n      if (data.action === \"update\") {\n        const changedChats = chats.map((chat) => {\n          if (chat.id === data.record.id) {\n            setCurrentChat(data.record);\n            return {\n              ...data.record,\n            };\n          }\n          return chat;\n        });\n        setChats(changedChats);\n      }\n    });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"delete\") {\n        const filteredChats = chats.filter((c) => c.id !== +data.id);\n        setChats(filteredChats);\n        setMessages([]);\n        setMessagesPage(1);\n        setMessagesPageInfo({ hasMore: false });\n        setCurrentChat({});\n        history.push(\"/chats\");\n      }\n    });\n\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      socket.on(`company-${companyId}-chat-${currentChat.id}`, (data) => {\n        if (data.action === \"new-message\") {\n          setMessages((prev) => [...prev, data.newMessage]);\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.newMessage.chatId) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n\n        if (data.action === \"update\") {\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.chat.id) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n      });\n    }\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n\n  const selectChat = (chat) => {\n    try {\n      setMessages([]);\n      setMessagesPage(1);\n      setCurrentChat(chat);\n      setTab(1);\n    } catch (err) {}\n  };\n\n  const sendMessage = async (contentMessage) => {\n    setLoading(true);\n    try {\n      await api.post(`/chats/${currentChat.id}/messages`, {\n        message: contentMessage,\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const deleteChat = async (chat) => {\n    try {\n      await api.delete(`/chats/${chat.id}`);\n    } catch (err) {}\n  };\n\n  const findMessages = async (chatId) => {\n    setLoading(true);\n    try {\n      const { data } = await api.get(\n        `/chats/${chatId}/messages?pageNumber=${messagesPage}`\n      );\n      setMessagesPage((prev) => prev + 1);\n      setMessagesPageInfo(data);\n      setMessages((prev) => [...data.records, ...prev]);\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const loadMoreMessages = async () => {\n    if (!loading) {\n      findMessages(currentChat.id);\n    }\n  };\n\n  const findChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const renderGrid = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid className={classes.gridItem} md={3} item>\n          {user.profile === \"admin\" && (\n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => {\n                  setDialogType(\"new\");\n                  setShowDialog(true);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Nova\n              </Button>\n            </div>\n          )}\n          <ChatList\n            chats={chats}\n            pageInfo={chatsPageInfo}\n            loading={loading}\n            handleSelectChat={(chat) => selectChat(chat)}\n            handleDeleteChat={(chat) => deleteChat(chat)}\n            handleEditChat={() => {\n              setDialogType(\"edit\");\n              setShowDialog(true);\n            }}\n          />\n        </Grid>\n        <Grid className={classes.gridItem} md={9} item>\n          {isObject(currentChat) && has(currentChat, \"id\") && (\n            <ChatMessages\n              chat={currentChat}\n              scrollToBottomRef={scrollToBottomRef}\n              pageInfo={messagesPageInfo}\n              messages={messages}\n              loading={loading}\n              handleSendMessage={sendMessage}\n              handleLoadMore={loadMoreMessages}\n            />\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const renderTab = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid md={12} item>\n          <Tabs\n            value={tab}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(e, v) => setTab(v)}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Chats\" />\n            <Tab label=\"Mensagens\" />\n          </Tabs>\n        </Grid>\n        {tab === 0 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => setShowDialog(true)}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Novo\n              </Button>\n            </div>\n            <ChatList\n              chats={chats}\n              pageInfo={chatsPageInfo}\n              loading={loading}\n              handleSelectChat={(chat) => selectChat(chat)}\n              handleDeleteChat={(chat) => deleteChat(chat)}\n            />\n          </Grid>\n        )}\n        {tab === 1 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            {isObject(currentChat) && has(currentChat, \"id\") && (\n              <ChatMessages\n                scrollToBottomRef={scrollToBottomRef}\n                pageInfo={messagesPageInfo}\n                messages={messages}\n                loading={loading}\n                handleSendMessage={sendMessage}\n                handleLoadMore={loadMoreMessages}\n              />\n            )}\n          </Grid>\n        )}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <ChatModal\n        type={dialogType}\n        open={showDialog}\n        chat={currentChat}\n        handleLoadNewChat={(data) => {\n          setMessages([]);\n          setMessagesPage(1);\n          setCurrentChat(data);\n          setTab(1);\n          history.push(`/chats/${data.uuid}`);\n        }}\n        handleClose={() => setShowDialog(false)}\n      />\n      <Paper className={classes.mainContainer}>\n        {isWidthUp(\"md\", props.width) ? renderGrid() : renderTab()}\n      </Paper>\n    </>\n  );\n}\n\nexport default withWidth()(Chat);\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport SubscriptionModal from \"../../components/SubscriptionModal\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainContainer from \"../../components/MainContainer\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst _formatDate = (date) => {\n  const now = new Date();\n  const past = new Date(date);\n  const diff = Math.abs(now.getTime() - past.getTime());\n  const days = Math.ceil(diff / (1000 * 60 * 60 * 24));\n\n  return days;\n}\n\nconst Contacts = () => {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n\n  const [loading,] = useState(false);\n  const [, setPageNumber] = useState(1);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const [hasMore,] = useState(false);\n\n\n  const handleOpenContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer className={classes.mainContainer}>\n      <SubscriptionModal\n        open={contactModalOpen}\n        onClose={handleCloseContactModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactId={selectedContactId}\n      ></SubscriptionModal>\n\n      <MainHeader>\n        <Title>Assinatura</Title>\n      </MainHeader>\n      <Grid item xs={12} sm={4}>\n        <Paper\n          className={classes.mainPaper}\n          variant=\"outlined\"\n          onScroll={handleScroll}\n        >\n\n          <div>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Período de teste\"\n              defaultValue={`Seu período de teste termina em ${_formatDate(user?.company?.trialExpiration)} dias!`}\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n            />\n\n          </div>\n\n          <div>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Email de cobrança\"\n              defaultValue={user?.company?.email}\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n            />\n\n          </div>\n\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleOpenContactModal}\n              fullWidth\n            >\n              Assine Agora!\n            </Button>\n          </div>\n\n        </Paper>\n      </Grid>\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useEffect, useReducer, useContext, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../../services/api\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport Board from 'react-trello';\nimport { toast } from \"react-toastify\";\nimport { i18n } from \"../../translate/i18n\";\nimport { useHistory } from 'react-router-dom';\nimport { socketConnection } from \"../../services/socket\";\nimport toastError from \"../../errors/toastError\";\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(1),\n    overflowY: \"hidden\",\n  },\n\n  button: {\n    background: \"#10a110\",\n    border: \"none\",\n    padding: \"10px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    borderRadius: \"5px\",\n  },\n\n}));\n\n\n\nconst Kanban = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [tags, setTags] = useState([]);\n  const [reloadData, setReloadData] = useState(false);\n  const [isInitialLoadComplete, setIsInitialLoadComplete] = useState(false);\n  const [file, setFile] = useState({ lanes: [] });\n  const [tickets, setTickets] = useState([]);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n  const jsonString = user.queues.map(queue => queue.UserQueue.queueId);\n\n\n\n  useEffect(() => {\n    popularCards(jsonString);\n  }, [tags, tickets, reloadData]);\n\n  useEffect(() => {\n    fetchTags();\n  }, []);\n\n  const fetchTags = async () => {\n    try {\n      const response = await api.get(\"/tags/kanban\");\n      const fetchedTags = response.data.lista || [];\n      //console.log(response);\n      setTags(fetchedTags);\n\n      // Fetch tickets after fetching tags\n      await fetchTickets(jsonString);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchTickets = async (jsonString) => {\n    try {\n      const { data } = await api.get(\"/tickets/kanban\", {\n        params: {\n          queueIds: JSON.stringify(jsonString),\n          teste: true\n        }\n      });\n      setTickets(data.tickets);\n    } catch (err) {\n      console.log(err);\n      setTickets([]);\n    }\n  };\n\n  const handleCardClick = (uuid) => {\n    //console.log(\"Clicked on card with UUID:\", uuid);\n    history.push('/tickets/' + uuid);\n  };\n\n  const handleCardMove = async (cardId, sourceLaneId, targetLaneId) => {\n    try {\n\n      await api.delete(`/ticket-tags/${targetLaneId}`);\n      toast.success('Ticket Tag Removido!');\n      await api.put(`/ticket-tags/${targetLaneId}/${sourceLaneId}`);\n      toast.success('Ticket Tag Adicionado com Sucesso!');\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const popularCards = (jsonString) => {\n    const ticketsNaoAgrupados = tickets.filter(ticket => ticket.tags.length === 0 && !ticket.isGroup);\n\n    const tagsOrdenadas = tags.sort((a, b) => a.position - b.position);\n\n    const lanes = [\n      {\n        id: \"lane0\",\n        title: \"Em Aberto\",\n        style: {\n          maxHeight: '80vh',\n        },\n        cards: ticketsNaoAgrupados.map(ticket => ({\n          id: ticket.id.toString(),\n          label: \"Ticket nº \" + ticket.id.toString(),\n          description: (\n            <div>\n              <p>\n                {ticket.contact.number}\n                <br />\n                {ticket.lastMessage}\n              </p>\n              <button className={classes.button} onClick={() => handleCardClick(ticket.uuid)}>Ver Ticket</button>\n            </div>\n          ),\n          title: ticket.contact.name,\n          draggable: true,\n          href: \"/tickets/\" + ticket.uuid,\n        })),\n\n      },\n      ...tagsOrdenadas.map(tag => {\n        const ticketsFiltrados = tickets.filter(ticket => {\n          const tagIds = ticket.tags.map(tag => tag.id);\n          return tagIds.includes(tag.id);\n        });\n\n        return {\n          id: tag.id.toString(),\n          title: tag.name,\n          cards: ticketsFiltrados.map(ticket => ({\n            id: ticket.id.toString(),\n            label: \"Ticket nº \" + ticket.id.toString(),\n            description: (\n              <div>\n                <p>\n                  {ticket.contact.number}\n                  <br />\n                  {ticket.lastMessage}\n                </p>\n                <button className={classes.button} onClick={() => handleCardClick(ticket.uuid)}>Ver Ticket</button>\n              </div>\n            ),\n            title: ticket.contact.name,\n            draggable: true,\n            href: \"/tickets/\" + ticket.uuid,\n          })),\n          style: { maxHeight: '80vh', backgroundColor: tag.color, color: \"white\" }\n        };\n      }),\n    ];\n\n    setFile({ lanes });\n  };\n\n  const handleUpdateLanes = async (data) => {\n    try {\n\n      const { data: response } = await api.put(\"/tags/kanban\", data);\n\n    } catch (error) {\n      toastError('Falha ao alterar posições das lanes');\n    }\n  }\n\n\n\n  return (\n    <div className={classes.root}>\n      <Board\n        data={file}\n\n        handleLaneDragEnd={(board, sourceLaneId, targetLaneId) => {\n\n          const currentOrder = file.lanes;\n\n          function moverObjeto(antigoIndex, novoIndex) {\n\n            const objetoMovido = currentOrder.splice(antigoIndex, 1)[0];\n            currentOrder.splice(novoIndex, 0, objetoMovido);\n            return currentOrder;\n          }\n\n          const newOrder = moverObjeto(board, sourceLaneId);\n\n          handleUpdateLanes(newOrder);\n        }}\n        onCardMoveAcrossLanes={handleCardMove}\n        style={{ height: '90vh', backgroundColor: 'rgba(252, 252, 252, 0.03)' }}\n        draggable={true}\n      />\n    </div>\n  );\n};\n\n\nexport default Kanban;","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport LoggedInLayout from \"../layout\";\nimport Dashboard from \"../pages/Dashboard/\";\nimport TicketResponsiveContainer from \"../pages/TicketResponsiveContainer\";\nimport Signup from \"../pages/Signup/\";\nimport Login from \"../pages/Login/\";\nimport Connections from \"../pages/Connections/\";\nimport SettingsCustom from \"../pages/SettingsCustom/\";\nimport Financeiro from \"../pages/Financeiro/\";\nimport Users from \"../pages/Users\";\nimport Contacts from \"../pages/Contacts/\";\nimport Queues from \"../pages/Queues/\";\nimport Tags from \"../pages/Tags/\";\nimport MessagesAPI from \"../pages/MessagesAPI/\";\nimport Helps from \"../pages/Helps/\";\nimport ContactLists from \"../pages/ContactLists/\";\nimport ContactListItems from \"../pages/ContactListItems/\";\n// import Companies from \"../pages/Companies/\";\nimport QuickMessages from \"../pages/QuickMessages/\";\nimport { AuthProvider } from \"../context/Auth/AuthContext\";\nimport { TicketsContextProvider } from \"../context/Tickets/TicketsContext\";\nimport { WhatsAppsProvider } from \"../context/WhatsApp/WhatsAppsContext\";\nimport Route from \"./Route\";\nimport Schedules from \"../pages/Schedules\";\nimport Campaigns from \"../pages/Campaigns\";\nimport CampaignsConfig from \"../pages/CampaignsConfig\";\nimport CampaignReport from \"../pages/CampaignReport\";\nimport Annoucements from \"../pages/Annoucements\";\nimport Chat from \"../pages/Chat\";\nimport Subscription from \"../pages/Subscription/\";\nimport Kanban from \"../pages/Kanban\"\n\n\nconst Routes = () => {\n  const [showCampaigns, setShowCampaigns] = useState(false);\n\n  useEffect(() => {\n    const cshow = localStorage.getItem(\"cshow\");\n    if (cshow !== undefined) {\n      setShowCampaigns(true);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <TicketsContextProvider>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            {/* <Route exact path=\"/create-company\" component={Companies} /> */}\n            <WhatsAppsProvider>\n              <LoggedInLayout>\n                <Route exact path=\"/\" component={Dashboard} isPrivate />\n                <Route\n                  exact\n                  path=\"/tickets/:ticketId?\"\n                  component={TicketResponsiveContainer}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/connections\"\n                  component={Connections}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/quick-messages\"\n                  component={QuickMessages}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/schedules\"\n                  component={Schedules}\n                  isPrivate\n                />\n                <Route exact path=\"/tags\" component={Tags} isPrivate />\n                <Route exact path=\"/contacts\" component={Contacts} isPrivate />\n                <Route exact path=\"/helps\" component={Helps} isPrivate />\n                <Route exact path=\"/users\" component={Users} isPrivate />\n                <Route\n                  exact\n                  path=\"/messages-api\"\n                  component={MessagesAPI}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={SettingsCustom}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/financeiro\"\n                  component={Financeiro}\n                  isPrivate\n                />\n                <Route exact path=\"/queues\" component={Queues} isPrivate />\n                <Route\n                  exact\n                  path=\"/announcements\"\n                  component={Annoucements}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/subscription\"\n                  component={Subscription}\n                  isPrivate\n                />\n                \n                <Route\n                  exact\n                  path=\"/Kanban\"\n                  component={Kanban}\n                  isPrivate\n                />\n                \n                \n                <Route exact path=\"/chats/:id?\" component={Chat} isPrivate />\n                {showCampaigns && (\n                  <>\n                    <Route\n                      exact\n                      path=\"/contact-lists\"\n                      component={ContactLists}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/contact-lists/:contactListId/contacts\"\n                      component={ContactListItems}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaigns\"\n                      component={Campaigns}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaign/:campaignId/report\"\n                      component={CampaignReport}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaigns-config\"\n                      component={CampaignsConfig}\n                      isPrivate\n                    />\n                    \n                  </>\n                )}\n              </LoggedInLayout>\n            </WhatsAppsProvider>\n          </Switch>\n          <ToastContainer autoClose={3000} />\n        </TicketsContextProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport { ptBR } from \"@material-ui/core/locale\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport ColorModeContext from \"./layout/themeContext\";\n\nimport Routes from \"./routes\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n    const [locale, setLocale] = useState();\n\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const preferredTheme = window.localStorage.getItem(\"preferredTheme\");\n    const [mode, setMode] = useState(preferredTheme ? preferredTheme : prefersDarkMode ? \"dark\" : \"light\");\n\n    const colorMode = React.useMemo(\n        () => ({\n            toggleColorMode: () => {\n                setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n            },\n        }),\n        []\n    );\n\n    const theme = createTheme(\n        {\n            scrollbarStyles: {\n                \"&::-webkit-scrollbar\": {\n                    width: '8px',\n                    height: '8px',\n                },\n                \"&::-webkit-scrollbar-thumb\": {\n                    boxShadow: 'inset 0 0 6px rgba(0, 0, 0, 0.3)',\n                    backgroundColor: \"#e8e8e8\",\n                },\n            },\n            scrollbarStylesSoft: {\n                \"&::-webkit-scrollbar\": {\n                    width: \"8px\",\n                },\n                \"&::-webkit-scrollbar-thumb\": {\n                    backgroundColor: mode === \"light\" ? \"#F3F3F3\" : \"#333333\",\n                },\n            },\n            palette: {\n                type: mode,\n                primary: { main: \"#09B990\" },\n                textPrimary: mode === \"light\" ? \"#09B990\" : \"#FFFFFF\",\n                borderPrimary: mode === \"light\" ? \"#09B990\" : \"#FFFFFF\",\n                dark: { main: mode === \"light\" ? \"#333333\" : \"#F3F3F3\" },\n                light: { main: mode === \"light\" ? \"#F3F3F3\" : \"#333333\" },\n                tabHeaderBackground: mode === \"light\" ? \"#EEE\" : \"#1B1B1B\",\n                optionsBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n                fancyBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n                total: mode === \"light\" ? \"#fff\" : \"#222\",\n                messageIcons: mode === \"light\" ? \"grey\" : \"#F3F3F3\",\n                inputBackground: mode === \"light\" ? \"#FFFFFF\" : \"#333\",\n                barraSuperior: \"#044842\"\n            },\n            mode,\n        },\n        locale\n    );\n\n    useEffect(() => {\n        const i18nlocale = localStorage.getItem(\"i18nextLng\");\n        const browserLocale =\n            i18nlocale.substring(0, 2) + i18nlocale.substring(3, 5);\n\n        if (browserLocale === \"ptBR\") {\n            setLocale(ptBR);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.localStorage.setItem(\"preferredTheme\", mode);\n    }, [mode]);\n\n    return (\n        <ColorModeContext.Provider value={{ colorMode }}>\n            <ThemeProvider theme={theme}>\n                <QueryClientProvider client={queryClient}>\n                    <Routes />\n                </QueryClientProvider>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\t<CssBaseline>\n\t\t<App />\n\t</CssBaseline>,\n\tdocument.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n// \t<React.StrictMode>\n// \t\t<CssBaseline>\n// \t\t\t<App />\n// \t\t</CssBaseline>,\n//   </React.StrictMode>\n\n// \tdocument.getElementById(\"root\")\n// );\n","module.exports = __webpack_public_path__ + \"static/media/planilha.549edeba.xlsx\";","module.exports = __webpack_public_path__ + \"static/media/sound.9fd5812c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo1.6b635334.png\";","module.exports = __webpack_public_path__ + \"static/media/chat_notify.2529c259.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wa-background.2675a051.png\";","module.exports = __webpack_public_path__ + \"static/media/wa-background-dark.8244f042.png\";","module.exports = __webpack_public_path__ + \"static/media/logologin.93d0bc0a.png\";"],"sourceRoot":""}